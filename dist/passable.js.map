{"version":3,"sources":["webpack://Passable/webpack/universalModuleDefinition","webpack://Passable/webpack/bootstrap","webpack://Passable/./node_modules/proxy-polyfill/src/proxy.js","webpack://Passable/./src/test_runner/index.js","webpack://Passable/./src/result_object/index.js","webpack://Passable/./src/constants/errors/index.js","webpack://Passable/./src/constants/modules/index.js","webpack://Passable/./src/constants/index.js","webpack://Passable/./src/helpers/runtime_error/index.js","webpack://Passable/./src/helpers/index.js","webpack://Passable/./src/Specific/index.js","webpack://Passable/./src/Passable.js","webpack://Passable/./src/Enforce/runnables/compounds/run/index.js","webpack://Passable/./src/Enforce/runnables/compounds/all_of/index.js","webpack://Passable/./src/Enforce/runnables/compounds/any_of/index.js","webpack://Passable/./src/Enforce/runnables/compounds/none_of/index.js","webpack://Passable/./src/Enforce/runnables/compounds/index.js","webpack://Passable/./src/Enforce/runnables/rules/helpers/expect_type/index.js","webpack://Passable/./src/Enforce/runnables/rules/helpers/find_array_values_in_array/index.js","webpack://Passable/./src/Enforce/runnables/rules/helpers/find_array_values_in_map_keys/index.js","webpack://Passable/./src/Enforce/runnables/rules/helpers/find_val_in_array_or_string/index.js","webpack://Passable/./src/Enforce/runnables/rules/helpers/get_size/index.js","webpack://Passable/./src/Enforce/runnables/rules/helpers/is_type/index.js","webpack://Passable/./src/Enforce/runnables/rules/helpers/reduce_array_to_map/index.js","webpack://Passable/./src/Enforce/runnables/rules/helpers/index.js","webpack://Passable/./src/Enforce/runnables/rules/lang/is_array/index.js","webpack://Passable/./src/Enforce/runnables/rules/lang/is_number/index.js","webpack://Passable/./src/Enforce/runnables/rules/lang/is_string/index.js","webpack://Passable/./src/Enforce/runnables/rules/content/matches/index.js","webpack://Passable/./src/Enforce/runnables/rules/content/inside/index.js","webpack://Passable/./src/Enforce/runnables/rules/content/is_numeric/index.js","webpack://Passable/./src/Enforce/runnables/rules/size/is_empty/index.js","webpack://Passable/./src/Enforce/runnables/rules/size/size_equals/index.js","webpack://Passable/./src/Enforce/runnables/rules/size/larger_than/index.js","webpack://Passable/./src/Enforce/runnables/rules/size/smaller_than/index.js","webpack://Passable/./src/Enforce/runnables/rules/size/smaller_than_or_equals/index.js","webpack://Passable/./src/Enforce/runnables/rules/size/larger_than_or_equals/index.js","webpack://Passable/./src/Enforce/runnables/rules/helpers/extend_negative_rules/index.js","webpack://Passable/./src/Enforce/runnables/rules/index.js","webpack://Passable/./src/Enforce/runnables/index.js","webpack://Passable/./src/Enforce/runners/compound/index.js","webpack://Passable/./src/Enforce/runners/rule/index.js","webpack://Passable/./src/Enforce/runners/index.js","webpack://Passable/./src/Enforce/helpers/root.js","webpack://Passable/./src/Enforce/helpers/safe_proxy.js","webpack://Passable/./src/Enforce/index.js","webpack://Passable/./src/validate/index.js","webpack://Passable/./src/index.js"],"names":["testRunner","test","isValid","res","hasOwnProperty","valid","e","testRunnerAsync","done","fail","then","WARN","FAIL","severities","ResultObject","name","hasValidationErrors","hasValidationWarnings","failCount","warnCount","testCount","testsPerformed","validationErrors","validationWarnings","skipped","completionCallbacks","fieldName","statement","push","severity","selectedSeverity","includes","bumpTestWarning","bumpTestError","forEach","cb","callback","INVALID_FORM_NAME","ENFORCE_FAILED","EXPECT_TYPE_FAILURE","MISSING_ARGUMENT_TESTS","UNEXPECTED_ARGUMENT_SPECIFIC","VALIDATE_UNEXPECTED_TEST","PASSABLE","ENFORCE","VALIDATE","passableConstructor","errorBuilder","functionName","errorMessage","unexpectedArgs","type","position","runtimeError","TypeError","Error","val","Array","isArray","JSON","stringify","specific","Specific","is","length","only","populateGroup","not","group","field","item","every","tests","pending","filter","t","runCompletionCallbacks","excludes","addToSkipped","initFieldCounters","Promise","addPendingTest","clearPendingTest","bumpTestCounter","runPendingTests","run","value","key","rules","args","allOf","validations","Object","keys","anyOf","some","noneOf","expectType","findArrayValuesInArray","values","array","reducedArray","allItemsFound","findArrayValuesInMapKeys","map","element","has","findValInArrayOrString","container","indexOf","getSize","isNaN","isType","types","reduceArrayToMap","reduce","acc","set","Map","expect","negativeForm","isNumber","isString","matches","regex","RegExp","inside","arg1","isNumeric","result","parseFloat","isFinite","isEmpty","sizeEquals","largerThan","smallerThan","smallerThanOrEquals","largerThanOrEquals","extendNegativeRules","rule","compound","allRules","runner","root","undefined","constructor","window","safeProxy","target","handler","Proxy","ProxyPolyfill","customRules","proxy","allRunnables","get","fnName","runners","assign","enforce","validate","_","passable","suite","VERSION","Enforce"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;AClFA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,EAAE;AACf,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,KAAK;AACpD;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,qEAAqE,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,+BAA+B,UAAU;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"passable.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Passable\"] = factory();\n\telse\n\t\troot[\"Passable\"] = factory();\n})(((() => 0).constructor(\"return this\"))(), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nmodule.exports = function proxyPolyfill() {\n  let lastRevokeFn = null;\n  let ProxyPolyfill;\n\n  /**\n   * @param {*} o\n   * @return {boolean} whether this is probably a (non-null) Object\n   */\n  function isObject(o) {\n    return o ? (typeof o === 'object' || typeof o === 'function') : false;\n  }\n\n  /**\n   * @constructor\n   * @param {!Object} target\n   * @param {{apply, construct, get, set}} handler\n   */\n  ProxyPolyfill = function(target, handler) {\n    if (!isObject(target) || !isObject(handler)) {\n      throw new TypeError('Cannot create proxy with a non-object as target or handler');\n    }\n\n    // Construct revoke function, and set lastRevokeFn so that Proxy.revocable can steal it.\n    // The caller might get the wrong revoke function if a user replaces or wraps scope.Proxy\n    // to call itself, but that seems unlikely especially when using the polyfill.\n    let throwRevoked = function() {};\n    lastRevokeFn = function() {\n      throwRevoked = function(trap) {\n        throw new TypeError(`Cannot perform '${trap}' on a proxy that has been revoked`);\n      };\n    };\n\n    // Fail on unsupported traps: Chrome doesn't do this, but ensure that users of the polyfill\n    // are a bit more careful. Copy the internal parts of handler to prevent user changes.\n    const unsafeHandler = handler;\n    handler = { 'get': null, 'set': null, 'apply': null, 'construct': null };\n    for (let k in unsafeHandler) {\n      if (!(k in handler)) {\n        throw new TypeError(`Proxy polyfill does not support trap '${k}'`);\n      }\n      handler[k] = unsafeHandler[k];\n    }\n    if (typeof unsafeHandler === 'function') {\n      // Allow handler to be a function (which has an 'apply' method). This matches what is\n      // probably a bug in native versions. It treats the apply call as a trap to be configured.\n      handler.apply = unsafeHandler.apply.bind(unsafeHandler);\n    }\n\n    // Define proxy as this, or a Function (if either it's callable, or apply is set).\n    // TODO(samthor): Closure compiler doesn't know about 'construct', attempts to rename it.\n    let proxy = this;\n    let isMethod = false;\n    let isArray = false;\n    if (typeof target === 'function') {\n      proxy = function ProxyPolyfill() {\n        const usingNew = (this && this.constructor === proxy);\n        const args = Array.prototype.slice.call(arguments);\n        throwRevoked(usingNew ? 'construct' : 'apply');\n\n        if (usingNew && handler['construct']) {\n          return handler['construct'].call(this, target, args);\n        } else if (!usingNew && handler.apply) {\n          return handler.apply(target, this, args);\n        }\n\n        // since the target was a function, fallback to calling it directly.\n        if (usingNew) {\n          // inspired by answers to https://stackoverflow.com/q/1606797\n          args.unshift(target);  // pass class as first arg to constructor, although irrelevant\n          // nb. cast to convince Closure compiler that this is a constructor\n          const f = /** @type {!Function} */ (target.bind.apply(target, args));\n          return new f();\n        }\n        return target.apply(this, args);\n      };\n      isMethod = true;\n    } else if (target instanceof Array) {\n      proxy = [];\n      isArray = true;\n    }\n\n    // Create default getters/setters. Create different code paths as handler.get/handler.set can't\n    // change after creation.\n    const getter = handler.get ? function(prop) {\n      throwRevoked('get');\n      return handler.get(this, prop, proxy);\n    } : function(prop) {\n      throwRevoked('get');\n      return this[prop];\n    };\n    const setter = handler.set ? function(prop, value) {\n      throwRevoked('set');\n      const status = handler.set(this, prop, value, proxy);\n      // TODO(samthor): If the calling code is in strict mode, throw TypeError.\n      // if (!status) {\n        // It's (sometimes) possible to work this out, if this code isn't strict- try to load the\n        // callee, and if it's available, that code is non-strict. However, this isn't exhaustive.\n      // }\n    } : function(prop, value) {\n      throwRevoked('set');\n      this[prop] = value;\n    };\n\n    // Clone direct properties (i.e., not part of a prototype).\n    const propertyNames = Object.getOwnPropertyNames(target);\n    const propertyMap = {};\n    propertyNames.forEach(function(prop) {\n      if ((isMethod || isArray) && prop in proxy) {\n        return;  // ignore properties already here, e.g. 'bind', 'prototype' etc\n      }\n      const real = Object.getOwnPropertyDescriptor(target, prop);\n      const desc = {\n        enumerable: !!real.enumerable,\n        get: getter.bind(target, prop),\n        set: setter.bind(target, prop),\n      };\n      Object.defineProperty(proxy, prop, desc);\n      propertyMap[prop] = true;\n    });\n\n    // Set the prototype, or clone all prototype methods (always required if a getter is provided).\n    // TODO(samthor): We don't allow prototype methods to be set. It's (even more) awkward.\n    // An alternative here would be to _just_ clone methods to keep behavior consistent.\n    let prototypeOk = true;\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(proxy, Object.getPrototypeOf(target));\n    } else if (proxy.__proto__) {\n      proxy.__proto__ = target.__proto__;\n    } else {\n      prototypeOk = false;\n    }\n    if (handler.get || !prototypeOk) {\n      for (let k in target) {\n        if (propertyMap[k]) {\n          continue;\n        }\n        Object.defineProperty(proxy, k, { get: getter.bind(target, k) });\n      }\n    }\n\n    // The Proxy polyfill cannot handle adding new properties. Seal the target and proxy.\n    Object.seal(target);\n    Object.seal(proxy);\n\n    return proxy;  // nb. if isMethod is true, proxy != this\n  };\n\n  ProxyPolyfill.revocable = function(target, handler) {\n    const p = new ProxyPolyfill(target, handler);\n    return { 'proxy': p, 'revoke': lastRevokeFn };\n  };\n\n  return ProxyPolyfill;\n}","// @flow\nfunction testRunner(test: Function): boolean {\n\n    let isValid: null | boolean = null;\n\n    try {\n        const res: testRunnerCallback = test();\n\n        if (typeof res !== 'undefined' && res !== null && res.hasOwnProperty('valid')) {\n            isValid = res.valid;\n        } else if (typeof res === 'boolean') {\n            isValid = res || false;\n        } else {\n            isValid = true;\n        }\n    } catch (e) {\n        isValid = false;\n    }\n\n    return !!isValid;\n}\n\nfunction testRunnerAsync(test: Function, done: Function, fail: Function): void {\n    try {\n        test.then(done, fail);\n    } catch (e) {\n        fail();\n    }\n}\n\nexport { testRunnerAsync, testRunner };","// @flow\n\nexport const WARN: Severity = 'warn';\nexport const FAIL: Severity = 'fail';\nconst severities: Array<Severity> = [WARN, FAIL];\n\n/** Class representing validation state. */\nclass ResultObject {\n    /**\n     * Initialize validation object\n     * @param {string} name - The name of the current data object.\n     * @return {Object} Current instance\n     */\n    constructor(name: string) {\n        this.name = name;\n        this.hasValidationErrors = false;\n        this.hasValidationWarnings = false;\n        this.failCount = 0;\n        this.warnCount = 0;\n        this.testCount = 0;\n        this.testsPerformed = {};\n        this.validationErrors = {};\n        this.validationWarnings = {};\n        this.skipped = [];\n        this.completionCallbacks = [];\n    }\n\n    /**\n     * Initializes specific field's counters\n     * @param {string} fieldName - The name of the field.\n     * @return {Object} Current instance\n     */\n    initFieldCounters(fieldName: string) {\n        if (this.testsPerformed[fieldName]) { return this; }\n\n        this.testsPerformed[fieldName] = {\n            testCount: 0,\n            failCount: 0,\n            warnCount: 0\n        };\n\n        return this;\n    }\n\n    /**\n     * Bumps test counters\n     * @param {string} fieldName - The name of the field.\n     * @return {Object} Current instance\n     */\n    bumpTestCounter(fieldName: string) {\n        if (!this.testsPerformed[fieldName]) { return this; }\n\n        this.testsPerformed[fieldName].testCount++;\n        this.testCount++;\n\n        return this;\n    }\n\n    /**\n     * Bumps field's warning counts and adds warning string\n     * @param {string} fieldName - The name of the field.\n     * @param {string} statement - The error string to add to the object.\n     */\n    bumpTestWarning(fieldName: string, statement: string) {\n        this.hasValidationWarnings = true;\n        this.validationWarnings[fieldName] = this.validationWarnings[fieldName] || [];\n        this.validationWarnings[fieldName].push(statement);\n        this.warnCount++;\n        this.testsPerformed[fieldName].warnCount++;\n    }\n\n    /**\n     * Bumps field's error counts and adds error string\n     * @param {string} fieldName - The name of the field.\n     * @param {string} statement - The error string to add to the object.\n     */\n    bumpTestError(fieldName: string, statement: string) {\n        this.hasValidationErrors = true;\n        this.validationErrors[fieldName] = this.validationErrors[fieldName] || [];\n        this.validationErrors[fieldName].push(statement);\n        this.failCount++;\n        this.testsPerformed[fieldName].failCount++;\n    }\n\n    /**\n     * Fails a field and updates object accordingly\n     * @param {string} fieldName - The name of the field.\n     * @param {string} statement - The error string to add to the object.\n     * @param {string} severity - Whether it is a `fail` or `warn` test.\n     * @return {Object} Current instance\n     */\n    fail(fieldName: string, statement: string, severity: Severity) {\n        if (!this.testsPerformed[fieldName]) { return this; }\n\n        const selectedSeverity: Severity = severity && severities.includes(severity) ? severity : FAIL;\n\n        selectedSeverity === WARN\n            ? this.bumpTestWarning(fieldName, statement)\n            : this.bumpTestError(fieldName, statement);\n\n        return this;\n    }\n\n    /**\n     * Uniquely add a field to the `skipped` list\n     * @param {string} fieldName\n     * @return {Object} Current instance\n     */\n    addToSkipped(fieldName: string): this {\n        !this.skipped.includes(fieldName) && this.skipped.push(fieldName);\n\n        return this;\n    }\n\n    /**\n     * Runs completion callbacks aggregated by `done`\n     * regardless of success or failure\n     */\n    runCompletionCallbacks() {\n        this.completionCallbacks.forEach((cb) => cb(this));\n    }\n\n    /**\n     * Registers callback functions to be run when test suite is done running\n     * @param {function} callback the function to be called on done\n     * @return {Object} Current instance\n     */\n    done(callback: Function) {\n        if (typeof callback !== 'function') { return this;}\n        this.completionCallbacks.push(callback);\n        return this;\n    }\n\n    /**\n     * Getall the errors of a field, or of the whole object\n     * @param {string} [fieldName] - The name of the field.\n     * @return {Array | Object} The field's errors, or all errors\n     */\n    getErrors(fieldName: string): Array<string> | ErrorAndWarningObject {\n        if (!fieldName) {\n            return this.validationErrors;\n        }\n\n        if (this.validationErrors[fieldName]) {\n            return this.validationErrors[fieldName];\n        }\n\n        return [];\n    }\n\n    /**\n     * Getall the warnings of a field, or of the whole object\n     * @param {string} [fieldName] - The name of the field.\n     * @return {Array | Object} The field's warnings, or all warnings\n     */\n    getWarnings(fieldName: string): Array<string> | ErrorAndWarningObject {\n        if (!fieldName) {\n            return this.validationWarnings;\n        }\n\n        if (this.validationWarnings[fieldName]) {\n            return this.validationWarnings[fieldName];\n        }\n\n        return [];\n    }\n\n    name: string;\n    hasValidationErrors: boolean;\n    hasValidationWarnings: boolean;\n    failCount: number;\n    warnCount: number;\n    testCount: number;\n    validationErrors: ErrorAndWarningObject;\n    validationWarnings: ErrorAndWarningObject;\n    testsPerformed: {\n        [name: string]: {\n            testCount: number,\n            failCount: number,\n            warnCount: number\n        }\n    };\n    skipped: Array<string>;\n    completionCallbacks: Array<Function>;\n    fail: Function;\n}\n\nexport default ResultObject;","// @flow\n\nexport const INVALID_FORM_NAME: string = '0';\nexport const ENFORCE_FAILED: string = '1';\nexport const EXPECT_TYPE_FAILURE: string = '2';\nexport const MISSING_ARGUMENT_TESTS: string = '3';\nexport const UNEXPECTED_ARGUMENT_SPECIFIC: string = '4';\nexport const VALIDATE_UNEXPECTED_TEST: string = '5';","// @flow\n\nexport const PASSABLE: string = 'Passable';\nexport const ENFORCE: string = 'Enforce';\nexport const VALIDATE: string = 'Validate';","import * as Errors from './errors';\nimport * as Modules from './modules';\n\nexport { Errors };\nexport { Modules };\n","// @flow\nimport { Errors, Modules } from '../../constants';\nconst passableConstructor: string = `${Modules.PASSABLE} constructor`;\n\nfunction errorBuilder(functionName, errorMessage) {\n    return `[${Modules.PASSABLE}]: Failed to execute '${functionName}': ${errorMessage}`;\n}\n\nfunction unexpectedArgs(type, name, position) {\n    return `Unexpected '${type}'. Expected \\`${name}\\` at position ${position}. See documentation for more info.`;\n}\n\nfunction runtimeError(type: string, ...args: Array<string>) {\n    switch (type) {\n        case Errors.INVALID_FORM_NAME:\n            return new TypeError(errorBuilder(passableConstructor, `Unexpected '${args[0]}', expected string.`));\n        case Errors.ENFORCE_FAILED:\n            return new Error(errorBuilder(Modules.ENFORCE, `${args[0]} - invalid ${args[1]} value.`));\n        case Errors.EXPECT_TYPE_FAILURE:\n            const val: string = Array.isArray(args[1]) ? JSON.stringify(args[1]) : args[1];\n            return new TypeError(errorBuilder(args[0], `expected ${val} to be a ${args[2]}.`));\n        case Errors.MISSING_ARGUMENT_TESTS:\n            return new TypeError(errorBuilder(passableConstructor, unexpectedArgs(args[0], 'tests', 1)));\n        case Errors.UNEXPECTED_ARGUMENT_SPECIFIC:\n            return new TypeError(errorBuilder(passableConstructor, unexpectedArgs(args[0], 'specific', 2)));\n        case Errors.VALIDATE_UNEXPECTED_TEST:\n            return new TypeError(errorBuilder(Modules.VALIDATE, `Expected ${args[0]} \\`test\\` to be a function.`));\n        default:\n            return new Error(errorBuilder(Modules.PASSABLE, 'General exception.'));\n    }\n}\n\nexport default runtimeError;","// @flow\nimport runtimeError from './runtime_error';\n\nexport {\n    runtimeError\n};","// @flow\nimport { runtimeError } from '../helpers';\nimport { Errors } from '../constants';\n\n/** Class representing validation inclusion and exclusion groups */\nclass Specific {\n    not: SpecificGroup;\n    only: SpecificGroup;\n\n    /**\n     * Initialize Specific object\n     *\n     * @param {String | Array | Object | undefined} specific\n     */\n    constructor(specific: ?SpecificArgs) {\n\n        if (!specific) { return; }\n\n        if (!Specific.is(specific)) {\n            throw runtimeError(Errors.UNEXPECTED_ARGUMENT_SPECIFIC, typeof specific);\n        }\n\n        if (typeof specific === 'string' || Array.isArray(specific)) {\n            if (specific.length === 0) { return; }\n            this.only = this.populateGroup(this.only, specific);\n            return;\n        }\n\n        if (specific.only) {\n            this.only = this.populateGroup(this.only, specific.only);\n        }\n\n        if (specific.not) {\n            this.not = this.populateGroup(this.not, specific.not);\n        }\n    }\n\n    /**\n     * Populate inclusion and exclusion groups\n     *\n     * @param {Object} group - the group to populate.\n     * @param {String | Array} field - the field to add to the group\n     * @return {Object} modified group\n     */\n    populateGroup(group: SpecificGroup, field: SpecificField) {\n        group = group || {};\n\n        if (typeof field === 'string') {\n            group[field] = true;\n        } else if (Array.isArray(field)) {\n            field.forEach((item) => group[item] = true);\n        }\n\n        return group;\n    }\n\n    /**\n     * Checkes whether a given field name is in exclusion group\n     * or not a member of inclusion group (when present)\n     *\n     * @param {String} fieldName\n     * @return {Boolean}\n     */\n    excludes(fieldName: string) {\n        if (this.only && !this.only[fieldName]) {\n            return true;\n        }\n\n        if (this.not && this.not[fieldName]) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Test whether a given argument matches\n     * the `specific` filter convention\n     *\n     * @param {Any} item\n     * @return {boolean}\n     */\n    static is(item: AnyValue) {\n        if (Array.isArray(item)) {\n            return item.every((item) => typeof item === 'string');\n        }\n\n        if (typeof item === 'string') { return true; }\n\n        if (item !== null && typeof item === 'object' && (\n            item.hasOwnProperty('only')\n            || item.hasOwnProperty('not')\n        )) {\n            return true;\n        }\n\n        return false;\n    }\n\n}\n\nexport default Specific;","// @flow\n\nimport { testRunner, testRunnerAsync } from './test_runner';\nimport ResultObject from './result_object';\nimport { runtimeError } from './helpers';\nimport Specific from './Specific';\nimport { Errors } from './constants/';\n\n/**\n * Describes a passable validation suite\n */\nclass Passable {\n\n    specific: Specific;\n    res: ResultObject;\n    test: TestProvider;\n    pending: Array<PassableTest>;\n\n    pending = [];\n\n    /**\n     * Initializes a validation suite, creates a new ResultObject instance and runs pending tests\n     */\n    constructor(name: string, tests: TestsWrapper, specific: ?SpecificArgs) {\n\n        if (typeof name !== 'string') {\n            throw runtimeError(Errors.INVALID_FORM_NAME, typeof name);\n        }\n\n        if (typeof tests !== 'function') {\n            throw runtimeError(Errors.MISSING_ARGUMENT_TESTS, typeof tests);\n        }\n\n        this.specific = new Specific(specific);\n\n        this.res = new ResultObject(name);\n\n        tests(this.test);\n        this.runPendingTests();\n    }\n\n    addPendingTest = (test: PassableTest) => this.pending.push(test);\n    clearPendingTest = (test: PassableTest) => {\n\n        // $FlowFixMe\n        this.pending = this.pending.filter((t: PassableTest): boolean => t !== test);\n        if (this.pending.length === 0) {\n            this.res.runCompletionCallbacks();\n        }\n    };\n\n    /**\n     * Test function passed over to the consumer.\n     * It initiates field validation, and adds te test to the pending tests list\n     * @param {string} fieldName the name of the field being validated\n     * @param {string} statement description of the test\n     * @param {function} test the actual test callback or promise\n     */\n    test = (fieldName: string, statement: string, test: PassableTest, severity: Severity) => {\n\n        if (this.specific.excludes(fieldName)) {\n            this.res.addToSkipped(fieldName);\n            return;\n        }\n\n        this.res.initFieldCounters(fieldName);\n\n        if (typeof test !== 'function' && !(test instanceof Promise)) {\n            return;\n        }\n\n        test.fieldName = fieldName;\n        test.statement = statement;\n        test.severity = severity;\n\n        this.addPendingTest(test);\n    }\n\n    /**\n     * Runs all pending tests, clears pending tests list and bumps counters\n     */\n    runPendingTests = () => {\n        [...this.pending].forEach((test) => {\n            if (test instanceof Promise) {\n                const done: Function = () => {\n                    this.clearPendingTest(test);\n                };\n\n                const fail: Function = () => {\n                    // order is important here! fail needs to be called before `done`.\n                    this.res.fail(test.fieldName, test.statement, test.severity);\n                    done();\n                };\n\n                testRunnerAsync(test, done, fail);\n            } else {\n                const isValid: boolean = testRunner(test);\n\n                if (!isValid) {\n                    this.res.fail(test.fieldName, test.statement, test.severity);\n                }\n                this.clearPendingTest(test);\n            }\n            this.res.bumpTestCounter(test.fieldName);\n        });\n    }\n}\n\nexport default Passable;","// @flow\n/**\n * A function which returns whether a combination of\n * rule + value is true or false\n *\n * @param {any} value - the value being tested\n * @param {string} key the name of the rule being run\n * @param {Object} tests an object containing the group of tests in the current run\n * @param {Object} rules an object containing all the rules available for the current test\n * @return {boolean} value validation result\n */\n\nexport default function run(value: AnyValue, key: string, tests: CompoundTestObject, rules: EnforceRules): boolean {\n\n    if (typeof rules[key] !== 'function') {\n        if (typeof tests[key] === 'function') {\n            return tests[key](value);\n        }\n\n        return false;\n    }\n\n    const args: mixed = tests[key];\n\n    return rules[key](value, args);\n}","// @flow\nimport run from '../run';\n\nexport default function allOf(value: mixed, tests: CompoundTestObject, rules: EnforceRules): boolean {\n\n    const validations: Array<string> = Object.keys(tests);\n\n    if (validations.length === 0) {\n        return false;\n    }\n\n    return validations.every((key) => run(value, key, tests, rules) === true);\n}","// @flow\nimport run from '../run';\n\nexport default function anyOf(value: mixed, tests: CompoundTestObject, rules: EnforceRules): boolean {\n\n    const validations: Array<string> = Object.keys(tests);\n    return validations.some((key) => run(value, key, tests, rules) === true);\n}\n","// @flow\nimport run from '../run';\n\nexport default function noneOf(value: mixed, tests: CompoundTestObject, rules: EnforceRules): boolean {\n\n    const validations: Array<string> = Object.keys(tests);\n\n    if (validations.length === 0) {\n        return false;\n    }\n\n    return validations.every((key) => run(value, key, tests, rules) !== true);\n}","// @flow\nimport allOf from './all_of';\nimport anyOf from './any_of';\nimport noneOf from './none_of';\n\nexport default {\n    allOf,\n    anyOf,\n    noneOf\n};","// @flow\n\nimport { isType } from '../';\nimport { runtimeError } from '../../../../../helpers/';\nimport { Errors } from '../../../../../constants';\n\nfunction expectType(value: AnyValue, type: string, functionName: string): true | void {\n    if (!isType(value, type)) {\n        throw runtimeError(Errors.EXPECT_TYPE_FAILURE, functionName, value, type);\n    }\n\n    return true;\n}\n\nexport default expectType;\n","// @flow\n\nimport {\n    reduceArrayToMap,\n    findArrayValuesInMapKeys\n} from '../index';\n\ntype Value = Array<NumStrBool>;\n\nfunction findArrayValuesInArray(values: Value, array: Value): boolean {\n    const reducedArray: MapType = reduceArrayToMap(array),\n        allItemsFound: boolean = findArrayValuesInMapKeys(values, reducedArray);\n\n    return allItemsFound;\n}\n\nexport default findArrayValuesInArray;","// @flow\n\nfunction findArrayValuesInMapKeys(array: Array<NumStrBool>, map: MapType): boolean { // eslint-disable-line flowtype/no-weak-types\n    if (!map) {return false;}\n    return array.every((element) => map && map.has(element));\n}\n\nexport default findArrayValuesInMapKeys;","// @flow\nfunction findValInArrayOrString(value: string | AnyValue, container: Array<NumStrBool> | string): boolean {\n    return container.indexOf(value) > -1;\n}\n\nexport default findValInArrayOrString;","// @flow\nfunction getSize(value: AnyValue): number {\n\n    if (!value) {\n        return 0;\n    } else if (typeof value === 'number' && !isNaN(value)) {\n        return value;\n    } else if (value.hasOwnProperty('length')) {\n        return value.length;\n    } else if (typeof value === 'object') {\n        return Object.keys(value).length;\n    } else {\n        return 0;\n    }\n};\n\nexport default getSize;","// @flow\n\n/**\n * Check if value type matches any of provided types\n * Allows checking agains custom type 'array' for array values\n *\n * @example\n * // returns false\n * isType(5, 'string')\n * @example\n * // returns true\n * isType([], 'string', 'array')\n * @param {any} value Value to match\n * @param {...string} types\n * @return {boolean} true if value matches against any type, false otherwise\n */\nfunction isType(value: mixed, ...types: Array<string>): boolean {\n    return types.some((type) => type === 'array' ? Array.isArray(value) : (typeof value === type));\n}\n\nexport default isType;","// @flow\n\nfunction reduceArrayToMap(array: Array<NumStrBool>): MapType {\n    return array.reduce((acc, val) => {\n        acc.set(val, true);\n\t    return acc;\n    }, new Map());\n}\n\nexport default reduceArrayToMap;","// @flow\nimport expectType from './expect_type';\nimport findArrayValuesInArray from './find_array_values_in_array';\nimport findArrayValuesInMapKeys from './find_array_values_in_map_keys';\nimport findValInArrayOrString from './find_val_in_array_or_string';\nimport getSize from './get_size';\nimport isType from './is_type';\nimport reduceArrayToMap from './reduce_array_to_map';\n\nexport {\n    expectType,\n    findArrayValuesInArray,\n    findArrayValuesInMapKeys,\n    findValInArrayOrString,\n    getSize,\n    isType,\n    reduceArrayToMap\n};","// @flow\nimport { isType, expectType } from '../../helpers';\n\nfunction isArray(value: mixed, expect: boolean = true): boolean {\n    expectType(expect, 'boolean', 'isArray');\n    return isType(value, 'array') === expect;\n}\n\nisArray.negativeForm = 'isNotArray';\n\nexport default isArray;","// @flow\n\nimport { isType, expectType } from '../../helpers';\n\nfunction isNumber(value: mixed, expect: boolean = true): boolean {\n    expectType(expect, 'boolean', 'isNumber');\n    return isType(value, 'number') === expect;\n}\n\nisNumber.negativeForm = 'isNotNumber';\n\nexport default isNumber;","// @flow\nimport { isType, expectType } from '../../helpers';\n\nfunction isString(value: mixed, expect: boolean = true): boolean {\n    expectType(expect, 'boolean', 'isString');\n    return isType(value, 'string') === expect;\n}\n\nisString.negativeForm = 'isNotString';\n\nexport default isString;","// @flow\nimport { isType } from '../../helpers';\n\nfunction matches(value: string, regex: RegExp | string): boolean {\n\n    if (regex instanceof RegExp) {\n        return regex.test(value);\n    } else if (isType(regex, 'string')) {\n        return new RegExp(regex).test(value);\n    } else {\n        return false;\n    }\n}\n\nmatches.negativeForm = 'notMatches';\n\nexport default matches;","// @flow\n\nimport {\n    isType,\n    findArrayValuesInArray,\n    findValInArrayOrString\n} from '../../helpers';\n\ntype All = NumStrBool | Array<NumStrBool>;\ntype Value = All | Array<NumStrBool>;\ntype Arg = string | Array<NumStrBool>;\n\nfunction inside(value: Value, arg1: Arg): boolean {\n\n    if (Array.isArray(arg1)) {\n\n        if (isType(value, 'string', 'number', 'boolean')) {\n            return findValInArrayOrString(value, arg1);\n        }\n        if (Array.isArray(value)) {\n            return findArrayValuesInArray(value, arg1);\n        }\n    }\n\n    // both value and arg1 are strings\n    if (isType(arg1, 'string') && isType(value, 'string')) {\n        return findValInArrayOrString(value, arg1);\n    }\n\n    return false;\n}\n\ninside.negativeForm = 'notInside';\n\nexport default inside;","// @flow\n\nimport { expectType } from '../../helpers';\n\nfunction isNumeric(value: mixed, expect: boolean = true): boolean {\n    expectType(expect, 'boolean', 'isNumeric');\n\n    const result: boolean = !isNaN(parseFloat(value)) && isFinite(value);\n    return result === expect;\n}\n\nisNumeric.negativeForm = 'isNotNumeric';\n\nexport default isNumeric;","// @flow\nimport { expectType, getSize } from '../../helpers';\n\nfunction isEmpty(value: mixed, expect: boolean = true): boolean {\n    expectType(expect, 'boolean', 'isEmpty');\n\n    return (getSize(value) === 0) === expect;\n};\n\nisEmpty.negativeForm = 'isNotEmpty';\n\nexport default isEmpty;","// @flow\nimport { getSize } from '../../helpers';\n\nfunction sizeEquals(value: mixed, arg1: number) {\n    return getSize(value) === arg1;\n}\n\nsizeEquals.negativeForm = 'sizeNotEquals';\n\nexport default sizeEquals;","// @flow\nimport { getSize } from '../../helpers';\n\nfunction largerThan(value: mixed, arg1: number): boolean {\n    return getSize(value) > arg1;\n}\n\nexport default largerThan;","// @flow\nimport {getSize} from '../../helpers';\n\nfunction smallerThan(value: mixed, arg1: number) {\n    return getSize(value) < arg1;\n}\n\nexport default smallerThan;","// @flow\nimport {getSize} from '../../helpers';\n\nfunction smallerThanOrEquals(value: mixed, arg1: number) {\n    return getSize(value) <= arg1;\n}\n\nexport default smallerThanOrEquals;","// @flow\nimport {getSize} from '../../helpers';\n\nfunction largerThanOrEquals(value: mixed, arg1: number): boolean {\n    return getSize(value) >= arg1;\n}\n\nexport default largerThanOrEquals;","// @flow\n\n/**\n * Collects rules with `negativeForm` attributes.\n * When found, it creates a new function that flips\n * the value of the original rule.\n * @param {Object} rules - enforce rules object\n * @returns {Object} extended rules object\n */\nfunction extendNegativeRules(rules: EnforceRules) {\n\n    for (const rule: string in rules) {\n        const negativeForm: string = rules[rule].negativeForm;\n\n        if (negativeForm) {\n            rules[negativeForm] = (...args) => !rules[rule](...args);\n        }\n    }\n\n    return rules;\n}\n\nexport default extendNegativeRules;\n","// @flow\nimport isArray from './lang/is_array';\nimport isNumber from './lang/is_number';\nimport isString from './lang/is_string';\nimport matches from './content/matches';\nimport inside from './content/inside';\nimport isNumeric from './content/is_numeric';\nimport isEmpty from './size/is_empty';\nimport sizeEquals from './size/size_equals';\nimport largerThan from './size/larger_than';\nimport smallerThan from './size/smaller_than';\nimport smallerThanOrEquals from './size/smaller_than_or_equals';\nimport largerThanOrEquals from './size/larger_than_or_equals';\nimport extendNegativeRules from './helpers/extend_negative_rules';\n\nconst rules: EnforceRules = {\n    isArray,\n    isNumber,\n    isString,\n    matches,\n    inside,\n    isNumeric,\n    isEmpty,\n    largerThan,\n    smallerThan,\n    smallerThanOrEquals,\n    largerThanOrEquals,\n    sizeEquals\n};\n\nexport default extendNegativeRules(rules);","// @flow\nimport compounds from './compounds';\nimport rules from './rules';\n\nexport {\n    compounds,\n    rules\n};\n","// @flow\nimport { Errors } from '../../../constants';\nimport { runtimeError } from '../../../helpers';\n\n/**\n * Run group of tests using test runner. (e.g. `anyOf`)\n *\n * @param {Object} allRules\n * @param {Function} runner - test runner\n * @param {Any} value\n * @param {Object} tests\n * @return {object} enforce object\n */\nfunction compound(allRules: EnforceRules, runner: Runner, value: AnyValue, tests: CompoundTestObject): void {\n    if (typeof runner !== 'function') { return; }\n\n    if (runner(value, tests, allRules) !== true) {\n        throw runtimeError(Errors.ENFORCE_FAILED, runner.name, typeof value);\n    }\n}\n\nexport default compound;","// @flow\n\nimport { Errors } from '../../../constants';\nimport { runtimeError } from '../../../helpers';\n\n/**\n * Run a single rule against enforced value (e.g. `isNumber()`)\n *\n * @param {Function} rule - rule to run\n * @param {Any} value\n * @param {Array} args list of arguments sent from consumer\n */\nfunction rule(rule: EnforceRule, value: AnyValue, ...args: RuleArgs): void {\n\n    if (typeof rule !== 'function') { return; }\n\n    if (rule(value, ...args) !== true) {\n        throw runtimeError(Errors.ENFORCE_FAILED, rule.name, typeof value);\n    }\n}\n\nexport default rule;\n","// @flow\nimport compound from './compound';\nimport rule from './rule';\n\nexport {\n    compound,\n    rule\n};\n","let root;\n\n// credit https://stackoverflow.com/questions/3277182/how-to-get-the-global-object-in-javascript\ntry {\n    root = (() => undefined).constructor('return this')();\n} catch (e) {\n    root = window;\n}\n\nexport default root;","import proxyPolyfill from 'proxy-polyfill/src/proxy.js';\nimport root from './root';\n\nfunction safeProxy(target, handler) {\n\n    if (!root.Proxy) {\n        const ProxyPolyfill = proxyPolyfill();\n        return new ProxyPolyfill(target, handler);\n    }\n\n    return new Proxy(target, handler);\n}\n\nexport default safeProxy;","// @flow\n\nimport * as runnables from './runnables';\nimport * as runners from './runners';\nimport safeProxy from './helpers/safe_proxy';\n\nclass Enforce {\n    enforce: EnforceInstance;\n    rules: EnforceRules;\n    allRunnables: EnforceRules;\n\n    constructor(customRules: EnforceRules = {}) {\n        this.rules = Object.assign({}, runnables.rules, customRules);\n        this.allRunnables = Object.assign({}, runnables.compounds, this.rules);\n\n        return this.enforce;\n    }\n\n    enforce = (value: AnyValue) => {\n        const proxy: EnforceRules = safeProxy(this.allRunnables, {\n            get: (allRunnables, fnName) => {\n\n                if (this.rules.hasOwnProperty(fnName) && typeof this.rules[fnName] === 'function') {\n                    return (...args) => {\n                        runners.rule(this.rules[fnName], value, ...args);\n                        return proxy;\n                    };\n                } else if (runnables.compounds.hasOwnProperty(fnName) && typeof runnables.compounds[fnName] === 'function') {\n                    return (tests) => {\n                        runners.compound(this.rules, runnables.compounds[fnName], value, tests);\n                        return proxy;\n                    };\n                } else {\n                    return allRunnables[fnName];\n                }\n            }\n        });\n        return proxy;\n    }\n}\n\nconst enforce: EnforceInstance = new Enforce({});\n\nexport default Enforce;\n\nexport {\n    enforce\n};\n","// @flow\nimport runtimeError from '../helpers/runtime_error';\nimport { Errors } from '../constants';\n\n/**\n * Run tests and catch errors\n *\n * @param {function} callback The test content\n * @return {boolean}\n */\nfunction validate(test: PassableTest): boolean {\n\n    if (typeof test !== 'function' && !(test instanceof Promise)) {\n        throw runtimeError(Errors.VALIDATE_UNEXPECTED_TEST, typeof test);\n    }\n\n    try {\n        return test() !== false;\n    } catch (_) {\n        return false;\n    }\n}\n\nexport default validate;","// @flow\nimport Passable from './Passable';\nimport Enforce, { enforce } from './Enforce';\nimport validate from './validate';\nimport { WARN, FAIL } from './result_object';\nimport { version } from '../version.json';\n\nfunction passable(name: string, tests: TestsWrapper, specific: ?SpecificArgs) {\n    const suite: Passable = new Passable(name, tests, specific);\n    return suite.res;\n}\n\npassable.VERSION = version;\npassable.enforce = enforce;\npassable.Enforce = Enforce;\npassable.validate = validate;\npassable.WARN = WARN;\npassable.FAIL = FAIL;\n\nexport default passable;"],"sourceRoot":""}