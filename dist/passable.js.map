{"version":3,"file":"passable.js","sources":["../node_modules/n4s/dist/enforce.min.js","../node_modules/anyone/any/index.js","../src/lib/globalObject/index.js","../src/lib/singleton/constants.js","../src/lib/singleton/index.js","../src/core/Context/index.js","../src/constants.js","../src/core/test/lib/isTestFn/index.js","../src/core/test/lib/TestObject/index.js","../src/core/test/index.js","../src/core/passableResult/index.js","../src/core/Specific/index.js","../src/core/passable/index.js","../src/core/draft/constants.js","../src/core/draft/index.js","../src/utilities/validate/index.js","../src/index.js"],"sourcesContent":["\"use strict\";!function(n,r){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=r():\"function\"==typeof define&&define.amd?define(r):(n=n||self).enforce=r()}(this,(function(){function n(){return(n=Object.assign||function(n){for(var r=1;r<arguments.length;r++){var t,e=arguments[r];for(t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t])}return n}).apply(this,arguments)}function r(n){return!!Array.isArray(n)}function t(n){return\"number\"==typeof n}function e(n){return\"string\"==typeof n}function o(n,r){return r instanceof RegExp?r.test(n):\"string\"==typeof r&&new RegExp(r).test(n)}function u(n,r){return!!(Array.isArray(r)&&[\"string\",\"number\",\"boolean\"].includes(typeof n)||\"string\"==typeof r&&\"string\"==typeof n)&&r.includes(n)}function i(n,r){return n===r}function a(n){return!(isNaN(parseFloat(n))||isNaN(Number(n))||!isFinite(n))}function f(n,r){return a(n)&&a(r)&&Number(n)===Number(r)}function c(n){return!n||(a(n)?0===n:Object.prototype.hasOwnProperty.call(n,\"length\")?0===n.length:\"object\"!=typeof n||0===Object.keys(n).length)}function s(n,r){return a(n)&&a(r)&&Number(n)>Number(r)}function l(n,r){return a(n)&&a(r)&&Number(n)>=Number(r)}function y(n,r){return a(n)&&a(r)&&Number(n)<Number(r)}function g(n,r){return a(n)&&a(r)&&Number(n)<=Number(r)}function p(n,r){return n.length===r}function m(n){return!!n}function h(n,r){if(\"function\"==typeof n){for(var t=arguments.length,e=Array(2<t?t-2:0),o=2;o<t;o++)e[o-2]=arguments[o];if(!0!==n.apply(void 0,[r].concat(e)))throw Error(\"[Enforce]: invalid \"+typeof r+\" value\")}}function v(r){void 0===r&&(r={});var t=n({},d,{},r);if(\"function\"==typeof N.Proxy)return function(n){var r=new Proxy(t,{get:function(t,e){if(b(t,e))return function(){for(var o=arguments.length,u=Array(o),i=0;i<o;i++)u[i]=arguments[i];return h.apply(void 0,[t[e],n].concat(u)),r}}});return r};var e=Object.keys(t);return function(r){return e.reduce((function(e,o){var u;return n(e,n({},b(t,o)&&((u={})[o]=function(){for(var n=arguments.length,u=Array(n),i=0;i<n;i++)u[i]=arguments[i];return h.apply(void 0,[t[o],r].concat(u)),e},u)))}),{})}}var b=function(n,r){return(n=Object.prototype.hasOwnProperty.call(n,r)&&\"function\"==typeof n[r])||function(n){setTimeout((function(){throw Error(\"[enforce]: \"+n)}))}('Rule \"'+r+'\" was not found in rules object. Make sure you typed it correctly.'),n},N=Function(\"return this\")();r.negativeForm=\"isNotArray\",t.negativeForm=\"isNotNumber\",e.negativeForm=\"isNotString\",o.negativeForm=\"notMatches\",u.negativeForm=\"notInside\",i.negativeForm=\"notEquals\",a.negativeForm=\"isNotNumeric\",f.negativeForm=\"numberNotEquals\",c.negativeForm=\"isNotEmpty\",s.alias=\"gt\",l.alias=\"gte\",y.alias=\"lt\",g.alias=\"lte\",p.negativeForm=\"lengthNotEquals\",m.negativeForm=\"isFalsy\";var d=function(n){var r,t=function(r){var t=n[r].negativeForm,e=n[r].alias;t&&(n[t]=function(){return!n[r].apply(n,arguments)}),e&&(n[e]=n[r])};for(r in n)t(r);return n}({isArray:r,isNumber:t,isString:e,matches:o,inside:u,equals:i,numberEquals:f,isNumeric:a,isEmpty:c,greaterThan:s,greaterThanOrEquals:l,lessThan:y,lessThanOrEquals:g,longerThan:function(n,r){return n.length>r},longerThanOrEquals:function(n,r){return n.length>=r},shorterThan:function(n,r){return n.length<r},shorterThanOrEquals:function(n,r){return n.length<=r},lengthEquals:p,isOdd:function(n){return!!a(n)&&0!=n%2},isEven:function(n){return!!a(n)&&0==n%2},isTruthy:m}),E=new v;return E.Enforce=v,E}));\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = global || self, global.any = factory());\n}(this, function () { 'use strict';\n\n    /**\n     * Accepts a value or a function, and coerces it into a boolean value\n     * @param {*|Function} [arg] Any expression or value\n     * @return {Boolean}\n     */\n    var run = function run(arg) {\n      if (typeof arg === 'function') {\n        try {\n          var output = arg();\n          return output != false && Boolean(output); // eslint-disable-line\n        } catch (err) {\n          return false;\n        }\n      }\n\n      return arg != false && Boolean(arg); // eslint-disable-line\n    };\n\n    /**\n     * Checks that at least one passed argument evaluates to a truthy value.\n     * @param  {[]*} [args] Any amount of values or expressions.\n     * @returns {Boolean}\n     */\n\n    var any = function any() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return args.some(run);\n    };\n\n    return any;\n\n}));\n","/**\n * @type {Object} Reference to global object.\n */\nconst globalObject = Function('return this')();\n\nexport default globalObject;\n","/**\n * @type {String} Passable's major version.\n */\nconst PASSABLE_MAJOR = PASSABLE_VERSION.split('.')[0];\n\n/**\n * @type {Symbol} Used to store a global instance of Passable.\n */\nexport const SYMBOL_PASSABLE = Symbol.for(`PASSABLE#${PASSABLE_MAJOR}`);\n","import go from '../globalObject';\nimport { SYMBOL_PASSABLE } from './constants';\n\n/**\n * @param  {String[]} versions List of passable versions.\n * @throws {Error}\n */\nconst throwMultiplePassableError = (...versions) => {\n    throw new Error(`[Passable]: Multiple versions of Passable detected: (${versions.join()}).\n    Most features should work regularly, but for optimal feature compatibility, you should have all running instances use the same version.`);\n};\n\n/**\n * Registers current Passable instance on global object.\n * @param {Function} passable Reference to passable.\n * @return {Function} Global passable reference.\n */\nconst register = (passable) => {\n\n    const existing = go[SYMBOL_PASSABLE];\n\n    if (existing) {\n        if (existing.VERSION !== passable.VERSION) {\n            setTimeout(() => throwMultiplePassableError(passable.VERSION, existing.VERSION));\n        }\n    } else {\n        go[SYMBOL_PASSABLE] = passable;\n    }\n\n    return go[SYMBOL_PASSABLE];\n};\n\nconst singletonExport = {\n    use: () => go[SYMBOL_PASSABLE],\n    register\n};\n\nexport default singletonExport;\n","import { singleton } from '../../lib';\n\n/**\n * Creates a new context object, and assigns it as a static property on Passable's singleton.\n * @param {Object} parent   Parent context.\n */\nconst Context = function(parent) {\n    singleton.use().ctx = this;\n    Object.assign(this, parent);\n};\n\n/**\n * Clears stored instance from constructor function.\n */\nContext.clear = function() {\n    singleton.use().ctx = null;\n};\n\nexport default Context;\n","/**\n * @type {String} Version number derived from current tag.\n */\nexport const VERSION = PASSABLE_VERSION;\n\n/**\n * @type {String} Keyword used for marking non failing tests.\n */\nexport const WARN = 'warn';\n\n/**\n * @type {String} Keyword used for marking failing tests.\n */\nexport const FAIL = 'fail';\n","/**\n * Checks that a given argument qualifies as a test function\n * @param {*} testFn\n * @return {Boolean}\n */\nconst isTestFn = (testFn) => {\n    if (!testFn) {\n        return false;\n    }\n\n    return typeof testFn.then === 'function' || typeof testFn === 'function';\n};\n\nexport default isTestFn;\n","/**\n * Describes a test call inside a passable suite.\n * @param {Object} ctx                  Parent context.\n * @param {String} fieldName            Name of the field being tested.\n * @param {String} statement            The message returned when failing.\n * @param {Promise|Function} testFn     The actual test callbrack or promise.\n * @param {String} [severity]           Indicates whether the test should fail or warn.\n */\nfunction TestObject(ctx, fieldName, statement, testFn, severity) {\n    Object.assign(this, {\n        ctx,\n        testFn,\n        fieldName,\n        statement,\n        severity,\n        failed: false\n    });\n};\n\n/**\n * @returns Current validity status of a test.\n */\nTestObject.prototype.valueOf = function() {\n    return this.failed !== true;\n};\n\n/**\n * Sets a field to failed.\n * @returns {TestObject} Current instance.\n */\nTestObject.prototype.fail = function() {\n\n    this.ctx.result.fail(\n        this.fieldName,\n        this.statement,\n        this.severity\n    );\n\n    this.failed = true;\n    return this;\n};\n\n/**\n * Adds current test to pending list.\n */\nTestObject.prototype.setPending = function() {\n    this.ctx.pending.push(this);\n};\n\n/**\n * Removes test from pending list.\n */\nTestObject.prototype.clearPending = function() {\n    this.ctx.pending = this.ctx.pending.filter((t) => t !== this);\n};\n\nexport default TestObject;\n","import { FAIL } from '../../constants';\nimport { singleton } from '../../lib';\nimport { isTestFn, TestObject } from './lib';\n\n/**\n * Run async test.\n * @param {TestObject} testObject A TestObject instance.\n */\nexport const runAsync = (testObject) => {\n    const { fieldName, testFn, statement, ctx } = testObject;\n\n    ctx.result.markAsync(fieldName);\n\n    const done = () => {\n        testObject.clearPending();\n\n        if (!hasRemainingPendingTests(ctx, fieldName)) {\n            ctx.result.markAsDone(fieldName);\n        }\n\n        if (!hasRemainingPendingTests(ctx)) {\n            ctx.result.markAsDone();\n        }\n    };\n\n    const fail = (rejectionMessage) => {\n        testObject.statement = typeof rejectionMessage === 'string'\n            ? rejectionMessage\n            : statement;\n\n        if (ctx.pending.includes(testObject)) {\n            testObject.fail();\n        }\n\n        done();\n    };\n\n    try {\n        testFn.then(done, fail);\n    } catch (e) {\n        fail();\n    }\n};\n\n/**\n * Checks if there still are remaining pending tests for given criteria\n * @param {Object} ctx          Parent context\n * @param {String} [fieldName]  Name of the field to test against\n * @return {Boolean}\n */\nconst hasRemainingPendingTests = (ctx, fieldName) => {\n    if (!ctx.pending.length) {\n        return false;\n    }\n\n    if (fieldName) {\n        return ctx.pending.some((testObject) => testObject.fieldName === fieldName);\n    }\n\n    return !!ctx.pending.length;\n};\n\n/**\n * Performs \"shallow\" run over test functions, assuming sync tests only.\n * @param {TestObject} testObject TestObject instance.\n * @return {*} Result from test function\n */\nconst preRun = (testObject) => {\n    let result;\n    try {\n        result = testObject.testFn();\n    } catch (e) {\n        result = false;\n    }\n\n    if (result === false) {\n        testObject.fail();\n    }\n\n    return result;\n};\n\n/**\n * Registers test, if async - adds to pending array\n * @param {TestObject} testObject   A TestObject Instance.\n */\nconst register = (testObject) => {\n    const { testFn, ctx, fieldName } = testObject;\n    let pending = false;\n    let result;\n\n    if (ctx.specific.excludes(fieldName)) {\n        ctx.result.addToSkipped(fieldName);\n        return;\n    }\n\n    ctx.result.initFieldCounters(fieldName);\n    ctx.result.bumpTestCounter(fieldName);\n\n    if (testFn && typeof testFn.then === 'function') {\n        pending = true;\n    } else {\n        result = preRun(testObject);\n    }\n\n    if (result && typeof result.then === 'function') {\n        pending = true;\n\n        testObject.testFn = result;\n    }\n\n    if (pending) {\n        testObject.setPending();\n    }\n};\n\n/**\n * Test function used by consumer to provide their own validations.\n * @param {String} fieldName            Name of the field to test.\n * @param {String} [statement]          The message returned in case of a failure.\n * @param {function | Promise} testFn   The actual test callback or promise.\n * @param {String} [severity]           Indicates whether the test should fail or warn.\n * @return {TestObject}                 A TestObject instance.\n */\nconst test = (fieldName, ...args) => {\n    let statement,\n        testFn,\n        severity;\n\n    if (isTestFn(args[0])) {\n        [testFn, severity] = args;\n    } else if (['string', 'object'].some((type) => typeof args[0] === type)) {\n        [statement, testFn, severity] = args;\n    }\n\n    if (!isTestFn(testFn)) {\n        return;\n    }\n\n    const testObject = new TestObject(\n        singleton.use().ctx,\n        fieldName,\n        statement,\n        testFn,\n        severity || FAIL\n    );\n\n    register(testObject);\n\n    return testObject;\n};\n\nexport default test;\n","import { WARN, FAIL } from '../../constants';\nconst severities = [ WARN, FAIL ];\n\nconst passableResult = (name) => {\n\n    const completionCallbacks = [];\n    let asyncObject = null;\n    let hasValidationErrors = false;\n    let hasValidationWarnings = false;\n    let cancelled = false;\n\n    /**\n     * Initializes specific field's counters\n     * @param {string} fieldName - The name of the field.\n     */\n    const initFieldCounters = (fieldName) => {\n        if (output.testsPerformed[fieldName]) { return output; }\n\n        output.testsPerformed[fieldName] = {\n            testCount: 0,\n            failCount: 0,\n            warnCount: 0\n        };\n    };\n\n    /**\n     * Bumps test counters to indicate tests that's being performed\n     * @param {string} fieldName - The name of the field.\n     */\n    const bumpTestCounter = (fieldName) => {\n        if (!output.testsPerformed[fieldName]) { return output; }\n\n        output.testsPerformed[fieldName].testCount++;\n        output.testCount++;\n    };\n\n    /**\n     * Bumps field's warning counts and adds warning string\n     * @param {string} fieldName - The name of the field.\n     * @param {string} statement - The error string to add to the object.\n     */\n    const bumpTestWarning = (fieldName, statement) => {\n        hasValidationWarnings = true;\n        output.warnings[fieldName] = output.warnings[fieldName] || [];\n        output.warnings[fieldName].push(statement);\n        output.warnCount++;\n        output.testsPerformed[fieldName].warnCount++;\n    };\n\n    /**\n     * Bumps field's error counts and adds error string\n     * @param {string} fieldName - The name of the field.\n     * @param {string} statement - The error string to add to the object.\n     */\n    const bumpTestError = (fieldName, statement) => {\n        hasValidationErrors = true;\n        output.errors[fieldName] = output.errors[fieldName] || [];\n        output.errors[fieldName].push(statement);\n        output.failCount++;\n        output.testsPerformed[fieldName].failCount++;\n    };\n\n    /**\n     * Fails a field and updates output accordingly\n     * @param {string} fieldName - The name of the field.\n     * @param {string} statement - The error string to add to the object.\n     * @param {string} severity - Whether it is a `fail` or `warn` test.\n     */\n    const fail = (fieldName, statement, severity) => {\n        if (!output.testsPerformed[fieldName]) { return output; }\n        const selectedSeverity = severity && severities.includes(severity) ? severity : FAIL;\n        selectedSeverity === WARN\n            ? bumpTestWarning(fieldName, statement)\n            : bumpTestError(fieldName, statement);\n    };\n\n    /**\n     * Uniquely add a field to the `skipped` list\n     * @param {string} fieldName - The name of the field.\n     */\n    const addToSkipped = (fieldName) => {\n        !output.skipped.includes(fieldName) && output.skipped.push(fieldName);\n    };\n\n    /**\n     * Runs completion callbacks aggregated by `done`\n     * regardless of success or failure\n     */\n    const runCompletionCallbacks = () => {\n        completionCallbacks.forEach((cb) => !cancelled && cb(output));\n    };\n\n    /**\n     * Marks a field as async\n     * @param {string} fieldName - The name of the field.\n    */\n    const markAsync = (fieldName) => {\n        asyncObject = asyncObject || {};\n        asyncObject[fieldName] = asyncObject[fieldName] || {};\n        asyncObject[fieldName] = {\n            done: false,\n            callbacks: asyncObject[fieldName].callbacks || []\n        };\n    };\n\n    /**\n     * Marks an async field as done\n     * @param {string} fieldName - The name of the field.\n    */\n    const markAsDone = (fieldName) => {\n        if (!fieldName) {\n            return runCompletionCallbacks();\n        }\n\n        if (asyncObject !== null && asyncObject[fieldName]) {\n            asyncObject[fieldName].done = true;\n\n            // run field callbacks set in `after`\n            if (asyncObject[fieldName].callbacks) {\n                asyncObject[fieldName].callbacks.forEach((callback) => !cancelled && callback(output));\n            }\n        }\n    };\n\n    /**\n     * Registers callback functions to be run when test suite is done running\n     * If current suite is not async, runs the callback immediately\n     * @param {function} callback the function to be called on done\n     * @return {object} output object\n     */\n    const done = (callback) => {\n        if (typeof callback !== 'function') {return output;}\n        if (!asyncObject) {\n            callback(output);\n        }\n\n        completionCallbacks.push(callback);\n\n        return output;\n    };\n\n    /**\n     * Registers callback functions to be run when a certain field is done running\n     * If field is not async, runs the callback immediately\n     * @param {string} fieldName - The name of the field.\n     * @param {function} callback the function to be called on done\n     * @return {object} output object\n     */\n    const after = (fieldName, callback) => {\n        if (typeof callback !== 'function') {\n            return output;\n        }\n\n        asyncObject = asyncObject || {};\n        if (!asyncObject[fieldName] && output.testsPerformed[fieldName]) {\n            callback(output);\n        } else if (asyncObject[fieldName]) {\n            asyncObject[fieldName].callbacks = [...(asyncObject[fieldName].callbacks || []), callback];\n        }\n\n        return output;\n    };\n\n    /**\n     * cancels done/after callbacks. They won't invoke when async operations complete\n     */\n    const cancel = () => {\n        cancelled = true;\n\n        return output;\n    };\n\n    /**\n     * Gets all the errors of a field, or of the whole object\n     * @param {string} fieldName - The name of the field.\n     * @return {array | object} The field's errors, or all errors\n     */\n    const getErrors = (fieldName) => {\n        if (!fieldName) {\n            return output.errors;\n        }\n\n        if (output.errors[fieldName]) {\n            return output.errors[fieldName];\n        }\n\n        return [];\n    };\n\n    /**\n     * Gets all the warnings of a field, or of the whole object\n     * @param {string} [fieldName] - The name of the field.\n     * @return {array | object} The field's warnings, or all warnings\n     */\n    const getWarnings = (fieldName) => {\n        if (!fieldName) {\n            return output.warnings;\n        }\n\n        if (output.warnings[fieldName]) {\n            return output.warnings[fieldName];\n        }\n\n        return [];\n    };\n\n    /**\n     * Checks if a certain field (or the whole suite) has errors\n     * @param {string} [fieldName]\n     * @return {boolean}\n     */\n    const hasErrors = (fieldName) => {\n        if (!fieldName) {\n            return hasValidationErrors;\n        }\n\n        return Boolean(output.getErrors(fieldName).length);\n    };\n\n    /**\n     * Checks if a certain field (or the whole suite) has warnings\n     * @param {string} [fieldName] - The name of the field.\n     * @return {boolean}\n     */\n    const hasWarnings = (fieldName) => {\n        if (!fieldName) {\n            return hasValidationWarnings;\n        }\n\n        return Boolean(output.getWarnings(fieldName).length);\n    };\n\n    const output = {\n        name,\n        failCount: 0,\n        warnCount: 0,\n        testCount: 0,\n        testsPerformed: {},\n        errors: {},\n        warnings: {},\n        skipped: []\n    };\n\n    Object.defineProperties(output, {\n        hasErrors: {\n            value: hasErrors,\n            writable: true,\n            configurable: true,\n            enumerable: false\n        },\n        hasWarnings: {\n            value: hasWarnings,\n            writable: true,\n            configurable: true,\n            enumerable: false\n        },\n        getErrors: {\n            value: getErrors,\n            writable: true,\n            configurable: true,\n            enumerable: false\n        },\n        getWarnings: {\n            value: getWarnings,\n            writable: true,\n            configurable: true,\n            enumerable: false\n        },\n        done: {\n            value: done,\n            writable: true,\n            configurable: true,\n            enumerable: false\n        },\n        after: {\n            value: after,\n            writable: true,\n            configurable: true,\n            enumerable: false\n        },\n        cancel: {\n            value: cancel,\n            writable: true,\n            configurable: true,\n            enumerable: false\n        }\n    });\n\n    return {\n        initFieldCounters,\n        bumpTestError,\n        bumpTestWarning,\n        bumpTestCounter,\n        fail,\n        addToSkipped,\n        runCompletionCallbacks,\n        markAsync,\n        markAsDone,\n        output\n    };\n};\n\nexport default passableResult;\n","/** Class representing validation inclusion and exclusion groups */\nclass Specific {\n\n    /**\n     * Initialize Specific object\n     *\n     * @param {String | Array | Object | undefined} specific\n     */\n    constructor(specific) {\n\n        if (!specific) { return; }\n\n        if (!Specific.is(specific)) {\n            throw new TypeError();\n        }\n\n        if (typeof specific === 'string' || Array.isArray(specific)) {\n            if (specific.length === 0) { return; }\n            this.only = this.populateGroup(this.only, specific);\n            return;\n        }\n\n        if (specific.only) {\n            this.only = this.populateGroup(this.only, specific.only);\n        }\n\n        if (specific.not) {\n            this.not = this.populateGroup(this.not, specific.not);\n        }\n    }\n\n    /**\n     * Populate inclusion and exclusion groups\n     *\n     * @param {Object} group - the group to populate.\n     * @param {String | Array} field - the field to add to the group\n     * @return {Object} modified group\n     */\n    populateGroup(group, field) {\n        group = group || {};\n\n        if (typeof field === 'string') {\n            group[field] = true;\n        } else if (Array.isArray(field)) {\n            field.forEach((item) => group[item] = true);\n        }\n\n        return group;\n    }\n\n    /**\n     * Checkes whether a given field name is in exclusion group\n     * or not a member of inclusion group (when present)\n     *\n     * @param {String} fieldName\n     * @return {Boolean}\n     */\n    excludes(fieldName) {\n        if (this.only && !this.only[fieldName]) {\n            return true;\n        }\n\n        if (this.not && this.not[fieldName]) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Test whether a given argument matches\n     * the `specific` filter convention\n     *\n     * @param {Any} item\n     * @return {boolean}\n     */\n    static is(item) {\n        if (Array.isArray(item)) {\n            return item.every((item) => typeof item === 'string');\n        }\n\n        if (typeof item === 'string') { return true; }\n\n        if (item !== null && typeof item === 'object' && (\n            item.hasOwnProperty('only')\n            || item.hasOwnProperty('not')\n        )) {\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport default Specific;","import Context from '../Context';\nimport test, { runAsync } from '../test';\nimport passableResult from '../passableResult';\nimport Specific from '../Specific';\nimport { singleton } from '../../lib';\n\nconst initError = (name, value, doc) => `[Passable]: failed during suite initialization. Unexpected '${typeof value}' for '${name}' argument.\n    See: ${doc ? doc : 'https://fiverr.github.io/passable/getting_started/writing_tests.html'}`;\n\nconst passable = (name, tests, specific) => {\n    if (typeof name !== 'string') {\n        throw new TypeError(initError('suite name', name));\n    }\n\n    if (typeof tests !== 'function') {\n        throw new TypeError(initError('tests', tests));\n    }\n\n    if (specific && !Specific.is(specific)) {\n        throw new TypeError(initError('specific', tests, 'https://fiverr.github.io/passable/test/specific.html'));\n    }\n\n    const result = passableResult(name);\n\n    const pending = [];\n\n    new Context({\n        specific: new Specific(specific),\n        result,\n        pending\n    });\n\n    tests(test, result.output);\n\n    Context.clear();\n\n    [...pending].forEach(runAsync);\n\n    return result.output;\n};\n\nexport default passable;\n","/**\n * @type {String} Error thrown when draft gets called without an active Passable context.\n */\nexport const ERROR_NO_CONTEXT = '[Passable]: Draft was called outside of the context of a running suite. Please make sure you call it only from your Passable suite.';\n","import { singleton } from '../../lib';\nimport { ERROR_NO_CONTEXT } from './constants';\n\n/**\n * @return {Object} Current draft.\n */\nconst draft = () => {\n\n    const ctx = singleton.use().ctx;\n\n    if (ctx) {\n        return ctx.result.output;\n    }\n\n    setTimeout(() => {\n        throw new Error(ERROR_NO_CONTEXT);\n    });\n};\n\nexport default draft;\n","/**\n * Run tests and catch errors\n *\n * @param {function} callback The test content\n * @return {boolean}\n */\nfunction validate(test) {\n\n    if (typeof test !== 'function' && !(test instanceof Promise)) {\n        throw new TypeError(`[Validate]: expected ${typeof test} to be a function.`);\n    }\n\n    try {\n        return test() !== false;\n    } catch (_) {\n        return false;\n    }\n}\n\nexport default validate;\n","import enforce from 'n4s/dist/enforce.min';\nimport any from 'anyone/any';\nimport passable from './core/passable';\nimport draft from './core/draft';\nimport test from './core/test';\nimport validate from './utilities/validate';\nimport { singleton } from './lib';\nimport { WARN, FAIL, VERSION } from './constants';\n\npassable.VERSION = VERSION;\npassable.enforce = enforce;\npassable.draft = draft;\npassable.Enforce = enforce.Enforce;\npassable.test = test;\npassable.validate = validate;\npassable.any = any;\npassable.WARN = WARN;\npassable.FAIL = FAIL;\n\nsingleton.register(passable);\n\nexport default passable;\n"],"names":["n","r","module","this","Object","assign","arguments","length","t","e","prototype","hasOwnProperty","call","apply","Array","isArray","o","RegExp","test","u","includes","i","a","isNaN","parseFloat","Number","isFinite","f","c","keys","s","l","y","g","p","m","h","concat","Error","v","d","N","Proxy","get","b","reduce","setTimeout","Function","negativeForm","alias","isNumber","isString","matches","inside","equals","numberEquals","isNumeric","isEmpty","greaterThan","greaterThanOrEquals","lessThan","lessThanOrEquals","longerThan","longerThanOrEquals","shorterThan","shorterThanOrEquals","lengthEquals","isOdd","isEven","isTruthy","E","Enforce","global","factory","run","arg","output","Boolean","err","any","_len","args","_key","some","globalObject","PASSABLE_MAJOR","PASSABLE_VERSION","split","SYMBOL_PASSABLE","Symbol","throwMultiplePassableError","versions","join","register","passable","existing","go","VERSION","singletonExport","use","Context","parent","singleton","ctx","clear","WARN","FAIL","isTestFn","testFn","then","TestObject","fieldName","statement","severity","failed","valueOf","fail","result","setPending","pending","push","clearPending","filter","runAsync","testObject","markAsync","done","hasRemainingPendingTests","markAsDone","rejectionMessage","preRun","specific","excludes","addToSkipped","initFieldCounters","bumpTestCounter","type","severities","passableResult","name","completionCallbacks","asyncObject","hasValidationErrors","hasValidationWarnings","cancelled","testsPerformed","testCount","failCount","warnCount","bumpTestWarning","warnings","bumpTestError","errors","selectedSeverity","skipped","runCompletionCallbacks","forEach","cb","callbacks","callback","after","cancel","getErrors","getWarnings","hasErrors","hasWarnings","defineProperties","value","writable","configurable","enumerable","Specific","is","TypeError","only","populateGroup","not","group","field","item","every","initError","doc","tests","ERROR_NO_CONTEXT","draft","validate","Promise","_","enforce"],"mappings":"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"}