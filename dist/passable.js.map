{"version":3,"file":"passable.js","sources":["../src/core/Context/index.js","../src/constants.js","../src/core/test/lib/isTestFn/index.js","../src/core/test/lib/TestObject/index.js","../src/core/test/index.js","../src/core/passableResult/index.js","../src/core/Specific/index.js","../src/core/passable/index.js","../src/core/draft/constants.js","../src/core/draft/index.js","../src/utilities/validate/index.js","../node_modules/n4s/dist/enforce.min.js","../node_modules/anyone/any/index.js","../src/index.js"],"sourcesContent":["/**\n * Creates a new context object, and assigns it as a static property on the constructor function for outside reference.\n * @param {Object} parent   Parent context.\n */\nconst Context = function(parent) {\n    Context.ctx = this;\n    Object.assign(this, parent);\n};\n\n/**\n * Clears stored instance from constructor function.\n */\nContext.clear = function() {\n    Context.ctx = null;\n};\n\nexport default Context;\n","export const WARN = 'warn';\nexport const FAIL = 'fail';\n","/**\n * Checks that a given argument qualifies as a test function\n * @param {*} testFn\n * @return {Boolean}\n */\nconst isTestFn = (testFn) => {\n    if (!testFn) {\n        return false;\n    }\n\n    return typeof testFn.then === 'function' || typeof testFn === 'function';\n};\n\nexport default isTestFn;\n","/**\n * Describes a test call inside a passable suite.\n * @param {Object} parent               Parent Context.\n * @param {String} fieldName            Name of the field being tested.\n * @param {String} statement            The message returned when failing.\n * @param {Promise|Function} testFn     The actual test callbrack or promise.\n * @param {String} [severity]           Indicates whether the test should fail or warn.\n */\nfunction TestObject(ctx, fieldName, statement, testFn, severity) {\n    Object.assign(this, {\n        ctx,\n        testFn,\n        fieldName,\n        statement,\n        severity,\n        failed: false\n    });\n};\n\n/**\n * @returns Current validity status of a test.\n */\nTestObject.prototype.valueOf = function() {\n    return this.failed !== true;\n};\n\n/**\n * Sets a field to failed.\n * @returns {TestObject} Current instance.\n */\nTestObject.prototype.fail = function() {\n\n    this.ctx.result.fail(\n        this.fieldName,\n        this.statement,\n        this.severity\n    );\n\n    this.failed = true;\n    return this;\n};\n\n/**\n * Adds current test to pending list.\n */\nTestObject.prototype.setPending = function() {\n    this.ctx.pending.push(this);\n};\n\n/**\n * Removes test from pending list.\n */\nTestObject.prototype.clearPending = function() {\n    this.ctx.pending = this.ctx.pending.filter((t) => t !== this);\n};\n\nexport default TestObject;\n","import { FAIL } from '../../constants';\nimport Context from '../Context';\nimport { isTestFn, TestObject } from './lib';\n\n/**\n * Run async test.\n * @param {TestObject} testObject A TestObject instance.\n */\nexport const runAsync = (testObject) => {\n    const { fieldName, testFn, statement, ctx } = testObject;\n\n    ctx.result.markAsync(fieldName);\n\n    const done = () => {\n        testObject.clearPending();\n\n        if (!hasRemainingPendingTests(ctx, fieldName)) {\n            ctx.result.markAsDone(fieldName);\n        }\n\n        if (!hasRemainingPendingTests(ctx)) {\n            ctx.result.markAsDone();\n        }\n    };\n\n    const fail = (rejectionMessage) => {\n        testObject.statement = typeof rejectionMessage === 'string'\n            ? rejectionMessage\n            : statement;\n\n        if (ctx.pending.includes(testObject)) {\n            testObject.fail();\n        }\n\n        done();\n    };\n\n    try {\n        testFn.then(done, fail);\n    } catch (e) {\n        fail();\n    }\n};\n\n/**\n * Checks if there still are remaining pending tests for given criteria\n * @param {Object} ctx          Parent context\n * @param {String} [fieldName]  Name of the field to test against\n * @return {Boolean}\n */\nconst hasRemainingPendingTests = (ctx, fieldName) => {\n    if (!ctx.pending.length) {\n        return false;\n    }\n\n    if (fieldName) {\n        return ctx.pending.some((testObject) => testObject.fieldName === fieldName);\n    }\n\n    return !!ctx.pending.length;\n};\n\n/**\n * Performs \"shallow\" run over test functions, assuming sync tests only.\n * @param {TestObject} testObject TestObject instance.\n * @return {*} Result from test function\n */\nconst preRun = (testObject) => {\n    let result;\n    try {\n        result = testObject.testFn();\n    } catch (e) {\n        result = false;\n    }\n\n    if (result === false) {\n        testObject.fail();\n    }\n\n    return result;\n};\n\n/**\n * Registers test, if async - adds to pending array\n * @param {TestObject} testObject   A TestObject Instance.\n */\nconst register = (testObject) => {\n    const { testFn, ctx, fieldName } = testObject;\n    let pending = false;\n    let result;\n\n    if (ctx.specific.excludes(fieldName)) {\n        ctx.result.addToSkipped(fieldName);\n        return;\n    }\n\n    ctx.result.initFieldCounters(fieldName);\n    ctx.result.bumpTestCounter(fieldName);\n\n    if (testFn && typeof testFn.then === 'function') {\n        pending = true;\n    } else {\n        result = preRun(testObject);\n    }\n\n    if (result && typeof result.then === 'function') {\n        pending = true;\n\n        testObject.testFn = result;\n    }\n\n    if (pending) {\n        testObject.setPending();\n    }\n};\n\n/**\n * Test function used by consumer to provide their own validations.\n * @param {String} fieldName            Name of the field to test.\n * @param {String} [statement]          The message returned in case of a failure.\n * @param {function | Promise} testFn   The actual test callback or promise.\n * @param {String} [severity]           Indicates whether the test should fail or warn.\n * @return {TestObject}                 A TestObject instance.\n */\nconst test = (fieldName, ...args) => {\n    let statement,\n        testFn,\n        severity;\n\n    if (typeof args[0] === 'string') {\n        [statement, testFn, severity] = args;\n    } else if (isTestFn(args[0])) {\n        [testFn, severity] = args;\n    }\n\n    if (!isTestFn(testFn)) {\n        return;\n    }\n\n    const testObject = new TestObject(\n        Context.ctx,\n        fieldName,\n        statement,\n        testFn,\n        severity || FAIL\n    );\n\n    register(testObject);\n\n    return testObject;\n};\n\nexport default test;\n","import { WARN, FAIL } from '../../constants';\nconst severities = [ WARN, FAIL ];\n\nconst passableResult = (name) => {\n\n    const completionCallbacks = [];\n    let asyncObject = null;\n    let hasValidationErrors = false;\n    let hasValidationWarnings = false;\n    let cancelled = false;\n\n    /**\n     * Initializes specific field's counters\n     * @param {string} fieldName - The name of the field.\n     */\n    const initFieldCounters = (fieldName) => {\n        if (output.testsPerformed[fieldName]) { return output; }\n\n        output.testsPerformed[fieldName] = {\n            testCount: 0,\n            failCount: 0,\n            warnCount: 0\n        };\n    };\n\n    /**\n     * Bumps test counters to indicate tests that's being performed\n     * @param {string} fieldName - The name of the field.\n     */\n    const bumpTestCounter = (fieldName) => {\n        if (!output.testsPerformed[fieldName]) { return output; }\n\n        output.testsPerformed[fieldName].testCount++;\n        output.testCount++;\n    };\n\n    /**\n     * Bumps field's warning counts and adds warning string\n     * @param {string} fieldName - The name of the field.\n     * @param {string} statement - The error string to add to the object.\n     */\n    const bumpTestWarning = (fieldName, statement) => {\n        hasValidationWarnings = true;\n        output.warnings[fieldName] = output.warnings[fieldName] || [];\n        output.warnings[fieldName].push(statement);\n        output.warnCount++;\n        output.testsPerformed[fieldName].warnCount++;\n    };\n\n    /**\n     * Bumps field's error counts and adds error string\n     * @param {string} fieldName - The name of the field.\n     * @param {string} statement - The error string to add to the object.\n     */\n    const bumpTestError = (fieldName, statement) => {\n        hasValidationErrors = true;\n        output.errors[fieldName] = output.errors[fieldName] || [];\n        output.errors[fieldName].push(statement);\n        output.failCount++;\n        output.testsPerformed[fieldName].failCount++;\n    };\n\n    /**\n     * Fails a field and updates output accordingly\n     * @param {string} fieldName - The name of the field.\n     * @param {string} statement - The error string to add to the object.\n     * @param {string} severity - Whether it is a `fail` or `warn` test.\n     */\n    const fail = (fieldName, statement, severity) => {\n        if (!output.testsPerformed[fieldName]) { return output; }\n        const selectedSeverity = severity && severities.includes(severity) ? severity : FAIL;\n        selectedSeverity === WARN\n            ? bumpTestWarning(fieldName, statement)\n            : bumpTestError(fieldName, statement);\n    };\n\n    /**\n     * Uniquely add a field to the `skipped` list\n     * @param {string} fieldName - The name of the field.\n     */\n    const addToSkipped = (fieldName) => {\n        !output.skipped.includes(fieldName) && output.skipped.push(fieldName);\n    };\n\n    /**\n     * Runs completion callbacks aggregated by `done`\n     * regardless of success or failure\n     */\n    const runCompletionCallbacks = () => {\n        completionCallbacks.forEach((cb) => !cancelled && cb(output));\n    };\n\n    /**\n     * Marks a field as async\n     * @param {string} fieldName - The name of the field.\n    */\n    const markAsync = (fieldName) => {\n        asyncObject = asyncObject || {};\n        asyncObject[fieldName] = asyncObject[fieldName] || {};\n        asyncObject[fieldName] = {\n            done: false,\n            callbacks: asyncObject[fieldName].callbacks || []\n        };\n    };\n\n    /**\n     * Marks an async field as done\n     * @param {string} fieldName - The name of the field.\n    */\n    const markAsDone = (fieldName) => {\n        if (!fieldName) {\n            return runCompletionCallbacks();\n        }\n\n        if (asyncObject !== null && asyncObject[fieldName]) {\n            asyncObject[fieldName].done = true;\n\n            // run field callbacks set in `after`\n            if (asyncObject[fieldName].callbacks) {\n                asyncObject[fieldName].callbacks.forEach((callback) => !cancelled && callback(output));\n            }\n        }\n    };\n\n    /**\n     * Registers callback functions to be run when test suite is done running\n     * If current suite is not async, runs the callback immediately\n     * @param {function} callback the function to be called on done\n     * @return {object} output object\n     */\n    const done = (callback) => {\n        if (typeof callback !== 'function') {return output;}\n        if (!asyncObject) {\n            callback(output);\n        }\n\n        completionCallbacks.push(callback);\n\n        return output;\n    };\n\n    /**\n     * Registers callback functions to be run when a certain field is done running\n     * If field is not async, runs the callback immediately\n     * @param {string} fieldName - The name of the field.\n     * @param {function} callback the function to be called on done\n     * @return {object} output object\n     */\n    const after = (fieldName, callback) => {\n        if (typeof callback !== 'function') {\n            return output;\n        }\n\n        asyncObject = asyncObject || {};\n        if (!asyncObject[fieldName] && output.testsPerformed[fieldName]) {\n            callback(output);\n        } else if (asyncObject[fieldName]) {\n            asyncObject[fieldName].callbacks = [...(asyncObject[fieldName].callbacks || []), callback];\n        }\n\n        return output;\n    };\n\n    /**\n     * cancels done/after callbacks. They won't invoke when async operations complete\n     */\n    const cancel = () => {\n        cancelled = true;\n\n        return output;\n    };\n\n    /**\n     * Gets all the errors of a field, or of the whole object\n     * @param {string} fieldName - The name of the field.\n     * @return {array | object} The field's errors, or all errors\n     */\n    const getErrors = (fieldName) => {\n        if (!fieldName) {\n            return output.errors;\n        }\n\n        if (output.errors[fieldName]) {\n            return output.errors[fieldName];\n        }\n\n        return [];\n    };\n\n    /**\n     * Gets all the warnings of a field, or of the whole object\n     * @param {string} [fieldName] - The name of the field.\n     * @return {array | object} The field's warnings, or all warnings\n     */\n    const getWarnings = (fieldName) => {\n        if (!fieldName) {\n            return output.warnings;\n        }\n\n        if (output.warnings[fieldName]) {\n            return output.warnings[fieldName];\n        }\n\n        return [];\n    };\n\n    /**\n     * Checks if a certain field (or the whole suite) has errors\n     * @param {string} [fieldName]\n     * @return {boolean}\n     */\n    const hasErrors = (fieldName) => {\n        if (!fieldName) {\n            return hasValidationErrors;\n        }\n\n        return Boolean(output.getErrors(fieldName).length);\n    };\n\n    /**\n     * Checks if a certain field (or the whole suite) has warnings\n     * @param {string} [fieldName] - The name of the field.\n     * @return {boolean}\n     */\n    const hasWarnings = (fieldName) => {\n        if (!fieldName) {\n            return hasValidationWarnings;\n        }\n\n        return Boolean(output.getWarnings(fieldName).length);\n    };\n\n    const output = {\n        name,\n        failCount: 0,\n        warnCount: 0,\n        testCount: 0,\n        testsPerformed: {},\n        errors: {},\n        warnings: {},\n        skipped: []\n    };\n\n    Object.defineProperties(output, {\n        hasErrors: {\n            value: hasErrors,\n            writable: true,\n            configurable: true,\n            enumerable: false\n        },\n        hasWarnings: {\n            value: hasWarnings,\n            writable: true,\n            configurable: true,\n            enumerable: false\n        },\n        getErrors: {\n            value: getErrors,\n            writable: true,\n            configurable: true,\n            enumerable: false\n        },\n        getWarnings: {\n            value: getWarnings,\n            writable: true,\n            configurable: true,\n            enumerable: false\n        },\n        done: {\n            value: done,\n            writable: true,\n            configurable: true,\n            enumerable: false\n        },\n        after: {\n            value: after,\n            writable: true,\n            configurable: true,\n            enumerable: false\n        },\n        cancel: {\n            value: cancel,\n            writable: true,\n            configurable: true,\n            enumerable: false\n        }\n    });\n\n    return {\n        initFieldCounters,\n        bumpTestError,\n        bumpTestWarning,\n        bumpTestCounter,\n        fail,\n        addToSkipped,\n        runCompletionCallbacks,\n        markAsync,\n        markAsDone,\n        output\n    };\n};\n\nexport default passableResult;\n","/** Class representing validation inclusion and exclusion groups */\nclass Specific {\n\n    /**\n     * Initialize Specific object\n     *\n     * @param {String | Array | Object | undefined} specific\n     */\n    constructor(specific) {\n\n        if (!specific) { return; }\n\n        if (!Specific.is(specific)) {\n            throw new TypeError();\n        }\n\n        if (typeof specific === 'string' || Array.isArray(specific)) {\n            if (specific.length === 0) { return; }\n            this.only = this.populateGroup(this.only, specific);\n            return;\n        }\n\n        if (specific.only) {\n            this.only = this.populateGroup(this.only, specific.only);\n        }\n\n        if (specific.not) {\n            this.not = this.populateGroup(this.not, specific.not);\n        }\n    }\n\n    /**\n     * Populate inclusion and exclusion groups\n     *\n     * @param {Object} group - the group to populate.\n     * @param {String | Array} field - the field to add to the group\n     * @return {Object} modified group\n     */\n    populateGroup(group, field) {\n        group = group || {};\n\n        if (typeof field === 'string') {\n            group[field] = true;\n        } else if (Array.isArray(field)) {\n            field.forEach((item) => group[item] = true);\n        }\n\n        return group;\n    }\n\n    /**\n     * Checkes whether a given field name is in exclusion group\n     * or not a member of inclusion group (when present)\n     *\n     * @param {String} fieldName\n     * @return {Boolean}\n     */\n    excludes(fieldName) {\n        if (this.only && !this.only[fieldName]) {\n            return true;\n        }\n\n        if (this.not && this.not[fieldName]) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Test whether a given argument matches\n     * the `specific` filter convention\n     *\n     * @param {Any} item\n     * @return {boolean}\n     */\n    static is(item) {\n        if (Array.isArray(item)) {\n            return item.every((item) => typeof item === 'string');\n        }\n\n        if (typeof item === 'string') { return true; }\n\n        if (item !== null && typeof item === 'object' && (\n            item.hasOwnProperty('only')\n            || item.hasOwnProperty('not')\n        )) {\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport default Specific;","import Context from '../Context';\nimport test, { runAsync } from '../test';\nimport passableResult from '../passableResult';\nimport Specific from '../Specific';\n\nconst initError = (name, value, doc) => `[Passable]: failed during suite initialization. Unexpected '${typeof value}' for '${name}' argument.\n    See: ${doc ? doc : 'https://fiverr.github.io/passable/getting_started/writing_tests.html'}`;\n\nconst passable = (name, tests, specific) => {\n\n    if (typeof name !== 'string') {\n        throw new TypeError(initError('suite name', name));\n    }\n\n    if (typeof tests !== 'function') {\n        throw new TypeError(initError('tests', tests));\n    }\n\n    if (specific && !Specific.is(specific)) {\n        throw new TypeError(initError('specific', tests, 'https://fiverr.github.io/passable/test/specific.html'));\n    }\n\n    const result = passableResult(name);\n\n    const pending = [];\n\n    new Context({\n        specific: new Specific(specific),\n        result,\n        pending\n    });\n\n    tests(test, result.output);\n\n    Context.clear();\n\n    [...pending].forEach(runAsync);\n\n    return result.output;\n};\n\nexport default passable;\n","/**\n * @type {String} Error thrown when draft gets called without an active Passable context.\n */\nexport const ERROR_NO_CONTEXT = '[Passable]: Draft was called outside of the context of a running suite. Please make sure you call it only from your Passable suite.';\n","import Context from '../Context';\nimport { ERROR_NO_CONTEXT } from './constants';\n\n/**\n * @return {Object} Current draft.\n */\nconst draft = () => {\n\n    if (Context.ctx) {\n        return Context.ctx.result.output;\n    }\n\n    setTimeout(() => {\n        throw new Error(ERROR_NO_CONTEXT);\n    });\n};\n\nexport default draft;\n","/**\n * Run tests and catch errors\n *\n * @param {function} callback The test content\n * @return {boolean}\n */\nfunction validate(test) {\n\n    if (typeof test !== 'function' && !(test instanceof Promise)) {\n        throw new TypeError(`[Validate]: expected ${typeof test} to be a function.`);\n    }\n\n    try {\n        return test() !== false;\n    } catch (_) {\n        return false;\n    }\n}\n\nexport default validate;\n","!function(n,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(n=n||self).enforce=e()}(this,function(){\"use strict\";function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&\"function\"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?\"symbol\":typeof n})(e)}function e(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function t(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function r(n){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?t(o,!0).forEach(function(t){e(n,t,o[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(o)):t(o).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(o,e))})}return n}var o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)&&\"function\"==typeof n[e]},u=Function(\"return this\")(),i=function(){return\"function\"==typeof u.Proxy};function a(n){return Boolean(Array.isArray(n))}function c(n){return Boolean(\"number\"==typeof n)}function f(n){return Boolean(\"string\"==typeof n)}function s(n,e){return e instanceof RegExp?e.test(n):\"string\"==typeof e&&new RegExp(e).test(n)}function l(e,t){return Array.isArray(t)&&[\"string\",\"number\",\"boolean\"].includes(n(e))?t.includes(e):\"string\"==typeof t&&\"string\"==typeof e&&t.includes(e)}function y(n,e){return n===e}function p(n){var e=!isNaN(parseFloat(n))&&!isNaN(Number(n))&&isFinite(n);return Boolean(e)}function g(n,e){return p(n)&&p(e)&&Number(n)===Number(e)}function b(e){return!e||(p(e)?0===e:Object.prototype.hasOwnProperty.call(e,\"length\")?0===e.length:\"object\"!==n(e)||0===Object.keys(e).length)}function m(n,e){return p(n)&&p(e)&&Number(n)>Number(e)}function v(n,e){return p(n)&&p(e)&&Number(n)>=Number(e)}function h(n,e){return p(n)&&p(e)&&Number(n)<Number(e)}function O(n,e){return p(n)&&p(e)&&Number(n)<=Number(e)}function N(n,e){return n.length===e}a.negativeForm=\"isNotArray\",c.negativeForm=\"isNotNumber\",f.negativeForm=\"isNotString\",s.negativeForm=\"notMatches\",l.negativeForm=\"notInside\",y.negativeForm=\"notEquals\",p.negativeForm=\"isNotNumeric\",g.negativeForm=\"numberNotEquals\",b.negativeForm=\"isNotEmpty\",m.alias=\"gt\",v.alias=\"gte\",h.alias=\"lt\",O.alias=\"lte\",N.negativeForm=\"lengthNotEquals\";var d=function(n){var e=function(e){var t=n[e].negativeForm,r=n[e].alias;t&&(n[t]=function(){return!n[e].apply(n,arguments)}),r&&(n[r]=n[e])};for(var t in n)e(t);return n}({isArray:a,isNumber:c,isString:f,matches:s,inside:l,equals:y,numberEquals:g,isNumeric:p,isEmpty:b,greaterThan:m,greaterThanOrEquals:v,lessThan:h,lessThanOrEquals:O,longerThan:function(n,e){return n.length>e},longerThanOrEquals:function(n,e){return n.length>=e},shorterThan:function(n,e){return n.length<e},shorterThanOrEquals:function(n,e){return n.length<=e},lengthEquals:N,isOdd:function(n){return!!p(n)&&n%2!=0},isEven:function(n){return!!p(n)&&n%2==0}});function E(e,t){if(\"function\"==typeof e){for(var r=arguments.length,o=new Array(r>2?r-2:0),u=2;u<r;u++)o[u-2]=arguments[u];if(!0!==e.apply(void 0,[t].concat(o)))throw new Error(\"[Enforce]: invalid \".concat(n(t),\" value\"))}}function j(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=r({},d,{},n);if(i())return function(n){var e=new Proxy(t,{get:function(t,r){if(o(t,r))return function(){for(var o=arguments.length,u=new Array(o),i=0;i<o;i++)u[i]=arguments[i];return E.apply(void 0,[t[r],n].concat(u)),e}}});return e};var u=Object.keys(t);return function(n){return u.reduce(function(u,i){return Object.assign(u,r({},o(t,i)&&e({},i,function(){for(var e=arguments.length,r=new Array(e),o=0;o<e;o++)r[o]=arguments[o];return E.apply(void 0,[t[i],n].concat(r)),u})))},{})}}var w=new j;return w.Enforce=j,w});\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = global || self, global.any = factory());\n}(this, function () { 'use strict';\n\n    /**\n     * Accepts a value or a function, and coerces it into a boolean value\n     * @param {*|Function} [arg] Any expression or value\n     * @return {Boolean}\n     */\n    var run = function run(arg) {\n      if (typeof arg === 'function') {\n        try {\n          var output = arg();\n          return output != false && Boolean(output);\n        } catch (err) {\n          return false;\n        }\n      }\n\n      return arg != false && Boolean(arg);\n    };\n\n    /**\n     * Checks that at least one passed argument evaluates to a truthy value.\n     * @param  {[]*} [args] Any amount of values or expressions.\n     * @returns {Boolean}\n     */\n\n    var any = function any() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return args.some(run);\n    };\n\n    return any;\n\n}));\n","import passable from './core/passable';\nimport draft from './core/draft';\nimport test from './core/test';\nimport validate from './utilities/validate';\nimport { WARN, FAIL } from './constants';\nimport enforce from 'n4s/dist/enforce.min';\nimport any from 'anyone/any';\n\npassable.VERSION = PASSABLE_VERSION;\npassable.enforce = enforce;\npassable.draft = draft;\npassable.Enforce = enforce.Enforce;\npassable.test = test;\npassable.validate = validate;\npassable.any = any;\npassable.WARN = WARN;\npassable.FAIL = FAIL;\n\nexport default passable;\n"],"names":["Context","parent","ctx","clear","WARN","FAIL","isTestFn","testFn","then","TestObject","fieldName","statement","severity","failed","prototype","valueOf","fail","result","setPending","pending","push","clearPending","filter","t","runAsync","testObject","markAsync","done","hasRemainingPendingTests","markAsDone","rejectionMessage","includes","e","length","some","preRun","register","specific","excludes","addToSkipped","initFieldCounters","bumpTestCounter","test","args","severities","passableResult","name","completionCallbacks","asyncObject","hasValidationErrors","hasValidationWarnings","cancelled","output","testsPerformed","testCount","failCount","warnCount","bumpTestWarning","warnings","bumpTestError","errors","selectedSeverity","skipped","runCompletionCallbacks","forEach","cb","callbacks","callback","after","cancel","getErrors","getWarnings","hasErrors","Boolean","hasWarnings","Object","defineProperties","value","writable","configurable","enumerable","Specific","is","TypeError","Array","isArray","only","populateGroup","not","group","field","item","every","hasOwnProperty","initError","doc","passable","tests","ERROR_NO_CONTEXT","draft","setTimeout","Error","validate","Promise","_","n","module","this","Symbol","iterator","constructor","defineProperty","keys","getOwnPropertySymbols","r","getOwnPropertyDescriptor","apply","arguments","o","getOwnPropertyDescriptors","call","u","Function","i","Proxy","a","c","f","s","RegExp","l","y","p","isNaN","parseFloat","Number","isFinite","g","b","m","v","h","O","N","negativeForm","alias","d","isNumber","isString","matches","inside","equals","numberEquals","isNumeric","isEmpty","greaterThan","greaterThanOrEquals","lessThan","lessThanOrEquals","longerThan","longerThanOrEquals","shorterThan","shorterThanOrEquals","lengthEquals","isOdd","isEven","E","concat","j","get","reduce","w","Enforce","global","factory","run","arg","err","any","_len","_key","VERSION","PASSABLE_VERSION","enforce"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;;;;EAIA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAASC,MAAT,EAAiB;EAC7BD,EAAAA,OAAO,CAACE,GAAR,GAAc,IAAd;;EACA,WAAc,IAAd,EAAoBD,MAApB;EACH,CAHD;EAKA;;;;;EAGAD,OAAO,CAACG,KAAR,GAAgB,YAAW;EACvBH,EAAAA,OAAO,CAACE,GAAR,GAAc,IAAd;EACH,CAFD;;ECZO,IAAME,IAAI,GAAG,MAAb;AACP,EAAO,IAAMC,IAAI,GAAG,MAAb;;ECDP;;;;;EAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAAY;EACzB,MAAI,CAACA,MAAL,EAAa;EACT,WAAO,KAAP;EACH;;EAED,SAAO,OAAOA,MAAM,CAACC,IAAd,KAAuB,UAAvB,IAAqC,OAAOD,MAAP,KAAkB,UAA9D;EACH,CAND;;ECLA;;;;;;;;EAQA,SAASE,UAAT,CAAoBP,GAApB,EAAyBQ,SAAzB,EAAoCC,SAApC,EAA+CJ,MAA/C,EAAuDK,QAAvD,EAAiE;EAC7D,WAAc,IAAd,EAAoB;EAChBV,IAAAA,GAAG,EAAHA,GADgB;EAEhBK,IAAAA,MAAM,EAANA,MAFgB;EAGhBG,IAAAA,SAAS,EAATA,SAHgB;EAIhBC,IAAAA,SAAS,EAATA,SAJgB;EAKhBC,IAAAA,QAAQ,EAARA,QALgB;EAMhBC,IAAAA,MAAM,EAAE;EANQ,GAApB;EAQH;EAED;;;;EAGAJ,UAAU,CAACK,SAAX,CAAqBC,OAArB,GAA+B,YAAW;EACtC,SAAO,KAAKF,MAAL,KAAgB,IAAvB;EACH,CAFD;EAIA;;;;;;EAIAJ,UAAU,CAACK,SAAX,CAAqBE,IAArB,GAA4B,YAAW;EAEnC,OAAKd,GAAL,CAASe,MAAT,CAAgBD,IAAhB,CACI,KAAKN,SADT,EAEI,KAAKC,SAFT,EAGI,KAAKC,QAHT;EAMA,OAAKC,MAAL,GAAc,IAAd;EACA,SAAO,IAAP;EACH,CAVD;EAYA;;;;;EAGAJ,UAAU,CAACK,SAAX,CAAqBI,UAArB,GAAkC,YAAW;EACzC,OAAKhB,GAAL,CAASiB,OAAT,CAAiBC,IAAjB,CAAsB,IAAtB;EACH,CAFD;EAIA;;;;;EAGAX,UAAU,CAACK,SAAX,CAAqBO,YAArB,GAAoC,YAAW;EAAA;;EAC3C,OAAKnB,GAAL,CAASiB,OAAT,GAAmB,KAAKjB,GAAL,CAASiB,OAAT,CAAiBG,MAAjB,CAAwB,UAACC,CAAD;EAAA,WAAOA,CAAC,KAAK,KAAb;EAAA,GAAxB,CAAnB;EACH,CAFD;;EChDA;;;;;AAIA,EAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,UAAD,EAAgB;EAAA,MAC5Bf,SAD4B,GACUe,UADV,CAC5Bf,SAD4B;EAAA,MACjBH,MADiB,GACUkB,UADV,CACjBlB,MADiB;EAAA,MACTI,SADS,GACUc,UADV,CACTd,SADS;EAAA,MACET,GADF,GACUuB,UADV,CACEvB,GADF;EAGpCA,EAAAA,GAAG,CAACe,MAAJ,CAAWS,SAAX,CAAqBhB,SAArB;;EAEA,MAAMiB,IAAI,GAAG,SAAPA,IAAO,GAAM;EACfF,IAAAA,UAAU,CAACJ,YAAX;;EAEA,QAAI,CAACO,wBAAwB,CAAC1B,GAAD,EAAMQ,SAAN,CAA7B,EAA+C;EAC3CR,MAAAA,GAAG,CAACe,MAAJ,CAAWY,UAAX,CAAsBnB,SAAtB;EACH;;EAED,QAAI,CAACkB,wBAAwB,CAAC1B,GAAD,CAA7B,EAAoC;EAChCA,MAAAA,GAAG,CAACe,MAAJ,CAAWY,UAAX;EACH;EACJ,GAVD;;EAYA,MAAMb,IAAI,GAAG,SAAPA,IAAO,CAACc,gBAAD,EAAsB;EAC/BL,IAAAA,UAAU,CAACd,SAAX,GAAuB,OAAOmB,gBAAP,KAA4B,QAA5B,GACjBA,gBADiB,GAEjBnB,SAFN;;EAIA,QAAIT,GAAG,CAACiB,OAAJ,CAAYY,QAAZ,CAAqBN,UAArB,CAAJ,EAAsC;EAClCA,MAAAA,UAAU,CAACT,IAAX;EACH;;EAEDW,IAAAA,IAAI;EACP,GAVD;;EAYA,MAAI;EACApB,IAAAA,MAAM,CAACC,IAAP,CAAYmB,IAAZ,EAAkBX,IAAlB;EACH,GAFD,CAEE,OAAOgB,CAAP,EAAU;EACRhB,IAAAA,IAAI;EACP;EACJ,CAlCM;EAoCP;;;;;;;EAMA,IAAMY,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAC1B,GAAD,EAAMQ,SAAN,EAAoB;EACjD,MAAI,CAACR,GAAG,CAACiB,OAAJ,CAAYc,MAAjB,EAAyB;EACrB,WAAO,KAAP;EACH;;EAED,MAAIvB,SAAJ,EAAe;EACX,WAAOR,GAAG,CAACiB,OAAJ,CAAYe,IAAZ,CAAiB,UAACT,UAAD;EAAA,aAAgBA,UAAU,CAACf,SAAX,KAAyBA,SAAzC;EAAA,KAAjB,CAAP;EACH;;EAED,SAAO,CAAC,CAACR,GAAG,CAACiB,OAAJ,CAAYc,MAArB;EACH,CAVD;EAYA;;;;;;;EAKA,IAAME,MAAM,GAAG,SAATA,MAAS,CAACV,UAAD,EAAgB;EAC3B,MAAIR,MAAJ;;EACA,MAAI;EACAA,IAAAA,MAAM,GAAGQ,UAAU,CAAClB,MAAX,EAAT;EACH,GAFD,CAEE,OAAOyB,CAAP,EAAU;EACRf,IAAAA,MAAM,GAAG,KAAT;EACH;;EAED,MAAIA,MAAM,KAAK,KAAf,EAAsB;EAClBQ,IAAAA,UAAU,CAACT,IAAX;EACH;;EAED,SAAOC,MAAP;EACH,CAbD;EAeA;;;;;;EAIA,IAAMmB,QAAQ,GAAG,SAAXA,QAAW,CAACX,UAAD,EAAgB;EAAA,MACrBlB,MADqB,GACMkB,UADN,CACrBlB,MADqB;EAAA,MACbL,GADa,GACMuB,UADN,CACbvB,GADa;EAAA,MACRQ,SADQ,GACMe,UADN,CACRf,SADQ;EAE7B,MAAIS,OAAO,GAAG,KAAd;EACA,MAAIF,MAAJ;;EAEA,MAAIf,GAAG,CAACmC,QAAJ,CAAaC,QAAb,CAAsB5B,SAAtB,CAAJ,EAAsC;EAClCR,IAAAA,GAAG,CAACe,MAAJ,CAAWsB,YAAX,CAAwB7B,SAAxB;EACA;EACH;;EAEDR,EAAAA,GAAG,CAACe,MAAJ,CAAWuB,iBAAX,CAA6B9B,SAA7B;EACAR,EAAAA,GAAG,CAACe,MAAJ,CAAWwB,eAAX,CAA2B/B,SAA3B;;EAEA,MAAIH,MAAM,IAAI,OAAOA,MAAM,CAACC,IAAd,KAAuB,UAArC,EAAiD;EAC7CW,IAAAA,OAAO,GAAG,IAAV;EACH,GAFD,MAEO;EACHF,IAAAA,MAAM,GAAGkB,MAAM,CAACV,UAAD,CAAf;EACH;;EAED,MAAIR,MAAM,IAAI,OAAOA,MAAM,CAACT,IAAd,KAAuB,UAArC,EAAiD;EAC7CW,IAAAA,OAAO,GAAG,IAAV;EAEAM,IAAAA,UAAU,CAAClB,MAAX,GAAoBU,MAApB;EACH;;EAED,MAAIE,OAAJ,EAAa;EACTM,IAAAA,UAAU,CAACP,UAAX;EACH;EACJ,CA5BD;EA8BA;;;;;;;;;;EAQA,IAAMwB,IAAI,GAAG,SAAPA,IAAO,CAAChC,SAAD,EAAwB;EACjC,MAAIC,SAAJ,EACIJ,MADJ,EAEIK,QAFJ;;EADiC,oCAAT+B,IAAS;EAATA,IAAAA,IAAS;EAAA;;EAKjC,MAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAvB,EAAiC;EAC5BhC,IAAAA,SAD4B,GACGgC,IADH;EACjBpC,IAAAA,MADiB,GACGoC,IADH;EACT/B,IAAAA,QADS,GACG+B,IADH;EAEhC,GAFD,MAEO,IAAIrC,QAAQ,CAACqC,IAAI,CAAC,CAAD,CAAL,CAAZ,EAAuB;EACzBpC,IAAAA,MADyB,GACLoC,IADK;EACjB/B,IAAAA,QADiB,GACL+B,IADK;EAE7B;;EAED,MAAI,CAACrC,QAAQ,CAACC,MAAD,CAAb,EAAuB;EACnB;EACH;;EAED,MAAMkB,UAAU,GAAG,IAAIhB,UAAJ,CACfT,OAAO,CAACE,GADO,EAEfQ,SAFe,EAGfC,SAHe,EAIfJ,MAJe,EAKfK,QAAQ,IAAIP,IALG,CAAnB;EAQA+B,EAAAA,QAAQ,CAACX,UAAD,CAAR;EAEA,SAAOA,UAAP;EACH,CA1BD;;EC3HA,IAAMmB,UAAU,GAAG,CAAExC,IAAF,EAAQC,IAAR,CAAnB;;EAEA,IAAMwC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;EAE7B,MAAMC,mBAAmB,GAAG,EAA5B;EACA,MAAIC,WAAW,GAAG,IAAlB;EACA,MAAIC,mBAAmB,GAAG,KAA1B;EACA,MAAIC,qBAAqB,GAAG,KAA5B;EACA,MAAIC,SAAS,GAAG,KAAhB;EAEA;;;;;EAIA,MAAMX,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC9B,SAAD,EAAe;EACrC,QAAI0C,MAAM,CAACC,cAAP,CAAsB3C,SAAtB,CAAJ,EAAsC;EAAE,aAAO0C,MAAP;EAAgB;;EAExDA,IAAAA,MAAM,CAACC,cAAP,CAAsB3C,SAAtB,IAAmC;EAC/B4C,MAAAA,SAAS,EAAE,CADoB;EAE/BC,MAAAA,SAAS,EAAE,CAFoB;EAG/BC,MAAAA,SAAS,EAAE;EAHoB,KAAnC;EAKH,GARD;EAUA;;;;;;EAIA,MAAMf,eAAe,GAAG,SAAlBA,eAAkB,CAAC/B,SAAD,EAAe;EACnC,QAAI,CAAC0C,MAAM,CAACC,cAAP,CAAsB3C,SAAtB,CAAL,EAAuC;EAAE,aAAO0C,MAAP;EAAgB;;EAEzDA,IAAAA,MAAM,CAACC,cAAP,CAAsB3C,SAAtB,EAAiC4C,SAAjC;EACAF,IAAAA,MAAM,CAACE,SAAP;EACH,GALD;EAOA;;;;;;;EAKA,MAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAC/C,SAAD,EAAYC,SAAZ,EAA0B;EAC9CuC,IAAAA,qBAAqB,GAAG,IAAxB;EACAE,IAAAA,MAAM,CAACM,QAAP,CAAgBhD,SAAhB,IAA6B0C,MAAM,CAACM,QAAP,CAAgBhD,SAAhB,KAA8B,EAA3D;EACA0C,IAAAA,MAAM,CAACM,QAAP,CAAgBhD,SAAhB,EAA2BU,IAA3B,CAAgCT,SAAhC;EACAyC,IAAAA,MAAM,CAACI,SAAP;EACAJ,IAAAA,MAAM,CAACC,cAAP,CAAsB3C,SAAtB,EAAiC8C,SAAjC;EACH,GAND;EAQA;;;;;;;EAKA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACjD,SAAD,EAAYC,SAAZ,EAA0B;EAC5CsC,IAAAA,mBAAmB,GAAG,IAAtB;EACAG,IAAAA,MAAM,CAACQ,MAAP,CAAclD,SAAd,IAA2B0C,MAAM,CAACQ,MAAP,CAAclD,SAAd,KAA4B,EAAvD;EACA0C,IAAAA,MAAM,CAACQ,MAAP,CAAclD,SAAd,EAAyBU,IAAzB,CAA8BT,SAA9B;EACAyC,IAAAA,MAAM,CAACG,SAAP;EACAH,IAAAA,MAAM,CAACC,cAAP,CAAsB3C,SAAtB,EAAiC6C,SAAjC;EACH,GAND;EAQA;;;;;;;;EAMA,MAAMvC,IAAI,GAAG,SAAPA,IAAO,CAACN,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAoC;EAC7C,QAAI,CAACwC,MAAM,CAACC,cAAP,CAAsB3C,SAAtB,CAAL,EAAuC;EAAE,aAAO0C,MAAP;EAAgB;;EACzD,QAAMS,gBAAgB,GAAGjD,QAAQ,IAAIgC,UAAU,CAACb,QAAX,CAAoBnB,QAApB,CAAZ,GAA4CA,QAA5C,GAAuDP,IAAhF;EACAwD,IAAAA,gBAAgB,KAAKzD,IAArB,GACMqD,eAAe,CAAC/C,SAAD,EAAYC,SAAZ,CADrB,GAEMgD,aAAa,CAACjD,SAAD,EAAYC,SAAZ,CAFnB;EAGH,GAND;EAQA;;;;;;EAIA,MAAM4B,YAAY,GAAG,SAAfA,YAAe,CAAC7B,SAAD,EAAe;EAChC,KAAC0C,MAAM,CAACU,OAAP,CAAe/B,QAAf,CAAwBrB,SAAxB,CAAD,IAAuC0C,MAAM,CAACU,OAAP,CAAe1C,IAAf,CAAoBV,SAApB,CAAvC;EACH,GAFD;EAIA;;;;;;EAIA,MAAMqD,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;EACjChB,IAAAA,mBAAmB,CAACiB,OAApB,CAA4B,UAACC,EAAD;EAAA,aAAQ,CAACd,SAAD,IAAcc,EAAE,CAACb,MAAD,CAAxB;EAAA,KAA5B;EACH,GAFD;EAIA;;;;;;EAIA,MAAM1B,SAAS,GAAG,SAAZA,SAAY,CAAChB,SAAD,EAAe;EAC7BsC,IAAAA,WAAW,GAAGA,WAAW,IAAI,EAA7B;EACAA,IAAAA,WAAW,CAACtC,SAAD,CAAX,GAAyBsC,WAAW,CAACtC,SAAD,CAAX,IAA0B,EAAnD;EACAsC,IAAAA,WAAW,CAACtC,SAAD,CAAX,GAAyB;EACrBiB,MAAAA,IAAI,EAAE,KADe;EAErBuC,MAAAA,SAAS,EAAElB,WAAW,CAACtC,SAAD,CAAX,CAAuBwD,SAAvB,IAAoC;EAF1B,KAAzB;EAIH,GAPD;EASA;;;;;;EAIA,MAAMrC,UAAU,GAAG,SAAbA,UAAa,CAACnB,SAAD,EAAe;EAC9B,QAAI,CAACA,SAAL,EAAgB;EACZ,aAAOqD,sBAAsB,EAA7B;EACH;;EAED,QAAIf,WAAW,KAAK,IAAhB,IAAwBA,WAAW,CAACtC,SAAD,CAAvC,EAAoD;EAChDsC,MAAAA,WAAW,CAACtC,SAAD,CAAX,CAAuBiB,IAAvB,GAA8B,IAA9B,CADgD;;EAIhD,UAAIqB,WAAW,CAACtC,SAAD,CAAX,CAAuBwD,SAA3B,EAAsC;EAClClB,QAAAA,WAAW,CAACtC,SAAD,CAAX,CAAuBwD,SAAvB,CAAiCF,OAAjC,CAAyC,UAACG,QAAD;EAAA,iBAAc,CAAChB,SAAD,IAAcgB,QAAQ,CAACf,MAAD,CAApC;EAAA,SAAzC;EACH;EACJ;EACJ,GAbD;EAeA;;;;;;;;EAMA,MAAMzB,IAAI,GAAG,SAAPA,IAAO,CAACwC,QAAD,EAAc;EACvB,QAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;EAAC,aAAOf,MAAP;EAAe;;EACpD,QAAI,CAACJ,WAAL,EAAkB;EACdmB,MAAAA,QAAQ,CAACf,MAAD,CAAR;EACH;;EAEDL,IAAAA,mBAAmB,CAAC3B,IAApB,CAAyB+C,QAAzB;EAEA,WAAOf,MAAP;EACH,GATD;EAWA;;;;;;;;;EAOA,MAAMgB,KAAK,GAAG,SAARA,KAAQ,CAAC1D,SAAD,EAAYyD,QAAZ,EAAyB;EACnC,QAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;EAChC,aAAOf,MAAP;EACH;;EAEDJ,IAAAA,WAAW,GAAGA,WAAW,IAAI,EAA7B;;EACA,QAAI,CAACA,WAAW,CAACtC,SAAD,CAAZ,IAA2B0C,MAAM,CAACC,cAAP,CAAsB3C,SAAtB,CAA/B,EAAiE;EAC7DyD,MAAAA,QAAQ,CAACf,MAAD,CAAR;EACH,KAFD,MAEO,IAAIJ,WAAW,CAACtC,SAAD,CAAf,EAA4B;EAC/BsC,MAAAA,WAAW,CAACtC,SAAD,CAAX,CAAuBwD,SAAvB,gCAAwClB,WAAW,CAACtC,SAAD,CAAX,CAAuBwD,SAAvB,IAAoC,EAA5E,IAAiFC,QAAjF;EACH;;EAED,WAAOf,MAAP;EACH,GAbD;EAeA;;;;;EAGA,MAAMiB,MAAM,GAAG,SAATA,MAAS,GAAM;EACjBlB,IAAAA,SAAS,GAAG,IAAZ;EAEA,WAAOC,MAAP;EACH,GAJD;EAMA;;;;;;;EAKA,MAAMkB,SAAS,GAAG,SAAZA,SAAY,CAAC5D,SAAD,EAAe;EAC7B,QAAI,CAACA,SAAL,EAAgB;EACZ,aAAO0C,MAAM,CAACQ,MAAd;EACH;;EAED,QAAIR,MAAM,CAACQ,MAAP,CAAclD,SAAd,CAAJ,EAA8B;EAC1B,aAAO0C,MAAM,CAACQ,MAAP,CAAclD,SAAd,CAAP;EACH;;EAED,WAAO,EAAP;EACH,GAVD;EAYA;;;;;;;EAKA,MAAM6D,WAAW,GAAG,SAAdA,WAAc,CAAC7D,SAAD,EAAe;EAC/B,QAAI,CAACA,SAAL,EAAgB;EACZ,aAAO0C,MAAM,CAACM,QAAd;EACH;;EAED,QAAIN,MAAM,CAACM,QAAP,CAAgBhD,SAAhB,CAAJ,EAAgC;EAC5B,aAAO0C,MAAM,CAACM,QAAP,CAAgBhD,SAAhB,CAAP;EACH;;EAED,WAAO,EAAP;EACH,GAVD;EAYA;;;;;;;EAKA,MAAM8D,SAAS,GAAG,SAAZA,SAAY,CAAC9D,SAAD,EAAe;EAC7B,QAAI,CAACA,SAAL,EAAgB;EACZ,aAAOuC,mBAAP;EACH;;EAED,WAAOwB,OAAO,CAACrB,MAAM,CAACkB,SAAP,CAAiB5D,SAAjB,EAA4BuB,MAA7B,CAAd;EACH,GAND;EAQA;;;;;;;EAKA,MAAMyC,WAAW,GAAG,SAAdA,WAAc,CAAChE,SAAD,EAAe;EAC/B,QAAI,CAACA,SAAL,EAAgB;EACZ,aAAOwC,qBAAP;EACH;;EAED,WAAOuB,OAAO,CAACrB,MAAM,CAACmB,WAAP,CAAmB7D,SAAnB,EAA8BuB,MAA/B,CAAd;EACH,GAND;;EAQA,MAAMmB,MAAM,GAAG;EACXN,IAAAA,IAAI,EAAJA,IADW;EAEXS,IAAAA,SAAS,EAAE,CAFA;EAGXC,IAAAA,SAAS,EAAE,CAHA;EAIXF,IAAAA,SAAS,EAAE,CAJA;EAKXD,IAAAA,cAAc,EAAE,EALL;EAMXO,IAAAA,MAAM,EAAE,EANG;EAOXF,IAAAA,QAAQ,EAAE,EAPC;EAQXI,IAAAA,OAAO,EAAE;EARE,GAAf;EAWAa,EAAAA,MAAM,CAACC,gBAAP,CAAwBxB,MAAxB,EAAgC;EAC5BoB,IAAAA,SAAS,EAAE;EACPK,MAAAA,KAAK,EAAEL,SADA;EAEPM,MAAAA,QAAQ,EAAE,IAFH;EAGPC,MAAAA,YAAY,EAAE,IAHP;EAIPC,MAAAA,UAAU,EAAE;EAJL,KADiB;EAO5BN,IAAAA,WAAW,EAAE;EACTG,MAAAA,KAAK,EAAEH,WADE;EAETI,MAAAA,QAAQ,EAAE,IAFD;EAGTC,MAAAA,YAAY,EAAE,IAHL;EAITC,MAAAA,UAAU,EAAE;EAJH,KAPe;EAa5BV,IAAAA,SAAS,EAAE;EACPO,MAAAA,KAAK,EAAEP,SADA;EAEPQ,MAAAA,QAAQ,EAAE,IAFH;EAGPC,MAAAA,YAAY,EAAE,IAHP;EAIPC,MAAAA,UAAU,EAAE;EAJL,KAbiB;EAmB5BT,IAAAA,WAAW,EAAE;EACTM,MAAAA,KAAK,EAAEN,WADE;EAETO,MAAAA,QAAQ,EAAE,IAFD;EAGTC,MAAAA,YAAY,EAAE,IAHL;EAITC,MAAAA,UAAU,EAAE;EAJH,KAnBe;EAyB5BrD,IAAAA,IAAI,EAAE;EACFkD,MAAAA,KAAK,EAAElD,IADL;EAEFmD,MAAAA,QAAQ,EAAE,IAFR;EAGFC,MAAAA,YAAY,EAAE,IAHZ;EAIFC,MAAAA,UAAU,EAAE;EAJV,KAzBsB;EA+B5BZ,IAAAA,KAAK,EAAE;EACHS,MAAAA,KAAK,EAAET,KADJ;EAEHU,MAAAA,QAAQ,EAAE,IAFP;EAGHC,MAAAA,YAAY,EAAE,IAHX;EAIHC,MAAAA,UAAU,EAAE;EAJT,KA/BqB;EAqC5BX,IAAAA,MAAM,EAAE;EACJQ,MAAAA,KAAK,EAAER,MADH;EAEJS,MAAAA,QAAQ,EAAE,IAFN;EAGJC,MAAAA,YAAY,EAAE,IAHV;EAIJC,MAAAA,UAAU,EAAE;EAJR;EArCoB,GAAhC;EA6CA,SAAO;EACHxC,IAAAA,iBAAiB,EAAjBA,iBADG;EAEHmB,IAAAA,aAAa,EAAbA,aAFG;EAGHF,IAAAA,eAAe,EAAfA,eAHG;EAIHhB,IAAAA,eAAe,EAAfA,eAJG;EAKHzB,IAAAA,IAAI,EAAJA,IALG;EAMHuB,IAAAA,YAAY,EAAZA,YANG;EAOHwB,IAAAA,sBAAsB,EAAtBA,sBAPG;EAQHrC,IAAAA,SAAS,EAATA,SARG;EASHG,IAAAA,UAAU,EAAVA,UATG;EAUHuB,IAAAA,MAAM,EAANA;EAVG,GAAP;EAYH,CAzSD;;ECHA;MACM6B;;;EAEF;;;;;EAKA,oBAAY5C,QAAZ,EAAsB;EAAA;;EAElB,QAAI,CAACA,QAAL,EAAe;EAAE;EAAS;;EAE1B,QAAI,CAAC4C,QAAQ,CAACC,EAAT,CAAY7C,QAAZ,CAAL,EAA4B;EACxB,YAAM,IAAI8C,SAAJ,EAAN;EACH;;EAED,QAAI,OAAO9C,QAAP,KAAoB,QAApB,IAAgC+C,KAAK,CAACC,OAAN,CAAchD,QAAd,CAApC,EAA6D;EACzD,UAAIA,QAAQ,CAACJ,MAAT,KAAoB,CAAxB,EAA2B;EAAE;EAAS;;EACtC,WAAKqD,IAAL,GAAY,KAAKC,aAAL,CAAmB,KAAKD,IAAxB,EAA8BjD,QAA9B,CAAZ;EACA;EACH;;EAED,QAAIA,QAAQ,CAACiD,IAAb,EAAmB;EACf,WAAKA,IAAL,GAAY,KAAKC,aAAL,CAAmB,KAAKD,IAAxB,EAA8BjD,QAAQ,CAACiD,IAAvC,CAAZ;EACH;;EAED,QAAIjD,QAAQ,CAACmD,GAAb,EAAkB;EACd,WAAKA,GAAL,GAAW,KAAKD,aAAL,CAAmB,KAAKC,GAAxB,EAA6BnD,QAAQ,CAACmD,GAAtC,CAAX;EACH;EACJ;EAED;;;;;;;;;;;oCAOcC,OAAOC,OAAO;EACxBD,MAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;;EAEA,UAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+B;EAC3BD,QAAAA,KAAK,CAACC,KAAD,CAAL,GAAe,IAAf;EACH,OAFD,MAEO,IAAIN,KAAK,CAACC,OAAN,CAAcK,KAAd,CAAJ,EAA0B;EAC7BA,QAAAA,KAAK,CAAC1B,OAAN,CAAc,UAAC2B,IAAD;EAAA,iBAAUF,KAAK,CAACE,IAAD,CAAL,GAAc,IAAxB;EAAA,SAAd;EACH;;EAED,aAAOF,KAAP;EACH;EAED;;;;;;;;;;+BAOS/E,WAAW;EAChB,UAAI,KAAK4E,IAAL,IAAa,CAAC,KAAKA,IAAL,CAAU5E,SAAV,CAAlB,EAAwC;EACpC,eAAO,IAAP;EACH;;EAED,UAAI,KAAK8E,GAAL,IAAY,KAAKA,GAAL,CAAS9E,SAAT,CAAhB,EAAqC;EACjC,eAAO,IAAP;EACH;;EAED,aAAO,KAAP;EACH;EAED;;;;;;;;;;yBAOUiF,MAAM;EACZ,UAAIP,KAAK,CAACC,OAAN,CAAcM,IAAd,CAAJ,EAAyB;EACrB,eAAOA,IAAI,CAACC,KAAL,CAAW,UAACD,IAAD;EAAA,iBAAU,OAAOA,IAAP,KAAgB,QAA1B;EAAA,SAAX,CAAP;EACH;;EAED,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;EAAE,eAAO,IAAP;EAAc;;EAE9C,UAAIA,IAAI,KAAK,IAAT,IAAiB,QAAOA,IAAP,MAAgB,QAAjC,KACAA,IAAI,CAACE,cAAL,CAAoB,MAApB,KACGF,IAAI,CAACE,cAAL,CAAoB,KAApB,CAFH,CAAJ,EAGG;EACC,eAAO,IAAP;EACH;;EAED,aAAO,KAAP;EACH;;;;;;ECtFL,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAChD,IAAD,EAAO+B,KAAP,EAAckB,GAAd;EAAA,uFAA4FlB,KAA5F,qBAA2G/B,IAA3G,mCACPiD,GAAG,GAAGA,GAAH,GAAS,sEADL;EAAA,CAAlB;;EAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAClD,IAAD,EAAOmD,KAAP,EAAc5D,QAAd,EAA2B;EAExC,MAAI,OAAOS,IAAP,KAAgB,QAApB,EAA8B;EAC1B,UAAM,IAAIqC,SAAJ,CAAcW,SAAS,CAAC,YAAD,EAAehD,IAAf,CAAvB,CAAN;EACH;;EAED,MAAI,OAAOmD,KAAP,KAAiB,UAArB,EAAiC;EAC7B,UAAM,IAAId,SAAJ,CAAcW,SAAS,CAAC,OAAD,EAAUG,KAAV,CAAvB,CAAN;EACH;;EAED,MAAI5D,QAAQ,IAAI,CAAC4C,QAAQ,CAACC,EAAT,CAAY7C,QAAZ,CAAjB,EAAwC;EACpC,UAAM,IAAI8C,SAAJ,CAAcW,SAAS,CAAC,UAAD,EAAaG,KAAb,EAAoB,sDAApB,CAAvB,CAAN;EACH;;EAED,MAAMhF,MAAM,GAAG4B,cAAc,CAACC,IAAD,CAA7B;EAEA,MAAM3B,OAAO,GAAG,EAAhB;EAEA,MAAInB,OAAJ,CAAY;EACRqC,IAAAA,QAAQ,EAAE,IAAI4C,QAAJ,CAAa5C,QAAb,CADF;EAERpB,IAAAA,MAAM,EAANA,MAFQ;EAGRE,IAAAA,OAAO,EAAPA;EAHQ,GAAZ;EAMA8E,EAAAA,KAAK,CAACvD,IAAD,EAAOzB,MAAM,CAACmC,MAAd,CAAL;EAEApD,EAAAA,OAAO,CAACG,KAAR;EAEA,YAAIgB,OAAJ,EAAa6C,OAAb,CAAqBxC,QAArB;EAEA,SAAOP,MAAM,CAACmC,MAAd;EACH,CA/BD;;ECRA;;;AAGA,EAAO,IAAM8C,gBAAgB,GAAG,qIAAzB;;ECAP;;;;EAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;EAEhB,MAAInG,OAAO,CAACE,GAAZ,EAAiB;EACb,WAAOF,OAAO,CAACE,GAAR,CAAYe,MAAZ,CAAmBmC,MAA1B;EACH;;EAEDgD,EAAAA,UAAU,CAAC,YAAM;EACb,UAAM,IAAIC,KAAJ,CAAUH,gBAAV,CAAN;EACH,GAFS,CAAV;EAGH,CATD;;ECNA;;;;;;EAMA,SAASI,QAAT,CAAkB5D,IAAlB,EAAwB;EAEpB,MAAI,OAAOA,IAAP,KAAgB,UAAhB,IAA8B,EAAEA,IAAI,YAAY6D,OAAlB,CAAlC,EAA8D;EAC1D,UAAM,IAAIpB,SAAJ,wCAA6CzC,IAA7C,yBAAN;EACH;;EAED,MAAI;EACA,WAAOA,IAAI,OAAO,KAAlB;EACH,GAFD,CAEE,OAAO8D,CAAP,EAAU;EACR,WAAO,KAAP;EACH;EACJ;;;;;;;;;ECjBD,GAAC,UAASC,CAAT,EAAWzE,CAAX,EAAa;EAAC,KAAqD0E,cAAA,GAAe1E,CAAC,EAArE,CAAA;EAAgJ,GAA9J,CAA+J2E,cAA/J,EAAoK,YAAU;AAAC;EAAa,aAASF,CAAT,CAAWzE,CAAX,EAAa;EAAC,aAAM,CAACyE,CAAC,GAAC,cAAY,OAAOG,MAAnB,IAA2B,oBAAiBA,MAAM,CAACC,QAAxB,CAA3B,GAA4D,UAASJ,CAAT,EAAW;EAAC,uBAAcA,CAAd;EAAgB,OAAxF,GAAyF,UAASA,CAAT,EAAW;EAAC,eAAOA,CAAC,IAAE,cAAY,OAAOG,MAAtB,IAA8BH,CAAC,CAACK,WAAF,KAAgBF,MAA9C,IAAsDH,CAAC,KAAGG,MAAM,CAAC9F,SAAjE,GAA2E,QAA3E,WAA2F2F,CAA3F,CAAP;EAAoG,OAA5M,EAA8MzE,CAA9M,CAAN;EAAuN;;EAAA,aAASA,CAAT,CAAWyE,CAAX,EAAazE,CAAb,EAAeT,CAAf,EAAiB;EAAC,aAAOS,CAAC,IAAIyE,CAAL,GAAO9B,MAAM,CAACoC,cAAP,CAAsBN,CAAtB,EAAwBzE,CAAxB,EAA0B;EAAC6C,QAAAA,KAAK,EAACtD,CAAP;EAASyD,QAAAA,UAAU,EAAC,CAAC,CAArB;EAAuBD,QAAAA,YAAY,EAAC,CAAC,CAArC;EAAuCD,QAAAA,QAAQ,EAAC,CAAC;EAAjD,OAA1B,CAAP,GAAsF2B,CAAC,CAACzE,CAAD,CAAD,GAAKT,CAA3F,EAA6FkF,CAApG;EAAsG;;EAAA,aAASlF,CAAT,CAAWkF,CAAX,EAAazE,CAAb,EAAe;EAAC,UAAIT,CAAC,GAACoD,MAAM,CAACqC,IAAP,CAAYP,CAAZ,CAAN;;EAAqB,UAAG9B,MAAM,CAACsC,qBAAV,EAAgC;EAAC,YAAIC,CAAC,GAACvC,MAAM,CAACsC,qBAAP,CAA6BR,CAA7B,CAAN;EAAsCzE,QAAAA,CAAC,KAAGkF,CAAC,GAACA,CAAC,CAAC5F,MAAF,CAAS,UAASU,CAAT,EAAW;EAAC,iBAAO2C,MAAM,CAACwC,wBAAP,CAAgCV,CAAhC,EAAkCzE,CAAlC,EAAqCgD,UAA5C;EAAuD,SAA5E,CAAL,CAAD,EAAqFzD,CAAC,CAACH,IAAF,CAAOgG,KAAP,CAAa7F,CAAb,EAAe2F,CAAf,CAArF;EAAuG;;EAAA,aAAO3F,CAAP;EAAS;;EAAA,aAAS2F,CAAT,CAAWT,CAAX,EAAa;EAAC,WAAI,IAAIS,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACG,SAAS,CAACpF,MAAxB,EAA+BiF,CAAC,EAAhC,EAAmC;EAAC,YAAII,CAAC,GAAC,QAAMD,SAAS,CAACH,CAAD,CAAf,GAAmBG,SAAS,CAACH,CAAD,CAA5B,GAAgC,EAAtC;EAAyCA,QAAAA,CAAC,GAAC,CAAF,GAAI3F,CAAC,CAAC+F,CAAD,EAAG,CAAC,CAAJ,CAAD,CAAQtD,OAAR,CAAgB,UAASzC,CAAT,EAAW;EAACS,UAAAA,CAAC,CAACyE,CAAD,EAAGlF,CAAH,EAAK+F,CAAC,CAAC/F,CAAD,CAAN,CAAD;EAAY,SAAxC,CAAJ,GAA8CoD,MAAM,CAAC4C,yBAAP,GAAiC5C,MAAM,CAACC,gBAAP,CAAwB6B,CAAxB,EAA0B9B,MAAM,CAAC4C,yBAAP,CAAiCD,CAAjC,CAA1B,CAAjC,GAAgG/F,CAAC,CAAC+F,CAAD,CAAD,CAAKtD,OAAL,CAAa,UAAShC,CAAT,EAAW;EAAC2C,UAAAA,MAAM,CAACoC,cAAP,CAAsBN,CAAtB,EAAwBzE,CAAxB,EAA0B2C,MAAM,CAACwC,wBAAP,CAAgCG,CAAhC,EAAkCtF,CAAlC,CAA1B;EAAgE,SAAzF,CAA9I;EAAyO;;EAAA,aAAOyE,CAAP;EAAS;;EAAA,QAAIa,CAAC,GAAC,SAAFA,CAAE,CAASb,CAAT,EAAWzE,CAAX,EAAa;EAAC,aAAO2C,MAAM,CAAC7D,SAAP,CAAiB+E,cAAjB,CAAgC2B,IAAhC,CAAqCf,CAArC,EAAuCzE,CAAvC,KAA2C,cAAY,OAAOyE,CAAC,CAACzE,CAAD,CAAtE;EAA0E,KAA9F;EAAA,QAA+FyF,CAAC,GAACC,QAAQ,CAAC,aAAD,CAAR,EAAjG;EAAA,QAA2HC,CAAC,GAAC,SAAFA,CAAE,GAAU;EAAC,aAAM,cAAY,OAAOF,CAAC,CAACG,KAA3B;EAAiC,KAAzK;;EAA0K,aAASC,CAAT,CAAWpB,CAAX,EAAa;EAAC,aAAOhC,OAAO,CAACW,KAAK,CAACC,OAAN,CAAcoB,CAAd,CAAD,CAAd;EAAiC;;EAAA,aAASqB,CAAT,CAAWrB,CAAX,EAAa;EAAC,aAAOhC,OAAO,CAAC,YAAU,OAAOgC,CAAlB,CAAd;EAAmC;;EAAA,aAASsB,CAAT,CAAWtB,CAAX,EAAa;EAAC,aAAOhC,OAAO,CAAC,YAAU,OAAOgC,CAAlB,CAAd;EAAmC;;EAAA,aAASuB,CAAT,CAAWvB,CAAX,EAAazE,CAAb,EAAe;EAAC,aAAOA,CAAC,YAAYiG,MAAb,GAAoBjG,CAAC,CAACU,IAAF,CAAO+D,CAAP,CAApB,GAA8B,YAAU,OAAOzE,CAAjB,IAAoB,IAAIiG,MAAJ,CAAWjG,CAAX,EAAcU,IAAd,CAAmB+D,CAAnB,CAAzD;EAA+E;;EAAA,aAASyB,CAAT,CAAWlG,CAAX,EAAaT,CAAb,EAAe;EAAC,aAAO6D,KAAK,CAACC,OAAN,CAAc9D,CAAd,KAAkB,CAAC,QAAD,EAAU,QAAV,EAAmB,SAAnB,EAA8BQ,QAA9B,CAAuC0E,CAAC,CAACzE,CAAD,CAAxC,CAAlB,GAA+DT,CAAC,CAACQ,QAAF,CAAWC,CAAX,CAA/D,GAA6E,YAAU,OAAOT,CAAjB,IAAoB,YAAU,OAAOS,CAArC,IAAwCT,CAAC,CAACQ,QAAF,CAAWC,CAAX,CAA5H;EAA0I;;EAAA,aAASmG,CAAT,CAAW1B,CAAX,EAAazE,CAAb,EAAe;EAAC,aAAOyE,CAAC,KAAGzE,CAAX;EAAa;;EAAA,aAASoG,CAAT,CAAW3B,CAAX,EAAa;EAAC,UAAIzE,CAAC,GAAC,CAACqG,KAAK,CAACC,UAAU,CAAC7B,CAAD,CAAX,CAAN,IAAuB,CAAC4B,KAAK,CAACE,MAAM,CAAC9B,CAAD,CAAP,CAA7B,IAA0C+B,QAAQ,CAAC/B,CAAD,CAAxD;EAA4D,aAAOhC,OAAO,CAACzC,CAAD,CAAd;EAAkB;;EAAA,aAASyG,CAAT,CAAWhC,CAAX,EAAazE,CAAb,EAAe;EAAC,aAAOoG,CAAC,CAAC3B,CAAD,CAAD,IAAM2B,CAAC,CAACpG,CAAD,CAAP,IAAYuG,MAAM,CAAC9B,CAAD,CAAN,KAAY8B,MAAM,CAACvG,CAAD,CAArC;EAAyC;;EAAA,aAAS0G,CAAT,CAAW1G,CAAX,EAAa;EAAC,aAAM,CAACA,CAAD,KAAKoG,CAAC,CAACpG,CAAD,CAAD,GAAK,MAAIA,CAAT,GAAW2C,MAAM,CAAC7D,SAAP,CAAiB+E,cAAjB,CAAgC2B,IAAhC,CAAqCxF,CAArC,EAAuC,QAAvC,IAAiD,MAAIA,CAAC,CAACC,MAAvD,GAA8D,aAAWwE,CAAC,CAACzE,CAAD,CAAZ,IAAiB,MAAI2C,MAAM,CAACqC,IAAP,CAAYhF,CAAZ,EAAeC,MAAlH,CAAN;EAAgI;;EAAA,aAAS0G,CAAT,CAAWlC,CAAX,EAAazE,CAAb,EAAe;EAAC,aAAOoG,CAAC,CAAC3B,CAAD,CAAD,IAAM2B,CAAC,CAACpG,CAAD,CAAP,IAAYuG,MAAM,CAAC9B,CAAD,CAAN,GAAU8B,MAAM,CAACvG,CAAD,CAAnC;EAAuC;;EAAA,aAAS4G,CAAT,CAAWnC,CAAX,EAAazE,CAAb,EAAe;EAAC,aAAOoG,CAAC,CAAC3B,CAAD,CAAD,IAAM2B,CAAC,CAACpG,CAAD,CAAP,IAAYuG,MAAM,CAAC9B,CAAD,CAAN,IAAW8B,MAAM,CAACvG,CAAD,CAApC;EAAwC;;EAAA,aAAS6G,CAAT,CAAWpC,CAAX,EAAazE,CAAb,EAAe;EAAC,aAAOoG,CAAC,CAAC3B,CAAD,CAAD,IAAM2B,CAAC,CAACpG,CAAD,CAAP,IAAYuG,MAAM,CAAC9B,CAAD,CAAN,GAAU8B,MAAM,CAACvG,CAAD,CAAnC;EAAuC;;EAAA,aAAS8G,CAAT,CAAWrC,CAAX,EAAazE,CAAb,EAAe;EAAC,aAAOoG,CAAC,CAAC3B,CAAD,CAAD,IAAM2B,CAAC,CAACpG,CAAD,CAAP,IAAYuG,MAAM,CAAC9B,CAAD,CAAN,IAAW8B,MAAM,CAACvG,CAAD,CAApC;EAAwC;;EAAA,aAAS+G,CAAT,CAAWtC,CAAX,EAAazE,CAAb,EAAe;EAAC,aAAOyE,CAAC,CAACxE,MAAF,KAAWD,CAAlB;EAAoB;;EAAA6F,IAAAA,CAAC,CAACmB,YAAF,GAAe,YAAf,EAA4BlB,CAAC,CAACkB,YAAF,GAAe,aAA3C,EAAyDjB,CAAC,CAACiB,YAAF,GAAe,aAAxE,EAAsFhB,CAAC,CAACgB,YAAF,GAAe,YAArG,EAAkHd,CAAC,CAACc,YAAF,GAAe,WAAjI,EAA6Ib,CAAC,CAACa,YAAF,GAAe,WAA5J,EAAwKZ,CAAC,CAACY,YAAF,GAAe,cAAvL,EAAsMP,CAAC,CAACO,YAAF,GAAe,iBAArN,EAAuON,CAAC,CAACM,YAAF,GAAe,YAAtP,EAAmQL,CAAC,CAACM,KAAF,GAAQ,IAA3Q,EAAgRL,CAAC,CAACK,KAAF,GAAQ,KAAxR,EAA8RJ,CAAC,CAACI,KAAF,GAAQ,IAAtS,EAA2SH,CAAC,CAACG,KAAF,GAAQ,KAAnT,EAAyTF,CAAC,CAACC,YAAF,GAAe,iBAAxU;;EAA0V,QAAIE,CAAC,GAAC,UAASzC,CAAT,EAAW;EAAC,UAAIzE,CAAC,GAAC,WAASA,EAAT,EAAW;EAAC,YAAIT,CAAC,GAACkF,CAAC,CAACzE,EAAD,CAAD,CAAKgH,YAAX;EAAA,YAAwB9B,CAAC,GAACT,CAAC,CAACzE,EAAD,CAAD,CAAKiH,KAA/B;EAAqC1H,QAAAA,CAAC,KAAGkF,CAAC,CAAClF,CAAD,CAAD,GAAK,YAAU;EAAC,iBAAM,CAACkF,CAAC,CAACzE,EAAD,CAAD,CAAKoF,KAAL,CAAWX,CAAX,EAAaY,SAAb,CAAP;EAA+B,SAAlD,CAAD,EAAqDH,CAAC,KAAGT,CAAC,CAACS,CAAD,CAAD,GAAKT,CAAC,CAACzE,EAAD,CAAT,CAAtD;EAAoE,OAA3H;;EAA4H,WAAI,IAAIT,CAAR,IAAakF,CAAb;EAAezE,QAAAA,CAAC,CAACT,CAAD,CAAD;EAAf;;EAAoB,aAAOkF,CAAP;EAAS,KAArK,CAAsK;EAACpB,MAAAA,OAAO,EAACwC,CAAT;EAAWsB,MAAAA,QAAQ,EAACrB,CAApB;EAAsBsB,MAAAA,QAAQ,EAACrB,CAA/B;EAAiCsB,MAAAA,OAAO,EAACrB,CAAzC;EAA2CsB,MAAAA,MAAM,EAACpB,CAAlD;EAAoDqB,MAAAA,MAAM,EAACpB,CAA3D;EAA6DqB,MAAAA,YAAY,EAACf,CAA1E;EAA4EgB,MAAAA,SAAS,EAACrB,CAAtF;EAAwFsB,MAAAA,OAAO,EAAChB,CAAhG;EAAkGiB,MAAAA,WAAW,EAAChB,CAA9G;EAAgHiB,MAAAA,mBAAmB,EAAChB,CAApI;EAAsIiB,MAAAA,QAAQ,EAAChB,CAA/I;EAAiJiB,MAAAA,gBAAgB,EAAChB,CAAlK;EAAoKiB,MAAAA,UAAU,EAAC,oBAAStD,CAAT,EAAWzE,CAAX,EAAa;EAAC,eAAOyE,CAAC,CAACxE,MAAF,GAASD,CAAhB;EAAkB,OAA/M;EAAgNgI,MAAAA,kBAAkB,EAAC,4BAASvD,CAAT,EAAWzE,CAAX,EAAa;EAAC,eAAOyE,CAAC,CAACxE,MAAF,IAAUD,CAAjB;EAAmB,OAApQ;EAAqQiI,MAAAA,WAAW,EAAC,qBAASxD,CAAT,EAAWzE,CAAX,EAAa;EAAC,eAAOyE,CAAC,CAACxE,MAAF,GAASD,CAAhB;EAAkB,OAAjT;EAAkTkI,MAAAA,mBAAmB,EAAC,6BAASzD,CAAT,EAAWzE,CAAX,EAAa;EAAC,eAAOyE,CAAC,CAACxE,MAAF,IAAUD,CAAjB;EAAmB,OAAvW;EAAwWmI,MAAAA,YAAY,EAACpB,CAArX;EAAuXqB,MAAAA,KAAK,EAAC,eAAS3D,CAAT,EAAW;EAAC,eAAM,CAAC,CAAC2B,CAAC,CAAC3B,CAAD,CAAH,IAAQA,CAAC,GAAC,CAAF,IAAK,CAAnB;EAAqB,OAA9Z;EAA+Z4D,MAAAA,MAAM,EAAC,gBAAS5D,CAAT,EAAW;EAAC,eAAM,CAAC,CAAC2B,CAAC,CAAC3B,CAAD,CAAH,IAAQA,CAAC,GAAC,CAAF,IAAK,CAAnB;EAAqB;EAAvc,KAAtK,CAAN;;EAAsnB,aAAS6D,CAAT,CAAWtI,CAAX,EAAaT,CAAb,EAAe;EAAC,UAAG,cAAY,OAAOS,CAAtB,EAAwB;EAAC,aAAI,IAAIkF,CAAC,GAACG,SAAS,CAACpF,MAAhB,EAAuBqF,CAAC,GAAC,IAAIlC,KAAJ,CAAU8B,CAAC,GAAC,CAAF,GAAIA,CAAC,GAAC,CAAN,GAAQ,CAAlB,CAAzB,EAA8CO,CAAC,GAAC,CAApD,EAAsDA,CAAC,GAACP,CAAxD,EAA0DO,CAAC,EAA3D;EAA8DH,UAAAA,CAAC,CAACG,CAAC,GAAC,CAAH,CAAD,GAAOJ,SAAS,CAACI,CAAD,CAAhB;EAA9D;;EAAkF,YAAG,CAAC,CAAD,KAAKzF,CAAC,CAACoF,KAAF,CAAQ,KAAK,CAAb,EAAe,CAAC7F,CAAD,EAAIgJ,MAAJ,CAAWjD,CAAX,CAAf,CAAR,EAAsC,MAAM,IAAIjB,KAAJ,CAAU,sBAAsBkE,MAAtB,CAA6B9D,CAAC,CAAClF,CAAD,CAA9B,EAAkC,QAAlC,CAAV,CAAN;EAA6D;EAAC;;EAAA,aAASiJ,CAAT,GAAY;EAAC,UAAI/D,CAAC,GAACY,SAAS,CAACpF,MAAV,GAAiB,CAAjB,IAAoB,KAAK,CAAL,KAASoF,SAAS,CAAC,CAAD,CAAtC,GAA0CA,SAAS,CAAC,CAAD,CAAnD,GAAuD,EAA7D;EAAA,UAAgE9F,CAAC,GAAC2F,CAAC,CAAC,EAAD,EAAIgC,CAAJ,EAAM,EAAN,EAASzC,CAAT,CAAnE;EAA+E,UAAGkB,CAAC,EAAJ,EAAO,OAAO,UAASlB,CAAT,EAAW;EAAC,YAAIzE,CAAC,GAAC,IAAI4F,KAAJ,CAAUrG,CAAV,EAAY;EAACkJ,UAAAA,GAAG,EAAC,aAASlJ,CAAT,EAAW2F,CAAX,EAAa;EAAC,gBAAGI,CAAC,CAAC/F,CAAD,EAAG2F,CAAH,CAAJ,EAAU,OAAO,YAAU;EAAC,mBAAI,IAAII,CAAC,GAACD,SAAS,CAACpF,MAAhB,EAAuBwF,CAAC,GAAC,IAAIrC,KAAJ,CAAUkC,CAAV,CAAzB,EAAsCK,CAAC,GAAC,CAA5C,EAA8CA,CAAC,GAACL,CAAhD,EAAkDK,CAAC,EAAnD;EAAsDF,gBAAAA,CAAC,CAACE,CAAD,CAAD,GAAKN,SAAS,CAACM,CAAD,CAAd;EAAtD;;EAAwE,qBAAO2C,CAAC,CAAClD,KAAF,CAAQ,KAAK,CAAb,EAAe,CAAC7F,CAAC,CAAC2F,CAAD,CAAF,EAAMT,CAAN,EAAS8D,MAAT,CAAgB9C,CAAhB,CAAf,GAAmCzF,CAA1C;EAA4C,aAAtI;EAAuI;EAApK,SAAZ,CAAN;EAAyL,eAAOA,CAAP;EAAS,OAArN;EAAsN,UAAIyF,CAAC,GAAC9C,MAAM,CAACqC,IAAP,CAAYzF,CAAZ,CAAN;EAAqB,aAAO,UAASkF,CAAT,EAAW;EAAC,eAAOgB,CAAC,CAACiD,MAAF,CAAS,UAASjD,CAAT,EAAWE,CAAX,EAAa;EAAC,iBAAO,SAAcF,CAAd,EAAgBP,CAAC,CAAC,EAAD,EAAII,CAAC,CAAC/F,CAAD,EAAGoG,CAAH,CAAD,IAAQ3F,CAAC,CAAC,EAAD,EAAI2F,CAAJ,EAAM,YAAU;EAAC,iBAAI,IAAI3F,CAAC,GAACqF,SAAS,CAACpF,MAAhB,EAAuBiF,CAAC,GAAC,IAAI9B,KAAJ,CAAUpD,CAAV,CAAzB,EAAsCsF,CAAC,GAAC,CAA5C,EAA8CA,CAAC,GAACtF,CAAhD,EAAkDsF,CAAC,EAAnD;EAAsDJ,cAAAA,CAAC,CAACI,CAAD,CAAD,GAAKD,SAAS,CAACC,CAAD,CAAd;EAAtD;;EAAwE,mBAAOgD,CAAC,CAAClD,KAAF,CAAQ,KAAK,CAAb,EAAe,CAAC7F,CAAC,CAACoG,CAAD,CAAF,EAAMlB,CAAN,EAAS8D,MAAT,CAAgBrD,CAAhB,CAAf,GAAmCO,CAA1C;EAA4C,WAArI,CAAb,CAAjB,CAAP;EAA8K,SAArM,EAAsM,EAAtM,CAAP;EAAiN,OAApO;EAAqO;;EAAA,QAAIkD,CAAC,GAAC,IAAIH,CAAJ,EAAN;EAAY,WAAOG,CAAC,CAACC,OAAF,GAAUJ,CAAV,EAAYG,CAAnB;EAAqB,GAA37H,CAAD;;;;ECAC,aAAUE,MAAV,EAAkBC,OAAlB,EAA2B;EACxB,KAA+DpE,cAAA,GAAiBoE,OAAO,EAAvF,CAAA;EAGH,GAJA,EAICnE,cAJD,EAIO,YAAY;AAAE;;;;;;EAOlB,QAAIoE,GAAG,GAAG,SAASA,GAAT,CAAaC,GAAb,EAAkB;EAC1B,UAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;EAC7B,YAAI;EACF,cAAI5H,MAAM,GAAG4H,GAAG,EAAhB;EACA,iBAAO5H,MAAM,IAAI,KAAV,IAAmBqB,OAAO,CAACrB,MAAD,CAAjC;EACD,SAHD,CAGE,OAAO6H,GAAP,EAAY;EACZ,iBAAO,KAAP;EACD;EACF;;EAED,aAAOD,GAAG,IAAI,KAAP,IAAgBvG,OAAO,CAACuG,GAAD,CAA9B;EACD,KAXD;;;;;;;;EAmBA,QAAIE,GAAG,GAAG,SAASA,GAAT,GAAe;EACvB,WAAK,IAAIC,IAAI,GAAG9D,SAAS,CAACpF,MAArB,EAA6BU,IAAI,GAAG,IAAIyC,KAAJ,CAAU+F,IAAV,CAApC,EAAqDC,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGD,IAA3E,EAAiFC,IAAI,EAArF,EAAyF;EACvFzI,QAAAA,IAAI,CAACyI,IAAD,CAAJ,GAAa/D,SAAS,CAAC+D,IAAD,CAAtB;EACD;;EAED,aAAOzI,IAAI,CAACT,IAAL,CAAU6I,GAAV,CAAP;EACD,KAND;;EAQA,WAAOG,GAAP;EAEH,GAxCA,CAAD;;;ECQAlF,QAAQ,CAACqF,OAAT,GAAmBC,OAAnB;EACAtF,QAAQ,CAACuF,OAAT,GAAmBA,WAAnB;EACAvF,QAAQ,CAACG,KAAT,GAAiBA,KAAjB;EACAH,QAAQ,CAAC4E,OAAT,GAAmBW,WAAO,CAACX,OAA3B;EACA5E,QAAQ,CAACtD,IAAT,GAAgBA,IAAhB;EACAsD,QAAQ,CAACM,QAAT,GAAoBA,QAApB;EACAN,QAAQ,CAACkF,GAAT,GAAeA,GAAf;EACAlF,QAAQ,CAAC5F,IAAT,GAAgBA,IAAhB;EACA4F,QAAQ,CAAC3F,IAAT,GAAgBA,IAAhB;;;;;;;;"}