{"version":3,"file":"passable.js","sources":["../src/core/context/index.js","../src/core/test/index.js","../src/constants.js","../src/core/passableResult/index.js","../src/core/Specific/index.js","../src/core/passable/index.js","../src/Enforce/runnables/rules/is_array/index.js","../src/Enforce/runnables/rules/is_number/index.js","../src/Enforce/runnables/rules/is_string/index.js","../src/Enforce/runnables/rules/matches/index.js","../src/Enforce/runnables/rules/inside/index.js","../src/Enforce/runnables/rules/equals/index.js","../src/Enforce/runnables/rules/is_numeric/index.js","../src/Enforce/runnables/rules/is_empty/index.js","../src/Enforce/runnables/rules/greater_than/index.js","../src/Enforce/runnables/rules/greater_than_or_equals/index.js","../src/Enforce/runnables/rules/less_than/index.js","../src/Enforce/runnables/rules/less_than_or_equals/index.js","../src/Enforce/runnables/rules/longer_than/index.js","../src/Enforce/runnables/rules/longer_than_or_equals/index.js","../src/Enforce/runnables/rules/shorter_than/index.js","../src/Enforce/runnables/rules/shorter_than_or_equals/index.js","../src/Enforce/runnables/rules/length_equals/index.js","../src/Enforce/runnables/helpers/extend_rules/index.js","../src/Enforce/runnables/index.js","../src/Enforce/runners/rule/index.js","../src/Enforce/index.js","../src/utilities/validate/index.js","../src/utilities/any/index.js","../src/index.js"],"sourcesContent":["const Context = function() {}; // eslint-disable-line\n\nContext.prototype.set = function(parent) {\n    this.parent = parent;\n    return this;\n};\n\nconst context = new Context();\n\nexport default context;\n","import ctx from '../context';\n\n/**\n * Runs all async tests, updates output object with result\n * @param {Promise} testPromise the actual test callback or promise\n */\nexport const runAsync = (testPromise) => {\n    const { fieldName, statement, severity, parent } = testPromise;\n\n    parent.result.markAsync(fieldName);\n\n    const done = () => {\n        clearPendingTest(testPromise);\n        if (!hasRemainingPendingTests(parent, fieldName)) {\n            parent.result.markAsDone(fieldName);\n        }\n\n        if (!hasRemainingPendingTests(parent)) {\n            parent.result.markAsDone();\n        }\n    };\n\n    const fail = () => {\n        if (parent.pending.includes(testPromise)) {\n            parent.result.fail(fieldName, statement, severity);\n        }\n\n        done();\n    };\n\n    try {\n        testPromise.then(done, fail);\n    } catch (e) {\n        fail();\n    }\n};\n\n/**\n * Clears pending test from parent context\n * @param {Promise} testPromise the actual test callback or promise\n */\nconst clearPendingTest = (testPromise) => {\n    testPromise.parent.pending = testPromise.parent.pending.filter((t) => t !== testPromise);\n};\n\n/**\n * Checks if there still are remaining pending tests for given criteria\n * @param {Object} parent Parent context\n * @param {String} fieldName name of the field to test against\n * @return {Boolean}\n */\nconst hasRemainingPendingTests = (parent, fieldName) => {\n    if (!parent.pending.length) {\n        return false;\n    }\n\n    if (fieldName) {\n        return parent.pending.some((testPromise) => testPromise.fieldName === fieldName);\n    }\n\n    return !!parent.pending.length;\n};\n\n/**\n * Performs shallow run over test functions, assuming sync tests only. Returning result\n * @param {function | Promise} testFn the actual test callback or promise\n * @return {*} result from test function\n */\nconst preRun = (testFn) => {\n    let result;\n    try {\n        result = testFn();\n    } catch (e) {\n        result = false;\n    }\n    if (result === false) {\n        testFn.parent.result.fail(testFn.fieldName, testFn.statement, testFn.severity);\n    }\n\n    return result;\n};\n\n/**\n * Registers all supplied tests, if async - adds to pending array\n * @param {function | Promise} testFn the actual test callback or promise\n */\nconst register = (testFn) => {\n    const { parent, fieldName } = testFn;\n    let pending = false;\n    let result;\n\n    if (parent.specific.excludes(fieldName)) {\n        parent.result.addToSkipped(fieldName);\n        return;\n    }\n\n    parent.result.initFieldCounters(fieldName);\n    parent.result.bumpTestCounter(fieldName);\n\n    if (testFn && typeof testFn.then === 'function') {\n        pending = true;\n    } else {\n        result = preRun(testFn);\n    }\n\n    if (result && typeof result.then === 'function') {\n        pending = true;\n        testFn = Object.assign(result, testFn);\n    }\n\n    if (pending) {\n        parent.pending.push(testFn);\n    }\n};\n\n/**\n * The function used by the consumer\n * @param {String} fieldName name of the field to test against\n * @param {String} statement the message shown to the user in case of a failure\n * @param {function | Promise} testFn the actual test callback or promise\n * @param {String} Severity indicates whether the test should fail or warn\n */\nconst test = (fieldName, statement, testFn, severity) => {\n    if (!testFn) {\n        return;\n    }\n    if (typeof testFn.then === 'function' || typeof testFn === 'function') {\n        Object.assign(testFn, {\n            fieldName,\n            statement,\n            severity,\n            parent: ctx.parent\n        });\n\n        register(testFn);\n    }\n};\n\nexport default test;\n","export const WARN = 'warn';\nexport const FAIL = 'fail';\n","import { WARN, FAIL } from '../../constants';\nconst severities = [ WARN, FAIL ];\n\nconst passableResult = (name) => {\n\n    const completionCallbacks = [];\n    let asyncObject = null;\n    let hasValidationErrors = false;\n    let hasValidationWarnings = false;\n    let cancelled = false;\n\n    /**\n     * Initializes specific field's counters\n     * @param {string} fieldName - The name of the field.\n     */\n    const initFieldCounters = (fieldName) => {\n        if (output.testsPerformed[fieldName]) { return output; }\n\n        output.testsPerformed[fieldName] = {\n            testCount: 0,\n            failCount: 0,\n            warnCount: 0\n        };\n    };\n\n    /**\n     * Bumps test counters to indicate tests that's being performed\n     * @param {string} fieldName - The name of the field.\n     */\n    const bumpTestCounter = (fieldName) => {\n        if (!output.testsPerformed[fieldName]) { return output; }\n\n        output.testsPerformed[fieldName].testCount++;\n        output.testCount++;\n    };\n\n    /**\n     * Bumps field's warning counts and adds warning string\n     * @param {string} fieldName - The name of the field.\n     * @param {string} statement - The error string to add to the object.\n     */\n    const bumpTestWarning = (fieldName, statement) => {\n        hasValidationWarnings = true;\n        output.warnings[fieldName] = output.warnings[fieldName] || [];\n        output.warnings[fieldName].push(statement);\n        output.warnCount++;\n        output.testsPerformed[fieldName].warnCount++;\n    };\n\n    /**\n     * Bumps field's error counts and adds error string\n     * @param {string} fieldName - The name of the field.\n     * @param {string} statement - The error string to add to the object.\n     */\n    const bumpTestError = (fieldName, statement) => {\n        hasValidationErrors = true;\n        output.errors[fieldName] = output.errors[fieldName] || [];\n        output.errors[fieldName].push(statement);\n        output.failCount++;\n        output.testsPerformed[fieldName].failCount++;\n    };\n\n    /**\n     * Fails a field and updates output accordingly\n     * @param {string} fieldName - The name of the field.\n     * @param {string} statement - The error string to add to the object.\n     * @param {string} severity - Whether it is a `fail` or `warn` test.\n     */\n    const fail = (fieldName, statement, severity) => {\n        if (!output.testsPerformed[fieldName]) { return output; }\n        const selectedSeverity = severity && severities.includes(severity) ? severity : FAIL;\n        selectedSeverity === WARN\n            ? bumpTestWarning(fieldName, statement)\n            : bumpTestError(fieldName, statement);\n    };\n\n    /**\n     * Uniquely add a field to the `skipped` list\n     * @param {string} fieldName - The name of the field.\n     */\n    const addToSkipped = (fieldName) => {\n        !output.skipped.includes(fieldName) && output.skipped.push(fieldName);\n    };\n\n    /**\n     * Runs completion callbacks aggregated by `done`\n     * regardless of success or failure\n     */\n    const runCompletionCallbacks = () => {\n        completionCallbacks.forEach((cb) => !cancelled && cb(output));\n    };\n\n    /**\n     * Marks a field as async\n     * @param {string} fieldName - The name of the field.\n    */\n    const markAsync = (fieldName) => {\n        asyncObject = asyncObject || {};\n        asyncObject[fieldName] = asyncObject[fieldName] || {};\n        asyncObject[fieldName] = {\n            done: false,\n            callbacks: asyncObject[fieldName].callbacks || []\n        };\n    };\n\n    /**\n     * Marks an async field as done\n     * @param {string} fieldName - The name of the field.\n    */\n    const markAsDone = (fieldName) => {\n        if (!fieldName) {\n            return runCompletionCallbacks();\n        }\n\n        if (asyncObject !== null && asyncObject[fieldName]) {\n            asyncObject[fieldName].done = true;\n\n            // run field callbacks set in `after`\n            if (asyncObject[fieldName].callbacks) {\n                asyncObject[fieldName].callbacks.forEach((callback) => !cancelled && callback(output));\n            }\n        }\n    };\n\n    /**\n     * Registers callback functions to be run when test suite is done running\n     * If current suite is not async, runs the callback immediately\n     * @param {function} callback the function to be called on done\n     * @return {object} output object\n     */\n    const done = (callback) => {\n        if (typeof callback !== 'function') {return output;}\n        if (!asyncObject) {\n            callback(output);\n        }\n\n        completionCallbacks.push(callback);\n        return output;\n    };\n\n    /**\n     * Registers callback functions to be run when a certain field is done running\n     * If field is not async, runs the callback immediately\n     * @param {string} fieldName - The name of the field.\n     * @param {function} callback the function to be called on done\n     * @return {object} output object\n     */\n    const after = (fieldName, callback) => {\n        if (typeof callback !== 'function') {\n            return output;\n        }\n\n        asyncObject = asyncObject || {};\n        if (!asyncObject[fieldName] && output.testsPerformed[fieldName]) {\n            callback(output);\n        } else if (asyncObject[fieldName]) {\n            asyncObject[fieldName].callbacks = [...(asyncObject[fieldName].callbacks || []), callback];\n        }\n\n        return output;\n    };\n\n    /**\n     * cancels done/after callbacks. They won't invoke when async operations complete\n     */\n    const cancel = () => {\n        cancelled = true;\n\n        return output;\n    };\n\n    /**\n     * Gets all the errors of a field, or of the whole object\n     * @param {string} fieldName - The name of the field.\n     * @return {array | object} The field's errors, or all errors\n     */\n    const getErrors = (fieldName) => {\n        if (!fieldName) {\n            return output.errors;\n        }\n\n        if (output.errors[fieldName]) {\n            return output.errors[fieldName];\n        }\n\n        return [];\n    };\n\n    /**\n     * Gets all the warnings of a field, or of the whole object\n     * @param {string} [fieldName] - The name of the field.\n     * @return {array | object} The field's warnings, or all warnings\n     */\n    const getWarnings = (fieldName) => {\n        if (!fieldName) {\n            return output.warnings;\n        }\n\n        if (output.warnings[fieldName]) {\n            return output.warnings[fieldName];\n        }\n\n        return [];\n    };\n\n    /**\n     * Checks if a certain field (or the whole suite) has errors\n     * @param {string} [fieldName]\n     * @return {boolean}\n     */\n    const hasErrors = (fieldName) => {\n        if (!fieldName) {\n            return hasValidationErrors;\n        }\n\n        return Boolean(output.getErrors(fieldName).length);\n    };\n\n    /**\n     * Checks if a certain field (or the whole suite) has warnings\n     * @param {string} [fieldName] - The name of the field.\n     * @return {boolean}\n     */\n    const hasWarnings = (fieldName) => {\n        if (!fieldName) {\n            return hasValidationWarnings;\n        }\n\n        return Boolean(output.getWarnings(fieldName).length);\n    };\n\n    const output = {\n        name,\n        failCount: 0,\n        warnCount: 0,\n        testCount: 0,\n        testsPerformed: {},\n        errors: {},\n        warnings: {},\n        skipped: []\n    };\n\n    Object.defineProperty(output, 'hasErrors', {\n        value: hasErrors,\n        writable: true,\n        configurable: true,\n        enumerable: false\n    });\n\n    Object.defineProperty(output, 'hasWarnings', {\n        value: hasWarnings,\n        writable: true,\n        configurable: true,\n        enumerable: false\n    });\n\n    Object.defineProperty(output, 'getErrors', {\n        value: getErrors,\n        writable: true,\n        configurable: true,\n        enumerable: false\n    });\n\n    Object.defineProperty(output, 'getWarnings', {\n        value: getWarnings,\n        writable: true,\n        configurable: true,\n        enumerable: false\n    });\n\n    Object.defineProperty(output, 'done', {\n        value: done,\n        writable: true,\n        configurable: true,\n        enumerable: false\n    });\n\n    Object.defineProperty(output, 'after', {\n        value: after,\n        writable: true,\n        configurable: true,\n        enumerable: false\n    });\n\n    Object.defineProperty(output, 'cancel', {\n        value: cancel,\n        writable: true,\n        configurable: true,\n        enumerable: false\n    });\n\n    return {\n        initFieldCounters,\n        bumpTestError,\n        bumpTestWarning,\n        bumpTestCounter,\n        fail,\n        addToSkipped,\n        runCompletionCallbacks,\n        markAsync,\n        markAsDone,\n        output\n    };\n};\n\nexport default passableResult;","/** Class representing validation inclusion and exclusion groups */\nclass Specific {\n\n    /**\n     * Initialize Specific object\n     *\n     * @param {String | Array | Object | undefined} specific\n     */\n    constructor(specific) {\n\n        if (!specific) { return; }\n\n        if (!Specific.is(specific)) {\n            throw new TypeError();\n        }\n\n        if (typeof specific === 'string' || Array.isArray(specific)) {\n            if (specific.length === 0) { return; }\n            this.only = this.populateGroup(this.only, specific);\n            return;\n        }\n\n        if (specific.only) {\n            this.only = this.populateGroup(this.only, specific.only);\n        }\n\n        if (specific.not) {\n            this.not = this.populateGroup(this.not, specific.not);\n        }\n    }\n\n    /**\n     * Populate inclusion and exclusion groups\n     *\n     * @param {Object} group - the group to populate.\n     * @param {String | Array} field - the field to add to the group\n     * @return {Object} modified group\n     */\n    populateGroup(group, field) {\n        group = group || {};\n\n        if (typeof field === 'string') {\n            group[field] = true;\n        } else if (Array.isArray(field)) {\n            field.forEach((item) => group[item] = true);\n        }\n\n        return group;\n    }\n\n    /**\n     * Checkes whether a given field name is in exclusion group\n     * or not a member of inclusion group (when present)\n     *\n     * @param {String} fieldName\n     * @return {Boolean}\n     */\n    excludes(fieldName) {\n        if (this.only && !this.only[fieldName]) {\n            return true;\n        }\n\n        if (this.not && this.not[fieldName]) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Test whether a given argument matches\n     * the `specific` filter convention\n     *\n     * @param {Any} item\n     * @return {boolean}\n     */\n    static is(item) {\n        if (Array.isArray(item)) {\n            return item.every((item) => typeof item === 'string');\n        }\n\n        if (typeof item === 'string') { return true; }\n\n        if (item !== null && typeof item === 'object' && (\n            item.hasOwnProperty('only')\n            || item.hasOwnProperty('not')\n        )) {\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport default Specific;","import ctx from '../context';\nimport test, { runAsync } from '../test';\nimport passableResult from '../passableResult';\nimport Specific from '../Specific';\n\nconst initError = (name, value, doc) => `[Passable]: failed during suite initialization. Unexpected '${typeof value}' for '${name}' argument.\n    See: ${doc ? doc : 'https://fiverr.github.io/passable/getting_started/writing_tests.html'}`;\n\nconst passable = (name, tests, specific) => {\n\n    if (typeof name !== 'string') {\n        throw new TypeError(initError('suite name', name));\n    }\n\n    if (typeof tests !== 'function') {\n        throw new TypeError(initError('tests', tests));\n    }\n\n    if (specific && !Specific.is(specific)) {\n        throw new TypeError(initError('specific', tests, 'https://fiverr.github.io/passable/test/specific.html'));\n    }\n\n    const result = passableResult(name);\n\n    const pending = [];\n\n    const parent = {\n        specific: new Specific(specific),\n        result,\n        pending\n    };\n\n    ctx.set(parent);\n\n    tests(test, result.output);\n    ctx.set(null);\n\n    [...pending].forEach(runAsync);\n\n    return result.output;\n};\n\nexport default passable;\n","function isArray(value) {\n    return Boolean(Array.isArray(value));\n}\n\nisArray.negativeForm = 'isNotArray';\n\nexport default isArray;\n","function isNumber(value) {\n    return Boolean(typeof value === 'number');\n}\n\nisNumber.negativeForm = 'isNotNumber';\n\nexport default isNumber;\n","function isString(value) {\n    return Boolean(typeof value === 'string');\n}\n\nisString.negativeForm = 'isNotString';\n\nexport default isString;\n","function matches(value, regex) {\n    if (regex instanceof RegExp) {\n        return regex.test(value);\n    } else if (typeof regex === 'string') {\n        return new RegExp(regex).test(value);\n    } else {\n        return false;\n    }\n}\n\nmatches.negativeForm = 'notMatches';\n\nexport default matches;\n","function inside(value, arg1) {\n\n    if (Array.isArray(arg1) && ['string', 'number', 'boolean'].includes(typeof value)) {\n        return arg1.includes(value);\n    }\n\n    // both value and arg1 are strings\n    if (typeof arg1 === 'string' && typeof value === 'string') {\n        return arg1.includes(value);\n    }\n\n    return false;\n}\n\ninside.negativeForm = 'notInside';\n\nexport default inside;\n","function equals(value, arg1) {\n    return value === arg1;\n}\n\nequals.negativeForm = 'notEquals';\n\nexport default equals;\n","function isNumeric(value) {\n    const result = !isNaN(parseFloat(value)) && !isNaN(Number(value)) && isFinite(value);\n    return Boolean(result);\n}\n\nisNumeric.negativeForm = 'isNotNumeric';\n\nexport default isNumeric;\n","import isNumeric from '../is_numeric';\n\nfunction isEmpty(value) {\n    if (!value) {\n        return true;\n    } else if (isNumeric(value)) {\n        return value === 0;\n    } else if (value.hasOwnProperty('length')) {\n        return value.length === 0;\n    } else if (typeof value === 'object') {\n        return Object.keys(value).length === 0;\n    } else {\n        return true;\n    }\n}\n\nisEmpty.negativeForm = 'isNotEmpty';\n\nexport default isEmpty;\n","import isNumeric from '../is_numeric';\n\nfunction greaterThan(value, arg1) {\n    return isNumeric(value) && isNumeric(arg1) && Number(value) > Number(arg1);\n}\n\ngreaterThan.alias = 'gt';\n\nexport default greaterThan;\n","import isNumeric from '../is_numeric';\n\nfunction greaterThanOrEquals(value, arg1) {\n    return isNumeric(value) && isNumeric(arg1) && Number(value) >= Number(arg1);\n}\n\ngreaterThanOrEquals.alias = 'gte';\n\nexport default greaterThanOrEquals;\n","import isNumeric from '../is_numeric';\n\nfunction lessThan(value, arg1) {\n    return isNumeric(value) && isNumeric(arg1) && Number(value) < Number(arg1);\n}\n\nlessThan.alias = 'lt';\n\nexport default lessThan;\n","import isNumeric from '../is_numeric';\n\nfunction lessThanOrEquals(value, arg1) {\n    return isNumeric(value) && isNumeric(arg1) && Number(value) <= Number(arg1);\n}\n\nlessThanOrEquals.alias = 'lte';\n\nexport default lessThanOrEquals;\n","function longerThan(value, arg1) {\n    return value.length > arg1;\n}\n\nexport default longerThan;\n","function longerThanOrEquals(value, arg1) {\n    return value.length >= arg1;\n}\n\nexport default longerThanOrEquals;\n","function shorterThan(value, arg1) {\n    return value.length < arg1;\n}\n\nexport default shorterThan;\n","function shorterThanOrEquals(value, arg1) {\n    return value.length <= arg1;\n}\n\nexport default shorterThanOrEquals;\n","function lengthEquals(value, arg1) {\n    return value.length === arg1;\n}\n\nlengthEquals.negativeForm = 'lengthNotEquals';\n\nexport default lengthEquals;\n","/**\n * Collects rules with `negativeForm` or `alias` attributes.\n * Adds a rule with the correct configuration.\n * @param {Object} rules - enforce rules object\n * @returns {Object} extended rules object\n */\nfunction extendRules(rules) {\n\n    for (const rule in rules) {\n        const negativeForm = rules[rule].negativeForm;\n        const alias = rules[rule].alias;\n\n        if (negativeForm) {\n            rules[negativeForm] = (...args) => !rules[rule](...args);\n        }\n\n        if (alias) {\n            rules[alias] = rules[rule];\n        }\n    }\n\n    return rules;\n}\n\nexport default extendRules;\n","import isArray from './rules/is_array';\nimport isNumber from './rules/is_number';\nimport isString from './rules/is_string';\nimport matches from './rules/matches';\nimport inside from './rules/inside';\nimport equals from './rules/equals';\nimport isNumeric from './rules/is_numeric';\nimport isEmpty from './rules/is_empty';\nimport greaterThan from './rules/greater_than';\nimport greaterThanOrEquals from './rules/greater_than_or_equals';\nimport lessThan from './rules/less_than';\nimport lessThanOrEquals from './rules/less_than_or_equals';\nimport longerThan from './rules/longer_than';\nimport longerThanOrEquals from './rules/longer_than_or_equals';\nimport shorterThan from './rules/shorter_than';\nimport shorterThanOrEquals from './rules/shorter_than_or_equals';\nimport lengthEquals from './rules/length_equals';\nimport extendRules from './helpers/extend_rules';\n\nconst rules = {\n    isArray,\n    isNumber,\n    isString,\n    matches,\n    inside,\n    equals,\n    isNumeric,\n    isEmpty,\n    greaterThan,\n    greaterThanOrEquals,\n    lessThan,\n    lessThanOrEquals,\n    longerThan,\n    longerThanOrEquals,\n    shorterThan,\n    shorterThanOrEquals,\n    lengthEquals\n};\n\nexport default extendRules(rules);","/**\n * Run a single rule against enforced value (e.g. `isNumber()`)\n *\n * @param {Function} rule - rule to run\n * @param {Any} value\n * @param {Array} args list of arguments sent from consumer\n */\nfunction rule(rule, value, ...args) {\n\n    if (typeof rule !== 'function') { return; }\n\n    if (rule(value, ...args) !== true) {\n        throw new Error(`[Enforce]: invalid ${typeof value} value`);\n    }\n}\n\nexport default rule;\n","import rules from './runnables';\nimport ruleRunner from './runners/rule';\n\nconst isRule = (rulesObject, name) => (\n    rulesObject.hasOwnProperty(name) && typeof rulesObject[name] === 'function'\n);\n\nconst Enforce = (customRules = {}) => {\n    const rulesObject = {...rules, ...customRules};\n\n    if (typeof Proxy === 'function') {\n        return (value) => {\n            const proxy = new Proxy(rulesObject, {\n                get: (rules, fnName) => {\n                    if (!isRule(rules, fnName)) { return; }\n\n                    return (...args) => {\n                        ruleRunner(rules[fnName], value, ...args);\n                        return proxy;\n                    };\n                }\n            });\n            return proxy;\n        };\n    }\n\n    // This is relatively heavier, and preferably should only be done when lacking proxy support\n    return (value) => Object.keys(rulesObject).reduce((allRules, fnName) => {\n        if (!isRule(rulesObject, fnName)) { return allRules; }\n\n        allRules[fnName] = (...args) => {\n            ruleRunner(rulesObject[fnName], value, ...args);\n            return allRules;\n        };\n\n        return allRules;\n    }, {});\n};\n\nexport default Enforce;\n","/**\n * Run tests and catch errors\n *\n * @param {function} callback The test content\n * @return {boolean}\n */\nfunction validate(test) {\n\n    if (typeof test !== 'function' && !(test instanceof Promise)) {\n        throw new TypeError(`[Validate]: expected ${typeof test} to be a function.`);\n    }\n\n    try {\n        return test() !== false;\n    } catch (_) {\n        return false;\n    }\n}\n\nexport default validate;\n","/**\n * Runs given functions and returns true if any of them passes\n * @param  {[]Function} args array of assertion functions\n * @return {Function} A function which, when called, invokes all arguments\n */\nconst any = (...args) => () => args.some((fn) => {\n    try {\n        return fn() !== false;\n    } catch (err) {\n        return false;\n    }\n});\n\nexport default any;\n","import passable from './core/passable';\nimport test from './core/test';\nimport Enforce from './Enforce';\nimport validate from './utilities/validate';\nimport any from './utilities/any';\nimport { WARN, FAIL } from './constants';\n\npassable.VERSION = PASSABLE_VERSION;\npassable.enforce = new Enforce({});\npassable.test = test;\npassable.Enforce = Enforce;\npassable.validate = validate;\npassable.any = any;\npassable.WARN = WARN;\npassable.FAIL = FAIL;\n\nexport default passable;\n"],"names":["Context","prototype","set","parent","context","runAsync","testPromise","fieldName","statement","severity","result","markAsync","done","clearPendingTest","hasRemainingPendingTests","markAsDone","fail","pending","includes","then","e","filter","t","length","some","preRun","testFn","register","specific","excludes","addToSkipped","initFieldCounters","bumpTestCounter","push","test","ctx","WARN","FAIL","severities","passableResult","name","completionCallbacks","asyncObject","hasValidationErrors","hasValidationWarnings","cancelled","output","testsPerformed","testCount","failCount","warnCount","bumpTestWarning","warnings","bumpTestError","errors","selectedSeverity","skipped","runCompletionCallbacks","forEach","cb","callbacks","callback","after","cancel","getErrors","getWarnings","hasErrors","Boolean","hasWarnings","Object","defineProperty","value","writable","configurable","enumerable","Specific","is","TypeError","Array","isArray","only","populateGroup","not","group","field","item","every","hasOwnProperty","initError","doc","passable","tests","negativeForm","isNumber","isString","matches","regex","RegExp","inside","arg1","equals","isNumeric","isNaN","parseFloat","Number","isFinite","isEmpty","keys","greaterThan","alias","greaterThanOrEquals","lessThan","lessThanOrEquals","longerThan","longerThanOrEquals","shorterThan","shorterThanOrEquals","lengthEquals","extendRules","rules","rule","args","Error","isRule","rulesObject","Enforce","customRules","Proxy","proxy","get","fnName","ruleRunner","reduce","allRules","validate","Promise","_","any","fn","err","VERSION","PASSABLE_VERSION","enforce"],"mappings":"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"}