{"version":3,"file":"passable.js","sources":["../src/core/context/index.js","../src/core/test/index.js","../src/constants.js","../src/core/passableResult/index.js","../src/core/Specific/index.js","../src/core/passable/index.js","../src/Enforce/runnables/rules/is_array/index.js","../src/Enforce/runnables/rules/is_number/index.js","../src/Enforce/runnables/rules/is_string/index.js","../src/Enforce/runnables/rules/matches/index.js","../src/Enforce/runnables/rules/inside/index.js","../src/Enforce/runnables/rules/equals/index.js","../src/Enforce/runnables/rules/is_numeric/index.js","../src/Enforce/runnables/rules/is_empty/index.js","../src/Enforce/runnables/rules/greater_than/index.js","../src/Enforce/runnables/rules/greater_than_or_equals/index.js","../src/Enforce/runnables/rules/less_than/index.js","../src/Enforce/runnables/rules/less_than_or_equals/index.js","../src/Enforce/runnables/rules/longer_than/index.js","../src/Enforce/runnables/rules/longer_than_or_equals/index.js","../src/Enforce/runnables/rules/shorter_than/index.js","../src/Enforce/runnables/rules/shorter_than_or_equals/index.js","../src/Enforce/runnables/rules/length_equals/index.js","../src/Enforce/runnables/helpers/extend_rules/index.js","../src/Enforce/runnables/index.js","../src/Enforce/runners/rule/index.js","../src/Enforce/index.js","../src/utilities/validate/index.js","../src/utilities/any/index.js","../src/index.js"],"sourcesContent":["const Context = function() {}; // eslint-disable-line\n\nContext.prototype.set = function(parent) {\n    this.parent = parent;\n    return this;\n};\n\nconst context = new Context();\n\nexport default context;","// @flow\n\nimport ctx from '../context';\n\n/**\n * Runs all async tests, updates output object with result\n * @param {Promise} testPromise the actual test callback or promise\n */\nexport const runAsync: Function = (testPromise: AsyncTest) => {\n    const { fieldName, statement, severity, parent }: TestProperties = testPromise;\n\n    parent.result.markAsync(fieldName);\n\n    const done: Function = () => {\n        clearPendingTest(testPromise);\n        if (!hasRemainingPendingTests(parent, fieldName)) {\n            parent.result.markAsDone(fieldName);\n        }\n\n        if (!hasRemainingPendingTests(parent)) {\n            parent.result.markAsDone();\n        }\n    };\n\n    const fail: Function = () => {\n        if (parent.pending.includes(testPromise)) {\n            parent.result.fail(fieldName, statement, severity);\n        }\n\n        done();\n    };\n\n    try {\n        testPromise.then(done, fail);\n    } catch (e) {\n        fail();\n    }\n};\n\n/**\n * Clears pending test from parent context\n * @param {Promise} testPromise the actual test callback or promise\n */\nconst clearPendingTest: Function = (testPromise: AsyncTest) => {\n    testPromise.parent.pending = testPromise.parent.pending.filter((t) => t !== testPromise);\n};\n\n/**\n * Checks if there still are remaining pending tests for given criteria\n * @param {Object} parent Parent context\n * @param {String} fieldName name of the field to test against\n * @return {Boolean}\n */\nconst hasRemainingPendingTests: Function = (parent: ParentContext, fieldName: string) => {\n    if (!parent.pending.length) {\n        return false;\n    }\n\n    if (fieldName) {\n        return parent.pending.some((testPromise) => testPromise.fieldName === fieldName);\n    }\n\n    return !!parent.pending.length;\n};\n\n/**\n * Performs shallow run over test functions, assuming sync tests only. Returning result\n * @param {function | Promise} testFn the actual test callback or promise\n * @return {*} result from test function\n */\nconst preRun: Function = (testFn: PassableTest) => {\n    let result: AnyValue;\n    try {\n        result = testFn();\n    } catch (e) {\n        result = false;\n    }\n    if (result === false) {\n        testFn.parent.result.fail(testFn.fieldName, testFn.statement, testFn.severity);\n    }\n\n    return result;\n};\n\n/**\n * Registers all supplied tests, if async - adds to pending array\n * @param {function | Promise} testFn the actual test callback or promise\n */\nconst register: Function = (testFn: PassableTest) => {\n    const { parent, fieldName }: TestProperties = testFn;\n    let pending: boolean = false;\n    let result: AnyValue;\n\n    if (parent.specific.excludes(fieldName)) {\n        parent.result.addToSkipped(fieldName);\n        return;\n    }\n\n    parent.result.initFieldCounters(fieldName);\n    parent.result.bumpTestCounter(fieldName);\n\n    if (testFn && typeof testFn.then === 'function') {\n        pending = true;\n    } else {\n        result = preRun(testFn);\n    }\n\n    if (result && typeof result.then === 'function') {\n        pending = true;\n        testFn = Object.assign(result, testFn);\n    }\n\n    if (pending) {\n        // $FlowFixMe <- can't convince flow I actually refined here\n        parent.pending.push(testFn);\n    }\n};\n\n/**\n * The function used by the consumer\n * @param {String} fieldName name of the field to test against\n * @param {String} statement the message shown to the user in case of a failure\n * @param {function | Promise} testFn the actual test callback or promise\n * @param {String} Severity indicates whether the test should fail or warn\n */\nconst test: Function = (fieldName: string, statement: string, testFn: PassableTest, severity: Severity) => {\n    if (!testFn) {\n        return;\n    }\n    if (typeof testFn.then === 'function' || typeof testFn === 'function') {\n        Object.assign(testFn, {\n            fieldName,\n            statement,\n            severity,\n            parent: ctx.parent\n        });\n\n        register(testFn);\n    }\n};\n\nexport default test;","// @flow\n\nexport const WARN: Severity = 'warn';\nexport const FAIL: Severity = 'fail';","import { WARN, FAIL } from '../../constants';\n\nconst severities = [ WARN, FAIL ];\n\nconst passableResult = (name) => {\n\n    const completionCallbacks = [];\n    let asyncObject = null;\n    let hasValidationErrors = false;\n    let hasValidationWarnings = false;\n    let cancelled = false;\n\n    /**\n     * Initializes specific field's counters\n     * @param {string} fieldName - The name of the field.\n     */\n    const initFieldCounters = (fieldName) => {\n        if (output.testsPerformed[fieldName]) { return output; }\n\n        output.testsPerformed[fieldName] = {\n            testCount: 0,\n            failCount: 0,\n            warnCount: 0\n        };\n    };\n\n    /**\n     * Bumps test counters to indicate tests that's being performed\n     * @param {string} fieldName - The name of the field.\n     */\n    const bumpTestCounter = (fieldName) => {\n        if (!output.testsPerformed[fieldName]) { return output; }\n\n        output.testsPerformed[fieldName].testCount++;\n        output.testCount++;\n    };\n\n    /**\n     * Bumps field's warning counts and adds warning string\n     * @param {string} fieldName - The name of the field.\n     * @param {string} statement - The error string to add to the object.\n     */\n    const bumpTestWarning = (fieldName, statement) => {\n        hasValidationWarnings = true;\n        output.warnings[fieldName] = output.warnings[fieldName] || [];\n        output.warnings[fieldName].push(statement);\n        output.warnCount++;\n        output.testsPerformed[fieldName].warnCount++;\n    };\n\n    /**\n     * Bumps field's error counts and adds error string\n     * @param {string} fieldName - The name of the field.\n     * @param {string} statement - The error string to add to the object.\n     */\n    const bumpTestError = (fieldName, statement) => {\n        hasValidationErrors = true;\n        output.errors[fieldName] = output.errors[fieldName] || [];\n        output.errors[fieldName].push(statement);\n        output.failCount++;\n        output.testsPerformed[fieldName].failCount++;\n    };\n\n    /**\n     * Fails a field and updates output accordingly\n     * @param {string} fieldName - The name of the field.\n     * @param {string} statement - The error string to add to the object.\n     * @param {string} severity - Whether it is a `fail` or `warn` test.\n     */\n    const fail = (fieldName, statement, severity) => {\n        if (!output.testsPerformed[fieldName]) { return output; }\n\n        severity === WARN\n            ? bumpTestWarning(fieldName, statement)\n            : bumpTestError(fieldName, statement);\n    };\n\n    /**\n     * Uniquely add a field to the `skipped` list\n     * @param {string} fieldName - The name of the field.\n     */\n    const addToSkipped = (fieldName) => {\n        !output.skipped.includes(fieldName) && output.skipped.push(fieldName);\n    };\n\n    /**\n     * Runs completion callbacks aggregated by `done`\n     * regardless of success or failure\n     */\n    const runCompletionCallbacks = () => {\n        completionCallbacks.forEach((cb) => !cancelled && cb(output));\n    };\n\n    /**\n     * Marks a field as async\n     * @param {string} fieldName - The name of the field.\n    */\n    const markAsync = (fieldName) => {\n        asyncObject = asyncObject || {};\n        asyncObject[fieldName] = asyncObject[fieldName] || {};\n        asyncObject[fieldName] = {\n            done: false,\n            callbacks: asyncObject[fieldName].callbacks || []\n        };\n    };\n\n    /**\n     * Marks an async field as done\n     * @param {string} fieldName - The name of the field.\n    */\n    const markAsDone = (fieldName) => {\n        if (!fieldName) {\n            return runCompletionCallbacks();\n        }\n\n        if (asyncObject !== null && asyncObject[fieldName]) {\n            asyncObject[fieldName].done = true;\n\n            // run field callbacks set in `after`\n            if (asyncObject[fieldName].callbacks) {\n                asyncObject[fieldName].callbacks.forEach((callback) => !cancelled && callback(output));\n            }\n        }\n    };\n\n    /**\n     * Registers callback functions to be run when test suite is done running\n     * If current suite is not async, runs the callback immediately\n     * @param {function} callback - the function to be called on done.\n     * @return {object} - output object.\n     */\n    const done = (callback) => {\n        if (typeof callback !== 'function') {return output;}\n        if (!asyncObject) {\n            callback(output);\n        }\n\n        completionCallbacks.push(callback);\n        return output;\n    };\n\n    /**\n     * Registers callback functions to be run when a certain field is done running\n     * If field is not async, runs the callback immediately\n     * @param {string} fieldName - The name of the field.\n     * @param {function} callback - the function to be called on done.\n     * @return {object} output object.\n     */\n    const after = (fieldName, callback) => {\n        if (typeof callback !== 'function') {\n            return output;\n        }\n\n        asyncObject = asyncObject || {};\n        if (!asyncObject[fieldName] && output.testsPerformed[fieldName]) {\n            callback(output);\n        } else if (asyncObject[fieldName]) {\n            asyncObject[fieldName].callbacks = [...(asyncObject[fieldName].callbacks || []), callback];\n        }\n\n        return output;\n    };\n\n    /**\n     * cancels done/after callbacks. They won't invoke when async operations complete\n     */\n    const cancel = () => {\n        cancelled = true;\n\n        return output;\n    };\n\n    /**\n     * Gets all the errors of a field, or of the whole object\n     * @param {string} fieldName - The name of the field.\n     * @return {array | object} - The field's errors, or all errors\n     */\n    const getErrors = (fieldName) => {\n        if (!fieldName) {\n            return output.errors;\n        }\n\n        if (output.errors[fieldName]) {\n            return output.errors[fieldName];\n        }\n\n        return [];\n    };\n\n    /**\n     * Gets all the warnings of a field, or of the whole object\n     * @param {string} fieldName - The name of the field.\n     * @return {array | object} The field's warnings, or all warnings.\n     */\n    const getWarnings = (fieldName) => {\n        if (!fieldName) {\n            return output.warnings;\n        }\n\n        if (output.warnings[fieldName]) {\n            return output.warnings[fieldName];\n        }\n\n        return [];\n    };\n\n    /**\n     * Checks if a certain field (or the whole suite) has errors\n     * @param {string} fieldName - The name of the field.\n     * @return {boolean}\n     */\n    const hasErrors = (fieldName) => {\n        if (!fieldName) {\n            return hasValidationErrors;\n        }\n\n        return Boolean(output.getErrors(fieldName).length);\n    };\n\n    /**\n     * Checks if a certain field (or the whole suite) has warnings\n     * @param {string} fieldName - The name of the field.\n     * @return {boolean}\n     */\n    const hasWarnings = (fieldName) => {\n        if (!fieldName) {\n            return hasValidationWarnings;\n        }\n\n        return Boolean(output.getWarnings(fieldName).length);\n    };\n\n    const output = {\n        name,\n        failCount: 0,\n        warnCount: 0,\n        testCount: 0,\n        testsPerformed: {},\n        errors: {},\n        warnings: {},\n        skipped: [],\n        hasErrors,\n        hasWarnings,\n        getErrors,\n        getWarnings,\n        done,\n        after,\n        cancel\n    };\n\n    return {\n        initFieldCounters,\n        bumpTestError,\n        bumpTestWarning,\n        bumpTestCounter,\n        fail,\n        addToSkipped,\n        runCompletionCallbacks,\n        markAsync,\n        markAsDone,\n        output\n    };\n};\n\nexport default passableResult;\n","// @flow\n\n/** Class representing validation inclusion and exclusion groups */\nclass Specific {\n    not: SpecificGroup;\n    only: SpecificGroup;\n\n    /**\n     * Initialize Specific object\n     *\n     * @param {String | Array | Object | undefined} specific\n     */\n    constructor(specific: ?SpecificArgs) {\n\n        if (!specific) { return; }\n\n        if (!Specific.is(specific)) {\n            throw new TypeError();\n        }\n\n        if (typeof specific === 'string' || Array.isArray(specific)) {\n            if (specific.length === 0) { return; }\n            this.only = this.populateGroup(this.only, specific);\n            return;\n        }\n\n        if (specific.only) {\n            this.only = this.populateGroup(this.only, specific.only);\n        }\n\n        if (specific.not) {\n            this.not = this.populateGroup(this.not, specific.not);\n        }\n    }\n\n    /**\n     * Populate inclusion and exclusion groups\n     *\n     * @param {Object} group - the group to populate.\n     * @param {String | Array} field - the field to add to the group\n     * @return {Object} modified group\n     */\n    populateGroup(group: SpecificGroup, field: SpecificField) {\n        group = group || {};\n\n        if (typeof field === 'string') {\n            group[field] = true;\n        } else if (Array.isArray(field)) {\n            field.forEach((item) => group[item] = true);\n        }\n\n        return group;\n    }\n\n    /**\n     * Checkes whether a given field name is in exclusion group\n     * or not a member of inclusion group (when present)\n     *\n     * @param {String} fieldName\n     * @return {Boolean}\n     */\n    excludes(fieldName: string) {\n        if (this.only && !this.only[fieldName]) {\n            return true;\n        }\n\n        if (this.not && this.not[fieldName]) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Test whether a given argument matches\n     * the `specific` filter convention\n     *\n     * @param {Any} item\n     * @return {boolean}\n     */\n    static is(item: AnyValue) {\n        if (Array.isArray(item)) {\n            return item.every((item) => typeof item === 'string');\n        }\n\n        if (typeof item === 'string') { return true; }\n\n        if (item !== null && typeof item === 'object' && (\n            item.hasOwnProperty('only')\n            || item.hasOwnProperty('not')\n        )) {\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport default Specific;","// @flow\n\nimport ctx from '../context';\nimport test, { runAsync } from '../test';\nimport passableResult from '../passableResult';\nimport Specific from '../Specific';\n\nconst initError: Function = (name: string, value: string, doc?: string): string => `[Passable]: failed during suite initialization. Unexpected '${typeof value}' for '${name}' argument.\n    See: ${doc ? doc : 'https://fiverr.github.io/passable/getting_started/writing_tests.html'}`;\n\nconst passable: Function = (name, tests, specific) => {\n\n    if (typeof name !== 'string') {\n        throw new TypeError(initError('suite name', name));\n    }\n\n    if (typeof tests !== 'function') {\n        throw new TypeError(initError('tests', tests));\n    }\n\n    if (specific && !Specific.is(specific)) {\n        throw new TypeError(initError('specific', tests, 'https://fiverr.github.io/passable/test/specific.html'));\n    }\n\n    const result: PassableResult = passableResult(name);\n\n    const pending: Pending = [];\n\n    const parent: ParentContext = {\n        specific: new Specific(specific),\n        result,\n        pending\n    };\n\n    ctx.set(parent);\n\n    tests(test, result.output);\n    ctx.set(null);\n\n    [...pending].forEach(runAsync);\n\n    return result.output;\n};\n\n\nexport default passable;","// @flow\n\nfunction isArray(value: mixed): boolean {\n    return Boolean(Array.isArray(value));\n}\n\nisArray.negativeForm = 'isNotArray';\n\nexport default isArray;","// @flow\n\nfunction isNumber(value: mixed): boolean {\n    return Boolean(typeof value === 'number');\n}\n\nisNumber.negativeForm = 'isNotNumber';\n\nexport default isNumber;","// @flow\n\nfunction isString(value: mixed): boolean {\n    return Boolean(typeof value === 'string');\n}\n\nisString.negativeForm = 'isNotString';\n\nexport default isString;","// @flow\n\nfunction matches(value: string, regex: RegExp | string): boolean {\n\n    if (regex instanceof RegExp) {\n        return regex.test(value);\n    } else if (typeof regex === 'string') {\n        return new RegExp(regex).test(value);\n    } else {\n        return false;\n    }\n}\n\nmatches.negativeForm = 'notMatches';\n\nexport default matches;","// @flow\n\ntype All = NumStrBool | Array<NumStrBool>;\ntype Value = All | Array<NumStrBool>;\ntype Arg = string | Array<NumStrBool>;\n\nfunction inside(value: Value, arg1: Arg): boolean {\n\n    if (Array.isArray(arg1) && ['string', 'number', 'boolean'].includes(typeof value)) {\n        return arg1.includes(value);\n    }\n\n    // both value and arg1 are strings\n    if (typeof arg1 === 'string' && typeof value === 'string') {\n        return arg1.includes(value);\n    }\n\n    return false;\n}\n\ninside.negativeForm = 'notInside';\n\nexport default inside;","// @flow\n\nfunction equals(value: AnyValue, arg1: AnyValue): boolean {\n    return value === arg1;\n}\n\nequals.negativeForm = 'notEquals';\n\nexport default equals;","// @flow\n\nfunction isNumeric(value: mixed): boolean {\n    const result: boolean = !isNaN(parseFloat(value)) && !isNaN(Number(value)) && isFinite(value);\n    return Boolean(result);\n}\n\nisNumeric.negativeForm = 'isNotNumeric';\n\nexport default isNumeric;","// @flow\nimport isNumeric from '../is_numeric';\n\nfunction isEmpty(value: AnyValue): boolean {\n    if (!value) {\n        return true;\n    } else if (isNumeric(value)) {\n        return value === 0;\n    } else if (value.hasOwnProperty('length')) {\n        return value.length === 0;\n    } else if (typeof value === 'object') {\n        return Object.keys(value).length === 0;\n    } else {\n        return true;\n    }\n};\n\nisEmpty.negativeForm = 'isNotEmpty';\n\nexport default isEmpty;","// @flow\nimport isNumeric from '../is_numeric';\n\nfunction greaterThan(value: NumericValue, arg1: NumericValue): boolean {\n    return isNumeric(value) && isNumeric(arg1) && Number(value) > Number(arg1);\n}\n\ngreaterThan.alias = 'gt';\n\nexport default greaterThan;","// @flow\nimport isNumeric from '../is_numeric';\n\nfunction greaterThanOrEquals(value: NumericValue, arg1: NumericValue): boolean {\n    return isNumeric(value) && isNumeric(arg1) && Number(value) >= Number(arg1);\n}\n\ngreaterThanOrEquals.alias = 'gte';\n\nexport default greaterThanOrEquals;","// @flow\nimport isNumeric from '../is_numeric';\n\nfunction lessThan(value: NumericValue, arg1: NumericValue): boolean {\n    return isNumeric(value) && isNumeric(arg1) && Number(value) < Number(arg1);\n}\n\nlessThan.alias = 'lt';\n\nexport default lessThan;","// @flow\nimport isNumeric from '../is_numeric';\n\nfunction lessThanOrEquals(value: NumericValue, arg1: NumericValue): boolean {\n    return isNumeric(value) && isNumeric(arg1) && Number(value) <= Number(arg1);\n}\n\nlessThanOrEquals.alias = 'lte';\n\nexport default lessThanOrEquals;","// @flow\n\nfunction longerThan(value: StringOrArray, arg1: number): boolean {\n    return value.length > arg1;\n}\n\nexport default longerThan;\n","// @flow\n\nfunction longerThanOrEquals(value: StringOrArray, arg1: number): boolean {\n    return value.length >= arg1;\n}\n\nexport default longerThanOrEquals;\n","// @flow\n\nfunction shorterThan(value: StringOrArray, arg1: number): boolean {\n    return value.length < arg1;\n}\n\nexport default shorterThan;\n","// @flow\n\nfunction shorterThanOrEquals(value: StringOrArray, arg1: number): boolean {\n    return value.length <= arg1;\n}\n\nexport default shorterThanOrEquals;\n","// @flow\n\nfunction lengthEquals(value: StringOrArray, arg1: number): boolean {\n    return value.length === arg1;\n}\n\nlengthEquals.negativeForm = 'lengthNotEquals';\n\nexport default lengthEquals;\n","// @flow\n\n/**\n * Collects rules with `negativeForm` or `alias` attributes.\n * Adds a rule with the correct configuration.\n * @param {Object} rules - enforce rules object\n * @returns {Object} extended rules object\n */\nfunction extendRules(rules: EnforceRules) {\n\n    for (const rule: string in rules) {\n        const negativeForm: string = rules[rule].negativeForm;\n        const alias: string = rules[rule].alias;\n\n        if (negativeForm) {\n            rules[negativeForm] = (...args) => !rules[rule](...args);\n        }\n\n        if (alias) {\n            rules[alias] = rules[rule];\n        }\n    }\n\n    return rules;\n}\n\nexport default extendRules;\n","// // @flow\n\nimport isArray from './rules/is_array';\nimport isNumber from './rules/is_number';\nimport isString from './rules/is_string';\nimport matches from './rules/matches';\nimport inside from './rules/inside';\nimport equals from './rules/equals';\nimport isNumeric from './rules/is_numeric';\nimport isEmpty from './rules/is_empty';\nimport greaterThan from './rules/greater_than';\nimport greaterThanOrEquals from './rules/greater_than_or_equals';\nimport lessThan from './rules/less_than';\nimport lessThanOrEquals from './rules/less_than_or_equals';\nimport longerThan from './rules/longer_than';\nimport longerThanOrEquals from './rules/longer_than_or_equals';\nimport shorterThan from './rules/shorter_than';\nimport shorterThanOrEquals from './rules/shorter_than_or_equals';\nimport lengthEquals from './rules/length_equals';\nimport extendRules from './helpers/extend_rules';\n\nconst rules: EnforceRules = {\n    isArray,\n    isNumber,\n    isString,\n    matches,\n    inside,\n    equals,\n    isNumeric,\n    isEmpty,\n    greaterThan,\n    greaterThanOrEquals,\n    lessThan,\n    lessThanOrEquals,\n    longerThan,\n    longerThanOrEquals,\n    shorterThan,\n    shorterThanOrEquals,\n    lengthEquals\n};\n\nexport default extendRules(rules);","// @flow\n\n/**\n * Run a single rule against enforced value (e.g. `isNumber()`)\n *\n * @param {Function} rule - rule to run\n * @param {Any} value\n * @param {Array} args list of arguments sent from consumer\n */\nfunction rule(rule: EnforceRule, value: AnyValue, ...args: RuleArgs): void {\n\n    if (typeof rule !== 'function') { return; }\n\n    if (rule(value, ...args) !== true) {\n        throw new Error(`[Enforce]: invalid ${typeof value} value`);\n    }\n}\n\nexport default rule;\n","// @flow\n\nimport rules from './runnables';\nimport ruleRunner from './runners/rule';\n\n// $FlowFixMe\nconst glob: GlobalObject = Function('return this')();\n\nconst isRule: Function = (rulesObject, name): boolean => (\n    rulesObject.hasOwnProperty(name) && typeof rulesObject[name] === 'function'\n);\n\nconst Enforce: Function = (customRules: EnforceRules = {}): EnforceInstance => {\n    const rulesObject: EnforceRules = {...rules, ...customRules};\n\n    if (typeof Proxy === 'function') {\n        return (value: AnyValue): EnforceRules => {\n            const proxy: EnforceRules = new Proxy(rulesObject, {\n                get: (rules, fnName) => {\n                    if (!isRule(rules, fnName)) { return; }\n\n                    return (...args) => {\n                        ruleRunner(rules[fnName], value, ...args);\n                        return proxy;\n                    };\n                }\n            });\n            return proxy;\n        };\n    }\n\n    // This is relatively heavier, and preferably should only be done when lacking proxy support\n    return (value) => Object.keys(rulesObject).reduce((allRules, fnName) => {\n        if (!isRule(rulesObject, fnName)) { return allRules; }\n\n        allRules[fnName] = (...args) => {\n            ruleRunner(rulesObject[fnName], value, ...args);\n            return allRules;\n        };\n\n        return allRules;\n    }, {});\n};\n\nexport default Enforce;","// @flow\n\n/**\n * Run tests and catch errors\n *\n * @param {function} callback The test content\n * @return {boolean}\n */\nfunction validate(test: PassableTest): boolean {\n\n    if (typeof test !== 'function' && !(test instanceof Promise)) {\n        throw new TypeError(`[Validate]: expected ${typeof test} to be a function.`);\n    }\n\n    try {\n        return test() !== false;\n    } catch (_) {\n        return false;\n    }\n}\n\nexport default validate;","// @flow\n\n/**\n * Runs given functions and returns true if any of them passes\n * @param  {[]Function} args array of assertion functions\n * @return {Function} A function which, when called, invokes all arguments\n */\nconst any: Function = (...args) => () => args.some((fn: Function): boolean => {\n    try {\n        return fn() !== false;\n    } catch (err) {\n        return false;\n    }\n});\n\nexport default any;","// @flow\nimport passable from './core/passable';\nimport test from './core/test';\nimport Enforce from './Enforce';\nimport validate from './utilities/validate';\nimport any from './utilities/any';\nimport { WARN, FAIL } from './constants';\n\npassable.VERSION = PASSABLE_VERSION;\npassable.enforce = new Enforce({});\npassable.test = test;\npassable.Enforce = Enforce;\npassable.validate = validate;\npassable.any = any;\npassable.WARN = WARN;\npassable.FAIL = FAIL;\n\nexport default passable;"],"names":["Context","prototype","set","parent","context","runAsync","testPromise","fieldName","statement","severity","result","markAsync","done","clearPendingTest","hasRemainingPendingTests","markAsDone","fail","pending","includes","then","e","filter","t","length","some","preRun","testFn","register","specific","excludes","addToSkipped","initFieldCounters","bumpTestCounter","push","test","ctx","WARN","FAIL","passableResult","name","completionCallbacks","asyncObject","hasValidationErrors","hasValidationWarnings","cancelled","output","testsPerformed","testCount","failCount","warnCount","bumpTestWarning","warnings","bumpTestError","errors","skipped","runCompletionCallbacks","forEach","cb","callbacks","callback","after","cancel","getErrors","getWarnings","hasErrors","Boolean","hasWarnings","Specific","is","TypeError","Array","isArray","only","populateGroup","not","group","field","item","every","hasOwnProperty","initError","value","doc","passable","tests","negativeForm","isNumber","isString","matches","regex","RegExp","inside","arg1","equals","isNumeric","isNaN","parseFloat","Number","isFinite","isEmpty","Object","keys","greaterThan","alias","greaterThanOrEquals","lessThan","lessThanOrEquals","longerThan","longerThanOrEquals","shorterThan","shorterThanOrEquals","lengthEquals","extendRules","rules","rule","args","Error","glob","Function","isRule","rulesObject","Enforce","customRules","Proxy","proxy","get","fnName","ruleRunner","reduce","allRules","validate","Promise","_","any","fn","err","VERSION","PASSABLE_VERSION","enforce"],"mappings":"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"}